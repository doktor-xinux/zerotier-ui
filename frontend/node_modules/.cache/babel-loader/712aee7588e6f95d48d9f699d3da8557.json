{"ast":null,"code":"import _asyncToGenerator from\"/mnt/Datengrab/python/Zero-tier/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/mnt/Datengrab/python/Zero-tier/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/mnt/Datengrab/python/Zero-tier/frontend/node_modules/@babel/runtime/regenerator/index.js\";import{useState,useEffect}from\"react\";import{useHistory}from\"react-router-dom\";import{Divider,Button,Grid,Typography,Box}from\"@material-ui/core\";import useStyles from\"./HomeLoggedIn.styles\";import NetworkButton from\"./components/NetworkButton\";import API from\"utils/API\";import{generateNetworkConfig}from\"utils/NetworkConfig\";import Footer from\"components/Footer/Footer\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function HomeLoggedIn(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),networks=_useState2[0],setNetworks=_useState2[1];var classes=useStyles();var history=useHistory();var createNetwork=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var network;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return API.post(\"network\",generateNetworkConfig());case 2:network=_context.sent;console.log(network);history.push(\"/network/\"+network.data.data[\"config\"][\"id\"]);case 5:case\"end\":return _context.stop();}}},_callee);}));return function createNetwork(){return _ref.apply(this,arguments);};}();useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var networks;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return API.get(\"network\");case 2:networks=_context2.sent;setNetworks(networks.data.data);console.log(\"Networks:\",networks.data.data);case 5:case\"end\":return _context2.stop();}}},_callee2);}));return _fetchData.apply(this,arguments);}fetchData();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:classes.root,children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",className:classes.createBtn,onClick:createNetwork,children:\"Create A Network\"}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,className:classes.container,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",children:\"Controller networks\"}),networks[0]&&\"Network controller address\",/*#__PURE__*/_jsx(Box,{fontWeight:\"fontWeightBold\",children:networks[0]&&networks[0][\"id\"].slice(0,10)})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:\"auto\",children:[/*#__PURE__*/_jsx(Typography,{children:\"Networks\"}),/*#__PURE__*/_jsx(Grid,{item:true,children:networks[0]?networks.map(function(network){return/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(NetworkButton,{network:network})},network[\"id\"]);}):/*#__PURE__*/_jsx(\"div\",{children:\"Please create at least one network\"})})]})]}),/*#__PURE__*/_jsx(Footer,{})]});}export default HomeLoggedIn;","map":{"version":3,"names":["useState","useEffect","useHistory","Divider","Button","Grid","Typography","Box","useStyles","NetworkButton","API","generateNetworkConfig","Footer","HomeLoggedIn","networks","setNetworks","classes","history","createNetwork","post","network","console","log","push","data","fetchData","get","root","createBtn","container","slice","map"],"sources":["/mnt/Datengrab/python/Zero-tier/frontend/src/components/HomeLoggedIn/HomeLoggedIn.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { Divider, Button, Grid, Typography, Box } from \"@material-ui/core\";\nimport useStyles from \"./HomeLoggedIn.styles\";\n\nimport NetworkButton from \"./components/NetworkButton\";\n\nimport API from \"utils/API\";\nimport { generateNetworkConfig } from \"utils/NetworkConfig\";\n\nimport Footer from \"components/Footer/Footer\";\n\nfunction HomeLoggedIn() {\n  const [networks, setNetworks] = useState([]);\n\n  const classes = useStyles();\n  const history = useHistory();\n\n  const createNetwork = async () => {\n    const network = await API.post(\"network\", generateNetworkConfig());\n    console.log(network);\n    history.push(\"/network/\" + network.data.data[\"config\"][\"id\"]);\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const networks = await API.get(\"network\");\n      setNetworks(networks.data.data);\n      console.log(\"Networks:\", networks.data.data);\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.createBtn}\n        onClick={createNetwork}\n      >\n        Create A Network\n      </Button>\n      <Divider />\n      <Grid container spacing={3} className={classes.container}>\n        <Grid item xs={6}>\n          <Typography variant=\"h5\">Controller networks</Typography>\n          {networks[0] && \"Network controller address\"}\n          <Box fontWeight=\"fontWeightBold\">\n            {networks[0] && networks[0][\"id\"].slice(0, 10)}\n          </Box>\n        </Grid>\n        <Grid item xs=\"auto\">\n          <Typography>Networks</Typography>\n          <Grid item>\n            {networks[0] ? (\n              networks.map((network) => (\n                <Grid key={network[\"id\"]} item>\n                  <NetworkButton network={network} />\n                </Grid>\n              ))\n            ) : (\n              <div>Please create at least one network</div>\n            )}\n          </Grid>\n        </Grid>\n      </Grid>\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default HomeLoggedIn;\n"],"mappings":"6XAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,UAAT,KAA2B,kBAA3B,CAEA,OAASC,OAAT,CAAkBC,MAAlB,CAA0BC,IAA1B,CAAgCC,UAAhC,CAA4CC,GAA5C,KAAuD,mBAAvD,CACA,MAAOC,CAAAA,SAAP,KAAsB,uBAAtB,CAEA,MAAOC,CAAAA,aAAP,KAA0B,4BAA1B,CAEA,MAAOC,CAAAA,GAAP,KAAgB,WAAhB,CACA,OAASC,qBAAT,KAAsC,qBAAtC,CAEA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,C,wFAEA,QAASC,CAAAA,YAAT,EAAwB,CACtB,cAAgCb,QAAQ,CAAC,EAAD,CAAxC,wCAAOc,QAAP,eAAiBC,WAAjB,eAEA,GAAMC,CAAAA,OAAO,CAAGR,SAAS,EAAzB,CACA,GAAMS,CAAAA,OAAO,CAAGf,UAAU,EAA1B,CAEA,GAAMgB,CAAAA,aAAa,0FAAG,qKACER,CAAAA,GAAG,CAACS,IAAJ,CAAS,SAAT,CAAoBR,qBAAqB,EAAzC,CADF,QACdS,OADc,eAEpBC,OAAO,CAACC,GAAR,CAAYF,OAAZ,EACAH,OAAO,CAACM,IAAR,CAAa,YAAcH,OAAO,CAACI,IAAR,CAAaA,IAAb,CAAkB,QAAlB,EAA4B,IAA5B,CAA3B,EAHoB,sDAAH,kBAAbN,CAAAA,aAAa,0CAAnB,CAMAjB,SAAS,CAAC,UAAM,SACCwB,CAAAA,SADD,qIACd,4KACyBf,CAAAA,GAAG,CAACgB,GAAJ,CAAQ,SAAR,CADzB,QACQZ,QADR,gBAEEC,WAAW,CAACD,QAAQ,CAACU,IAAT,CAAcA,IAAf,CAAX,CACAH,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAyBR,QAAQ,CAACU,IAAT,CAAcA,IAAvC,EAHF,wDADc,4CAMdC,SAAS,GACV,CAPQ,CAON,EAPM,CAAT,CASA,mBACE,aAAK,SAAS,CAAET,OAAO,CAACW,IAAxB,wBACE,KAAC,MAAD,EACE,OAAO,CAAC,WADV,CAEE,KAAK,CAAC,SAFR,CAGE,SAAS,CAAEX,OAAO,CAACY,SAHrB,CAIE,OAAO,CAAEV,aAJX,8BADF,cASE,KAAC,OAAD,IATF,cAUE,MAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,CAA4B,SAAS,CAAEF,OAAO,CAACa,SAA/C,wBACE,MAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,wBACE,KAAC,UAAD,EAAY,OAAO,CAAC,IAApB,iCADF,CAEGf,QAAQ,CAAC,CAAD,CAAR,EAAe,4BAFlB,cAGE,KAAC,GAAD,EAAK,UAAU,CAAC,gBAAhB,UACGA,QAAQ,CAAC,CAAD,CAAR,EAAeA,QAAQ,CAAC,CAAD,CAAR,CAAY,IAAZ,EAAkBgB,KAAlB,CAAwB,CAAxB,CAA2B,EAA3B,CADlB,EAHF,GADF,cAQE,MAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAC,MAAd,wBACE,KAAC,UAAD,uBADF,cAEE,KAAC,IAAD,EAAM,IAAI,KAAV,UACGhB,QAAQ,CAAC,CAAD,CAAR,CACCA,QAAQ,CAACiB,GAAT,CAAa,SAACX,OAAD,qBACX,KAAC,IAAD,EAA0B,IAAI,KAA9B,uBACE,KAAC,aAAD,EAAe,OAAO,CAAEA,OAAxB,EADF,EAAWA,OAAO,CAAC,IAAD,CAAlB,CADW,EAAb,CADD,cAOC,2DARJ,EAFF,GARF,GAVF,cAiCE,KAAC,MAAD,IAjCF,GADF,CAqCD,CAED,cAAeP,CAAAA,YAAf"},"metadata":{},"sourceType":"module"}