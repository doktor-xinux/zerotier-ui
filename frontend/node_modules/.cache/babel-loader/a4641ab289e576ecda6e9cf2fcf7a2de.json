{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"ttcn-cfg\", function (config, parserConfig) {\n    var indentUnit = config.indentUnit,\n        keywords = parserConfig.keywords || {},\n        fileNCtrlMaskOptions = parserConfig.fileNCtrlMaskOptions || {},\n        externalCommands = parserConfig.externalCommands || {},\n        multiLineStrings = parserConfig.multiLineStrings,\n        indentStatements = parserConfig.indentStatements !== false;\n    var isOperatorChar = /[\\|]/;\n    var curPunc;\n\n    function tokenBase(stream, state) {\n      var ch = stream.next();\n\n      if (ch == '\"' || ch == \"'\") {\n        state.tokenize = tokenString(ch);\n        return state.tokenize(stream, state);\n      }\n\n      if (/[:=]/.test(ch)) {\n        curPunc = ch;\n        return \"punctuation\";\n      }\n\n      if (ch == \"#\") {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n\n      if (/\\d/.test(ch)) {\n        stream.eatWhile(/[\\w\\.]/);\n        return \"number\";\n      }\n\n      if (isOperatorChar.test(ch)) {\n        stream.eatWhile(isOperatorChar);\n        return \"operator\";\n      }\n\n      if (ch == \"[\") {\n        stream.eatWhile(/[\\w_\\]]/);\n        return \"number sectionTitle\";\n      }\n\n      stream.eatWhile(/[\\w\\$_]/);\n      var cur = stream.current();\n      if (keywords.propertyIsEnumerable(cur)) return \"keyword\";\n      if (fileNCtrlMaskOptions.propertyIsEnumerable(cur)) return \"negative fileNCtrlMaskOptions\";\n      if (externalCommands.propertyIsEnumerable(cur)) return \"negative externalCommands\";\n      return \"variable\";\n    }\n\n    function tokenString(quote) {\n      return function (stream, state) {\n        var escaped = false,\n            next,\n            end = false;\n\n        while ((next = stream.next()) != null) {\n          if (next == quote && !escaped) {\n            var afterNext = stream.peek(); //look if the character if the quote is like the B in '10100010'B\n\n            if (afterNext) {\n              afterNext = afterNext.toLowerCase();\n              if (afterNext == \"b\" || afterNext == \"h\" || afterNext == \"o\") stream.next();\n            }\n\n            end = true;\n            break;\n          }\n\n          escaped = !escaped && next == \"\\\\\";\n        }\n\n        if (end || !(escaped || multiLineStrings)) state.tokenize = null;\n        return \"string\";\n      };\n    }\n\n    function Context(indented, column, type, align, prev) {\n      this.indented = indented;\n      this.column = column;\n      this.type = type;\n      this.align = align;\n      this.prev = prev;\n    }\n\n    function pushContext(state, col, type) {\n      var indent = state.indented;\n      if (state.context && state.context.type == \"statement\") indent = state.context.indented;\n      return state.context = new Context(indent, col, type, null, state.context);\n    }\n\n    function popContext(state) {\n      var t = state.context.type;\n      if (t == \")\" || t == \"]\" || t == \"}\") state.indented = state.context.indented;\n      return state.context = state.context.prev;\n    } //Interface\n\n\n    return {\n      startState: function startState(basecolumn) {\n        return {\n          tokenize: null,\n          context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", false),\n          indented: 0,\n          startOfLine: true\n        };\n      },\n      token: function token(stream, state) {\n        var ctx = state.context;\n\n        if (stream.sol()) {\n          if (ctx.align == null) ctx.align = false;\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n        }\n\n        if (stream.eatSpace()) return null;\n        curPunc = null;\n        var style = (state.tokenize || tokenBase)(stream, state);\n        if (style == \"comment\") return style;\n        if (ctx.align == null) ctx.align = true;\n\n        if ((curPunc == \";\" || curPunc == \":\" || curPunc == \",\") && ctx.type == \"statement\") {\n          popContext(state);\n        } else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");else if (curPunc == \"}\") {\n          while (ctx.type == \"statement\") {\n            ctx = popContext(state);\n          }\n\n          if (ctx.type == \"}\") ctx = popContext(state);\n\n          while (ctx.type == \"statement\") {\n            ctx = popContext(state);\n          }\n        } else if (curPunc == ctx.type) popContext(state);else if (indentStatements && ((ctx.type == \"}\" || ctx.type == \"top\") && curPunc != ';' || ctx.type == \"statement\" && curPunc == \"newstatement\")) pushContext(state, stream.column(), \"statement\");\n\n        state.startOfLine = false;\n        return style;\n      },\n      electricChars: \"{}\",\n      lineComment: \"#\",\n      fold: \"brace\"\n    };\n  });\n\n  function words(str) {\n    var obj = {},\n        words = str.split(\" \");\n\n    for (var i = 0; i < words.length; ++i) {\n      obj[words[i]] = true;\n    }\n\n    return obj;\n  }\n\n  CodeMirror.defineMIME(\"text/x-ttcn-cfg\", {\n    name: \"ttcn-cfg\",\n    keywords: words(\"Yes No LogFile FileMask ConsoleMask AppendFile\" + \" TimeStampFormat LogEventTypes SourceInfoFormat\" + \" LogEntityName LogSourceInfo DiskFullAction\" + \" LogFileNumber LogFileSize MatchingHints Detailed\" + \" Compact SubCategories Stack Single None Seconds\" + \" DateTime Time Stop Error Retry Delete TCPPort KillTimer\" + \" NumHCs UnixSocketsEnabled LocalAddress\"),\n    fileNCtrlMaskOptions: words(\"TTCN_EXECUTOR TTCN_ERROR TTCN_WARNING\" + \" TTCN_PORTEVENT TTCN_TIMEROP TTCN_VERDICTOP\" + \" TTCN_DEFAULTOP TTCN_TESTCASE TTCN_ACTION\" + \" TTCN_USER TTCN_FUNCTION TTCN_STATISTICS\" + \" TTCN_PARALLEL TTCN_MATCHING TTCN_DEBUG\" + \" EXECUTOR ERROR WARNING PORTEVENT TIMEROP\" + \" VERDICTOP DEFAULTOP TESTCASE ACTION USER\" + \" FUNCTION STATISTICS PARALLEL MATCHING DEBUG\" + \" LOG_ALL LOG_NOTHING ACTION_UNQUALIFIED\" + \" DEBUG_ENCDEC DEBUG_TESTPORT\" + \" DEBUG_UNQUALIFIED DEFAULTOP_ACTIVATE\" + \" DEFAULTOP_DEACTIVATE DEFAULTOP_EXIT\" + \" DEFAULTOP_UNQUALIFIED ERROR_UNQUALIFIED\" + \" EXECUTOR_COMPONENT EXECUTOR_CONFIGDATA\" + \" EXECUTOR_EXTCOMMAND EXECUTOR_LOGOPTIONS\" + \" EXECUTOR_RUNTIME EXECUTOR_UNQUALIFIED\" + \" FUNCTION_RND FUNCTION_UNQUALIFIED\" + \" MATCHING_DONE MATCHING_MCSUCCESS\" + \" MATCHING_MCUNSUCC MATCHING_MMSUCCESS\" + \" MATCHING_MMUNSUCC MATCHING_PCSUCCESS\" + \" MATCHING_PCUNSUCC MATCHING_PMSUCCESS\" + \" MATCHING_PMUNSUCC MATCHING_PROBLEM\" + \" MATCHING_TIMEOUT MATCHING_UNQUALIFIED\" + \" PARALLEL_PORTCONN PARALLEL_PORTMAP\" + \" PARALLEL_PTC PARALLEL_UNQUALIFIED\" + \" PORTEVENT_DUALRECV PORTEVENT_DUALSEND\" + \" PORTEVENT_MCRECV PORTEVENT_MCSEND\" + \" PORTEVENT_MMRECV PORTEVENT_MMSEND\" + \" PORTEVENT_MQUEUE PORTEVENT_PCIN\" + \" PORTEVENT_PCOUT PORTEVENT_PMIN\" + \" PORTEVENT_PMOUT PORTEVENT_PQUEUE\" + \" PORTEVENT_STATE PORTEVENT_UNQUALIFIED\" + \" STATISTICS_UNQUALIFIED STATISTICS_VERDICT\" + \" TESTCASE_FINISH TESTCASE_START\" + \" TESTCASE_UNQUALIFIED TIMEROP_GUARD\" + \" TIMEROP_READ TIMEROP_START TIMEROP_STOP\" + \" TIMEROP_TIMEOUT TIMEROP_UNQUALIFIED\" + \" USER_UNQUALIFIED VERDICTOP_FINAL\" + \" VERDICTOP_GETVERDICT VERDICTOP_SETVERDICT\" + \" VERDICTOP_UNQUALIFIED WARNING_UNQUALIFIED\"),\n    externalCommands: words(\"BeginControlPart EndControlPart BeginTestCase\" + \" EndTestCase\"),\n    multiLineStrings: true\n  });\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","parserConfig","indentUnit","keywords","fileNCtrlMaskOptions","externalCommands","multiLineStrings","indentStatements","isOperatorChar","curPunc","tokenBase","stream","state","ch","next","tokenize","tokenString","test","skipToEnd","eatWhile","cur","current","propertyIsEnumerable","quote","escaped","end","afterNext","peek","toLowerCase","Context","indented","column","type","align","prev","pushContext","col","indent","context","popContext","t","startState","basecolumn","startOfLine","token","ctx","sol","indentation","eatSpace","style","electricChars","lineComment","fold","words","str","obj","split","i","length","defineMIME","name"],"sources":["/mnt/Datengrab/python/Zero-tier/frontend/node_modules/codemirror/mode/ttcn-cfg/ttcn-cfg.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"ttcn-cfg\", function(config, parserConfig) {\n    var indentUnit = config.indentUnit,\n        keywords = parserConfig.keywords || {},\n        fileNCtrlMaskOptions = parserConfig.fileNCtrlMaskOptions || {},\n        externalCommands = parserConfig.externalCommands || {},\n        multiLineStrings = parserConfig.multiLineStrings,\n        indentStatements = parserConfig.indentStatements !== false;\n    var isOperatorChar = /[\\|]/;\n    var curPunc;\n\n    function tokenBase(stream, state) {\n      var ch = stream.next();\n      if (ch == '\"' || ch == \"'\") {\n        state.tokenize = tokenString(ch);\n        return state.tokenize(stream, state);\n      }\n      if (/[:=]/.test(ch)) {\n        curPunc = ch;\n        return \"punctuation\";\n      }\n      if (ch == \"#\"){\n        stream.skipToEnd();\n        return \"comment\";\n      }\n      if (/\\d/.test(ch)) {\n        stream.eatWhile(/[\\w\\.]/);\n        return \"number\";\n      }\n      if (isOperatorChar.test(ch)) {\n        stream.eatWhile(isOperatorChar);\n        return \"operator\";\n      }\n      if (ch == \"[\"){\n        stream.eatWhile(/[\\w_\\]]/);\n        return \"number sectionTitle\";\n      }\n\n      stream.eatWhile(/[\\w\\$_]/);\n      var cur = stream.current();\n      if (keywords.propertyIsEnumerable(cur)) return \"keyword\";\n      if (fileNCtrlMaskOptions.propertyIsEnumerable(cur))\n        return \"negative fileNCtrlMaskOptions\";\n      if (externalCommands.propertyIsEnumerable(cur)) return \"negative externalCommands\";\n\n      return \"variable\";\n    }\n\n    function tokenString(quote) {\n      return function(stream, state) {\n        var escaped = false, next, end = false;\n        while ((next = stream.next()) != null) {\n          if (next == quote && !escaped){\n            var afterNext = stream.peek();\n            //look if the character if the quote is like the B in '10100010'B\n            if (afterNext){\n              afterNext = afterNext.toLowerCase();\n              if(afterNext == \"b\" || afterNext == \"h\" || afterNext == \"o\")\n                stream.next();\n            }\n            end = true; break;\n          }\n          escaped = !escaped && next == \"\\\\\";\n        }\n        if (end || !(escaped || multiLineStrings))\n          state.tokenize = null;\n        return \"string\";\n      };\n    }\n\n    function Context(indented, column, type, align, prev) {\n      this.indented = indented;\n      this.column = column;\n      this.type = type;\n      this.align = align;\n      this.prev = prev;\n    }\n    function pushContext(state, col, type) {\n      var indent = state.indented;\n      if (state.context && state.context.type == \"statement\")\n        indent = state.context.indented;\n      return state.context = new Context(indent, col, type, null, state.context);\n    }\n    function popContext(state) {\n      var t = state.context.type;\n      if (t == \")\" || t == \"]\" || t == \"}\")\n        state.indented = state.context.indented;\n      return state.context = state.context.prev;\n    }\n\n    //Interface\n    return {\n      startState: function(basecolumn) {\n        return {\n          tokenize: null,\n          context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", false),\n          indented: 0,\n          startOfLine: true\n        };\n      },\n\n      token: function(stream, state) {\n        var ctx = state.context;\n        if (stream.sol()) {\n          if (ctx.align == null) ctx.align = false;\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n        }\n        if (stream.eatSpace()) return null;\n        curPunc = null;\n        var style = (state.tokenize || tokenBase)(stream, state);\n        if (style == \"comment\") return style;\n        if (ctx.align == null) ctx.align = true;\n\n        if ((curPunc == \";\" || curPunc == \":\" || curPunc == \",\")\n            && ctx.type == \"statement\"){\n          popContext(state);\n        }\n        else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n        else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n        else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n        else if (curPunc == \"}\") {\n          while (ctx.type == \"statement\") ctx = popContext(state);\n          if (ctx.type == \"}\") ctx = popContext(state);\n          while (ctx.type == \"statement\") ctx = popContext(state);\n        }\n        else if (curPunc == ctx.type) popContext(state);\n        else if (indentStatements && (((ctx.type == \"}\" || ctx.type == \"top\")\n            && curPunc != ';') || (ctx.type == \"statement\"\n            && curPunc == \"newstatement\")))\n          pushContext(state, stream.column(), \"statement\");\n        state.startOfLine = false;\n        return style;\n      },\n\n      electricChars: \"{}\",\n      lineComment: \"#\",\n      fold: \"brace\"\n    };\n  });\n\n  function words(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i)\n      obj[words[i]] = true;\n    return obj;\n  }\n\n  CodeMirror.defineMIME(\"text/x-ttcn-cfg\", {\n    name: \"ttcn-cfg\",\n    keywords: words(\"Yes No LogFile FileMask ConsoleMask AppendFile\" +\n    \" TimeStampFormat LogEventTypes SourceInfoFormat\" +\n    \" LogEntityName LogSourceInfo DiskFullAction\" +\n    \" LogFileNumber LogFileSize MatchingHints Detailed\" +\n    \" Compact SubCategories Stack Single None Seconds\" +\n    \" DateTime Time Stop Error Retry Delete TCPPort KillTimer\" +\n    \" NumHCs UnixSocketsEnabled LocalAddress\"),\n    fileNCtrlMaskOptions: words(\"TTCN_EXECUTOR TTCN_ERROR TTCN_WARNING\" +\n    \" TTCN_PORTEVENT TTCN_TIMEROP TTCN_VERDICTOP\" +\n    \" TTCN_DEFAULTOP TTCN_TESTCASE TTCN_ACTION\" +\n    \" TTCN_USER TTCN_FUNCTION TTCN_STATISTICS\" +\n    \" TTCN_PARALLEL TTCN_MATCHING TTCN_DEBUG\" +\n    \" EXECUTOR ERROR WARNING PORTEVENT TIMEROP\" +\n    \" VERDICTOP DEFAULTOP TESTCASE ACTION USER\" +\n    \" FUNCTION STATISTICS PARALLEL MATCHING DEBUG\" +\n    \" LOG_ALL LOG_NOTHING ACTION_UNQUALIFIED\" +\n    \" DEBUG_ENCDEC DEBUG_TESTPORT\" +\n    \" DEBUG_UNQUALIFIED DEFAULTOP_ACTIVATE\" +\n    \" DEFAULTOP_DEACTIVATE DEFAULTOP_EXIT\" +\n    \" DEFAULTOP_UNQUALIFIED ERROR_UNQUALIFIED\" +\n    \" EXECUTOR_COMPONENT EXECUTOR_CONFIGDATA\" +\n    \" EXECUTOR_EXTCOMMAND EXECUTOR_LOGOPTIONS\" +\n    \" EXECUTOR_RUNTIME EXECUTOR_UNQUALIFIED\" +\n    \" FUNCTION_RND FUNCTION_UNQUALIFIED\" +\n    \" MATCHING_DONE MATCHING_MCSUCCESS\" +\n    \" MATCHING_MCUNSUCC MATCHING_MMSUCCESS\" +\n    \" MATCHING_MMUNSUCC MATCHING_PCSUCCESS\" +\n    \" MATCHING_PCUNSUCC MATCHING_PMSUCCESS\" +\n    \" MATCHING_PMUNSUCC MATCHING_PROBLEM\" +\n    \" MATCHING_TIMEOUT MATCHING_UNQUALIFIED\" +\n    \" PARALLEL_PORTCONN PARALLEL_PORTMAP\" +\n    \" PARALLEL_PTC PARALLEL_UNQUALIFIED\" +\n    \" PORTEVENT_DUALRECV PORTEVENT_DUALSEND\" +\n    \" PORTEVENT_MCRECV PORTEVENT_MCSEND\" +\n    \" PORTEVENT_MMRECV PORTEVENT_MMSEND\" +\n    \" PORTEVENT_MQUEUE PORTEVENT_PCIN\" +\n    \" PORTEVENT_PCOUT PORTEVENT_PMIN\" +\n    \" PORTEVENT_PMOUT PORTEVENT_PQUEUE\" +\n    \" PORTEVENT_STATE PORTEVENT_UNQUALIFIED\" +\n    \" STATISTICS_UNQUALIFIED STATISTICS_VERDICT\" +\n    \" TESTCASE_FINISH TESTCASE_START\" +\n    \" TESTCASE_UNQUALIFIED TIMEROP_GUARD\" +\n    \" TIMEROP_READ TIMEROP_START TIMEROP_STOP\" +\n    \" TIMEROP_TIMEOUT TIMEROP_UNQUALIFIED\" +\n    \" USER_UNQUALIFIED VERDICTOP_FINAL\" +\n    \" VERDICTOP_GETVERDICT VERDICTOP_SETVERDICT\" +\n    \" VERDICTOP_UNQUALIFIED WARNING_UNQUALIFIED\"),\n    externalCommands: words(\"BeginControlPart EndControlPart BeginTestCase\" +\n    \" EndTestCase\"),\n    multiLineStrings: true\n  });\n});"],"mappings":"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"},"metadata":{},"sourceType":"script"}