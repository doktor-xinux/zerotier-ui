{"ast":null,"code":"import ipaddr from\"ipaddr.js\";export function getCIDRAddress(start,end){var cidr=getCIDR(start,end);return start.replace(/.$/,0)+\"/\"+cidr;}function getCIDR(start,end){var startInt=toInt(start);var endInt=toInt(end);var binaryXOR=startInt^endInt;if(binaryXOR===0){return 32;}else{var binaryStr=binaryXOR.toString(2);var zeroCount=binaryStr.split(\"0\").length-1;var oneCount=binaryStr.split(\"1\").length-1;return 32-(zeroCount+oneCount);}}function toInt(addr){var ip=ipaddr.parse(addr);var arr=ip.octets;var ipInt=0;var counter=3;for(var i in arr){ipInt+=arr[i]*Math.pow(256,counter);counter--;}return ipInt;}export function validateIP(string){return ipaddr.IPv4.isValid(string)||ipaddr.IPv6.isValid(string);}export function normilizeIP(string){var addr=ipaddr.parse(string);return addr.toNormalizedString();}export function validateCIDR(string){try{ipaddr.parseCIDR(string);return true;}catch(err){return false;}}","map":{"version":3,"names":["ipaddr","getCIDRAddress","start","end","cidr","getCIDR","replace","startInt","toInt","endInt","binaryXOR","binaryStr","toString","zeroCount","split","length","oneCount","addr","ip","parse","arr","octets","ipInt","counter","i","Math","pow","validateIP","string","IPv4","isValid","IPv6","normilizeIP","toNormalizedString","validateCIDR","parseCIDR","err"],"sources":["/mnt/Datengrab/python/Zero-tier/frontend/src/utils/IP.js"],"sourcesContent":["import ipaddr from \"ipaddr.js\";\n\nexport function getCIDRAddress(start, end) {\n  const cidr = getCIDR(start, end);\n  return start.replace(/.$/, 0) + \"/\" + cidr;\n}\n\nfunction getCIDR(start, end) {\n  const startInt = toInt(start);\n  const endInt = toInt(end);\n  const binaryXOR = startInt ^ endInt;\n  if (binaryXOR === 0) {\n    return 32;\n  } else {\n    const binaryStr = binaryXOR.toString(2);\n    const zeroCount = binaryStr.split(\"0\").length - 1;\n    const oneCount = binaryStr.split(\"1\").length - 1;\n    return 32 - (zeroCount + oneCount);\n  }\n}\n\nfunction toInt(addr) {\n  const ip = ipaddr.parse(addr);\n  const arr = ip.octets;\n  let ipInt = 0;\n  let counter = 3;\n  for (const i in arr) {\n    ipInt += arr[i] * Math.pow(256, counter);\n    counter--;\n  }\n  return ipInt;\n}\n\nexport function validateIP(string) {\n  return ipaddr.IPv4.isValid(string) || ipaddr.IPv6.isValid(string);\n}\n\nexport function normilizeIP(string) {\n  const addr = ipaddr.parse(string);\n  return addr.toNormalizedString();\n}\n\nexport function validateCIDR(string) {\n  try {\n    ipaddr.parseCIDR(string);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n"],"mappings":"AAAA,MAAOA,CAAAA,MAAP,KAAmB,WAAnB,CAEA,MAAO,SAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAA+BC,GAA/B,CAAoC,CACzC,GAAMC,CAAAA,IAAI,CAAGC,OAAO,CAACH,KAAD,CAAQC,GAAR,CAApB,CACA,MAAOD,CAAAA,KAAK,CAACI,OAAN,CAAc,IAAd,CAAoB,CAApB,EAAyB,GAAzB,CAA+BF,IAAtC,CACD,CAED,QAASC,CAAAA,OAAT,CAAiBH,KAAjB,CAAwBC,GAAxB,CAA6B,CAC3B,GAAMI,CAAAA,QAAQ,CAAGC,KAAK,CAACN,KAAD,CAAtB,CACA,GAAMO,CAAAA,MAAM,CAAGD,KAAK,CAACL,GAAD,CAApB,CACA,GAAMO,CAAAA,SAAS,CAAGH,QAAQ,CAAGE,MAA7B,CACA,GAAIC,SAAS,GAAK,CAAlB,CAAqB,CACnB,MAAO,GAAP,CACD,CAFD,IAEO,CACL,GAAMC,CAAAA,SAAS,CAAGD,SAAS,CAACE,QAAV,CAAmB,CAAnB,CAAlB,CACA,GAAMC,CAAAA,SAAS,CAAGF,SAAS,CAACG,KAAV,CAAgB,GAAhB,EAAqBC,MAArB,CAA8B,CAAhD,CACA,GAAMC,CAAAA,QAAQ,CAAGL,SAAS,CAACG,KAAV,CAAgB,GAAhB,EAAqBC,MAArB,CAA8B,CAA/C,CACA,MAAO,KAAMF,SAAS,CAAGG,QAAlB,CAAP,CACD,CACF,CAED,QAASR,CAAAA,KAAT,CAAeS,IAAf,CAAqB,CACnB,GAAMC,CAAAA,EAAE,CAAGlB,MAAM,CAACmB,KAAP,CAAaF,IAAb,CAAX,CACA,GAAMG,CAAAA,GAAG,CAAGF,EAAE,CAACG,MAAf,CACA,GAAIC,CAAAA,KAAK,CAAG,CAAZ,CACA,GAAIC,CAAAA,OAAO,CAAG,CAAd,CACA,IAAK,GAAMC,CAAAA,CAAX,GAAgBJ,CAAAA,GAAhB,CAAqB,CACnBE,KAAK,EAAIF,GAAG,CAACI,CAAD,CAAH,CAASC,IAAI,CAACC,GAAL,CAAS,GAAT,CAAcH,OAAd,CAAlB,CACAA,OAAO,GACR,CACD,MAAOD,CAAAA,KAAP,CACD,CAED,MAAO,SAASK,CAAAA,UAAT,CAAoBC,MAApB,CAA4B,CACjC,MAAO5B,CAAAA,MAAM,CAAC6B,IAAP,CAAYC,OAAZ,CAAoBF,MAApB,GAA+B5B,MAAM,CAAC+B,IAAP,CAAYD,OAAZ,CAAoBF,MAApB,CAAtC,CACD,CAED,MAAO,SAASI,CAAAA,WAAT,CAAqBJ,MAArB,CAA6B,CAClC,GAAMX,CAAAA,IAAI,CAAGjB,MAAM,CAACmB,KAAP,CAAaS,MAAb,CAAb,CACA,MAAOX,CAAAA,IAAI,CAACgB,kBAAL,EAAP,CACD,CAED,MAAO,SAASC,CAAAA,YAAT,CAAsBN,MAAtB,CAA8B,CACnC,GAAI,CACF5B,MAAM,CAACmC,SAAP,CAAiBP,MAAjB,EACA,MAAO,KAAP,CACD,CAAC,MAAOQ,GAAP,CAAY,CACZ,MAAO,MAAP,CACD,CACF"},"metadata":{},"sourceType":"module"}