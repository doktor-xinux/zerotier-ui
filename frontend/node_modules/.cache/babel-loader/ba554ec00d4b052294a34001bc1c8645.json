{"ast":null,"code":"import _slicedToArray from \"/mnt/Datengrab/python/Zero-tier/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"/mnt/Datengrab/python/Zero-tier/frontend/node_modules/@babel/runtime/regenerator/index.js\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useRef, useEffect, useImperativeHandle, useState, useMemo } from 'react';\nimport CodeMirror from 'codemirror';\nimport 'codemirror/mode/meta';\nimport './codemirror.css';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar defaultOptions = {\n  tabSize: 2,\n  autoCloseBrackets: true,\n  matchBrackets: true,\n  showCursorWhenSelecting: true,\n  // 显示行号\n  lineNumbers: true,\n  fullScreen: true\n};\n\nfunction ReactCodeMirror(props, ref) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      _props$options = _props.options,\n      options = _props$options === void 0 ? {} : _props$options,\n      _props$value = _props.value,\n      value = _props$value === void 0 ? '' : _props$value,\n      _props$width = _props.width,\n      width = _props$width === void 0 ? '100%' : _props$width,\n      _props$height = _props.height,\n      height = _props$height === void 0 ? '100%' : _props$height,\n      _props$lazyLoadMode = _props.lazyLoadMode,\n      lazyLoadMode = _props$lazyLoadMode === void 0 ? true : _props$lazyLoadMode;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      editor = _useState2[0],\n      setEditor = _useState2[1];\n\n  var textareaRef = useRef();\n  var lastestProps = useRef(props);\n  useImperativeHandle(ref, function () {\n    return {\n      editor: editor,\n      textarea: textareaRef.current\n    };\n  }, [editor, textareaRef]);\n  lastestProps.current = props; // 将props中所有的事件处理函数映射并保存\n\n  function getEventHandleFromProps() {\n    var propNames = Object.keys(props);\n    var eventHandle = propNames.filter(function (keyName) {\n      return /^on+/.test(keyName);\n    });\n    var eventDict = {};\n    eventHandle.forEach(function (ele) {\n      var name = ele.slice(2);\n\n      if (name && name[0]) {\n        eventDict[ele] = name.replace(name[0], name[0].toLowerCase());\n      }\n    });\n    return eventDict;\n  } // http://codemirror.net/doc/manual.html#config\n\n\n  function setOptions(_x, _x2) {\n    return _setOptions.apply(this, arguments);\n  }\n\n  function _setOptions() {\n    _setOptions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(instance, opt) {\n      var mode;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (opt === void 0) {\n                opt = {};\n              }\n\n              if (!(typeof opt === 'object' && window)) {\n                _context.next = 8;\n                break;\n              }\n\n              mode = CodeMirror.findModeByName(opt.mode || '');\n\n              if (!(lazyLoadMode && mode && mode.mode)) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 6;\n              return import(\"codemirror/mode/\" + mode.mode + \"/\" + mode.mode + \".js\");\n\n            case 6:\n              if (mode) {\n                opt.mode = mode.mime;\n              }\n\n              Object.keys(opt).forEach(function (name) {\n                if ((opt[name] || opt[name] === false) && JSON.stringify(opt[name])) {\n                  instance.setOption(name, opt[name]);\n                }\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _setOptions.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    if (!editor && window) {\n      // 生成codemirror实例\n      var instance = CodeMirror.fromTextArea(textareaRef.current, _extends({}, defaultOptions, options));\n      var eventDict = getEventHandleFromProps();\n      Object.keys(eventDict).forEach(function (event) {\n        instance.on(eventDict[event], function () {\n          var _lastestProps$current;\n\n          return (_lastestProps$current = lastestProps.current)[event].apply(_lastestProps$current, arguments);\n        });\n      });\n      instance.setValue(value || '');\n\n      if (width || height) {\n        // 设置尺寸\n        instance.setSize(width, height);\n      }\n\n      setEditor(instance);\n      setOptions(instance, _extends({}, defaultOptions, options));\n    }\n\n    return function () {\n      if (editor && window) {\n        editor.toTextArea();\n        setEditor(undefined);\n      }\n    };\n  }, []);\n  useMemo(function () {\n    if (!editor || !window) return;\n    var val = editor.getValue();\n\n    if (value !== undefined && value !== val) {\n      editor.setValue(value);\n    }\n  }, [value]);\n  useMemo(function () {\n    if (!editor || !window) return;\n    editor.setSize(width, height);\n  }, [width, height]);\n  useMemo(function () {\n    if (!editor || !window) return;\n    setOptions(editor, _extends({}, defaultOptions, options));\n  }, [editor, options]);\n  return /*#__PURE__*/_jsx(\"textarea\", {\n    ref: textareaRef\n  });\n}\n\nexport default /*#__PURE__*/React.forwardRef(ReactCodeMirror);","map":{"version":3,"sources":["../src/index.js"],"names":["defaultOptions","tabSize","autoCloseBrackets","matchBrackets","showCursorWhenSelecting","lineNumbers","fullScreen","props","options","value","width","height","lazyLoadMode","useState","textareaRef","useRef","lastestProps","useImperativeHandle","editor","textarea","current","propNames","Object","eventHandle","keyName","eventDict","ele","name","opt","mode","CodeMirror","JSON","instance","useEffect","getEventHandleFromProps","event","setEditor","setOptions","useMemo","val","React"],"mappings":";;;;AAAA,OAAA,KAAA,IAAA,MAAA,EAAA,SAAA,EAAA,mBAAA,EAAA,QAAA,EAAA,OAAA,QAAA,OAAA;AACA,OAAA,UAAA,MAAA,YAAA;AACA,OAAA,sBAAA;AACA,OAAA,kBAAA;;AAEA,IAAMA,cAAc,GAAG;EACrBC,OAAO,EADc,CAAA;EAErBC,iBAAiB,EAFI,IAAA;EAGrBC,aAAa,EAHQ,IAAA;EAIrBC,uBAAuB,EAJF,IAAA;EAKrB;EACAC,WAAW,EANU,IAAA;EAOrBC,UAAU,EAAE;AAPS,CAAvB;;AAUA,SAAA,eAAA,CAAA,KAAA,EAAA,GAAA,EAA0C;EAAA,IAAjBC,KAAiB,KAAA,KAAA,CAAA,EAAA;IAAjBA,KAAiB,GAAT,EAARA;EAAiB;;EACxC,aAAA,KAAA;EAAA,4BAAQC,OAAR;EAAA,IAAQA,OAAR,+BAAM,EAAN;EAAA,0BAAsBC,KAAtB;EAAA,IAAsBA,KAAtB,6BAAM,EAAN;EAAA,0BAAkCC,KAAlC;EAAA,IAAkCA,KAAlC,6BAAM,MAAN;EAAA,2BAAkDC,MAAlD;EAAA,IAAkDA,MAAlD,8BAAM,MAAN;EAAA,iCAAmEC,YAAnE;EAAA,IAAmEA,YAAnE,oCAAkF,IAAlF;;EACA,gBAA4BC,QAA5B,EAAA;EAAA;EAAA,IAAM,MAAN;EAAA,IAAM,SAAN;;EACA,IAAMC,WAAW,GAAGC,MAApB,EAAA;EACA,IAAMC,YAAY,GAAGD,MAAM,CAA3B,KAA2B,CAA3B;EAEAE,mBAAmB,CAAA,GAAA,EAAM;IAAA,OAAO;MAAEC,MAAF,EAAEA,MAAF;MAAUC,QAAQ,EAAEL,WAAW,CAACM;IAAhC,CAAP;EAAA,CAAN,EAAyD,CAAA,MAAA,EAA5EH,WAA4E,CAAzD,CAAnBA;EACAD,YAAY,CAAZA,OAAAA,GAPwC,KAOxCA,CAPwC,CASxC;;EACA,SAAA,uBAAA,GAAmC;IACjC,IAAMK,SAAS,GAAGC,MAAM,CAANA,IAAAA,CAAlB,KAAkBA,CAAlB;IACA,IAAMC,WAAW,GAAG,SAAS,CAAT,MAAA,CAAkBC,UAAAA,OAAD,EAAa;MAChD,OAAO,OAAA,IAAA,CAAP,OAAO,CAAP;IADF,CAAoB,CAApB;IAIA,IAAMC,SAAS,GAAf,EAAA;IACAF,WAAW,CAAXA,OAAAA,CAAqBG,UAAAA,GAAD,EAAS;MAC3B,IAAMC,IAAI,GAAGD,GAAG,CAAHA,KAAAA,CAAb,CAAaA,CAAb;;MACA,IAAIC,IAAI,IAAIA,IAAI,CAAhB,CAAgB,CAAhB,EAAqB;QACnBF,SAAS,CAATA,GAAS,CAATA,GAAiBE,IAAI,CAAJA,OAAAA,CAAaA,IAAI,CAAjBA,CAAiB,CAAjBA,EAAsBA,IAAI,CAAJA,CAAI,CAAJA,CAAvCF,WAAuCE,EAAtBA,CAAjBF;MACD;IAJHF,CAAAA;IAOA,OAAA,SAAA;EAxBsC,CAAA,CA2BxC;;;EA3BwC,SAAA,UAAA,CAAA,EAAA,EAAA,GAAA,EAAA;IAAA,OAAA,WAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA;EAAA;;EAAA,SAAA,WAAA,GAAA;IAAA,WAAA,GAAA,iBAAA,wCA4BxC,iBAAA,QAAA,EAAA,GAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAA8C,IAAVK,GAAU,KAAA,KAAA,CAAA,EAAA;gBAAVA,GAAU,GAAJ,EAANA;cAAU;;cAA9C,MACM,OAAA,GAAA,KAAA,QAAA,IAAJ,MADF;gBAAA;gBAAA;cAAA;;cAEUC,IAFV,GAEiBC,UAAU,CAAVA,cAAAA,CAA0BF,GAAG,CAAHA,IAAAA,IAAvC,EAAaE,CAFjB;;cAAA,MAGQlB,YAAY,IAAZA,IAAAA,IAAwBiB,IAAI,CAAhC,IAHJ;gBAAA;gBAAA;cAAA;;cAAA;cAIM,OAAM,OAAA,qBAA0BA,IAAI,CAA9B,IAAA,GAAA,GAAA,GAAuCA,IAAI,CAA3C,IAAA,GAAN,KAAM,CAAN;;YAJN;cAMI,IAAA,IAAA,EAAU;gBACRD,GAAG,CAAHA,IAAAA,GAAWC,IAAI,CAAfD,IAAAA;cACD;;cACDN,MAAM,CAANA,IAAAA,CAAAA,GAAAA,EAAAA,OAAAA,CAA0BK,UAAAA,IAAD,EAAU;gBACjC,IAAI,CAACC,GAAG,CAAHA,IAAG,CAAHA,IAAaA,GAAG,CAAHA,IAAG,CAAHA,KAAd,KAAA,KAAsCG,IAAI,CAAJA,SAAAA,CAAeH,GAAG,CAA5D,IAA4D,CAAlBG,CAA1C,EAAqE;kBACnEC,QAAQ,CAARA,SAAAA,CAAAA,IAAAA,EAAyBJ,GAAG,CAA5BI,IAA4B,CAA5BA;gBACD;cAHHV,CAAAA;;YATJ;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CA5BwC,EAAA;IAAA,OAAA,WAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA;EAAA;;EA6CxCW,SAAS,CAAC,YAAM;IACd,IAAI,CAAA,MAAA,IAAJ,MAAA,EAAuB;MACrB;MACA,IAAMD,QAAQ,GAAGF,UAAU,CAAVA,YAAAA,CAAwBhB,WAAW,CAAnCgB,OAAAA,EAAAA,QAAAA,CAAAA,EAAAA,EAAAA,cAAAA,EAAjB,OAAiBA,CAAAA,CAAjB;MACA,IAAML,SAAS,GAAGS,uBAAlB,EAAA;MACAZ,MAAM,CAANA,IAAAA,CAAAA,SAAAA,EAAAA,OAAAA,CAAgCa,UAAAA,KAAD,EAAW;QACxCH,QAAQ,CAARA,EAAAA,CAAYP,SAAS,CAArBO,KAAqB,CAArBA,EAA8B,YAAA;UAAA;;UAAA,OAAehB,yBAAAA,YAAY,CAAZA,OAAAA,EAAAA,KAAAA,+BAAf,SAAeA,CAAf;QAA9BgB,CAAAA;MADFV,CAAAA;MAGAU,QAAQ,CAARA,QAAAA,CAAkBvB,KAAK,IAAvBuB,EAAAA;;MAEA,IAAItB,KAAK,IAAT,MAAA,EAAqB;QACnB;QACAsB,QAAQ,CAARA,OAAAA,CAAAA,KAAAA,EAAAA,MAAAA;MACD;;MACDI,SAAS,CAATA,QAAS,CAATA;MACAC,UAAU,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA,EAAA,cAAA,EAAVA,OAAU,CAAA,CAAVA;IACD;;IACD,OAAO,YAAM;MACX,IAAInB,MAAM,IAAV,MAAA,EAAsB;QACpBA,MAAM,CAANA,UAAAA;QACAkB,SAAS,CAATA,SAAS,CAATA;MACD;IAJH,CAAA;EAjBO,CAAA,EAATH,EAAS,CAATA;EAyBAK,OAAO,CAAC,YAAM;IACZ,IAAI,CAAA,MAAA,IAAW,CAAf,MAAA,EAAwB;IACxB,IAAMC,GAAG,GAAGrB,MAAM,CAAlB,QAAYA,EAAZ;;IACA,IAAIT,KAAK,KAALA,SAAAA,IAAuBA,KAAK,KAAhC,GAAA,EAA0C;MACxCS,MAAM,CAANA,QAAAA,CAAAA,KAAAA;IACD;EALI,CAAA,EAMJ,CANHoB,KAMG,CANI,CAAPA;EAQAA,OAAO,CAAC,YAAM;IACZ,IAAI,CAAA,MAAA,IAAW,CAAf,MAAA,EAAwB;IACxBpB,MAAM,CAANA,OAAAA,CAAAA,KAAAA,EAAAA,MAAAA;EAFK,CAAA,EAGJ,CAAA,KAAA,EAHHoB,MAGG,CAHI,CAAPA;EAMAA,OAAO,CAAC,YAAM;IACZ,IAAI,CAAA,MAAA,IAAW,CAAf,MAAA,EAAwB;IACxBD,UAAU,CAAA,MAAA,EAAA,QAAA,CAAA,EAAA,EAAA,cAAA,EAAVA,OAAU,CAAA,CAAVA;EAFK,CAAA,EAGJ,CAAA,MAAA,EAHHC,OAGG,CAHI,CAAPA;EAKA,OAAA,aACE,IAAA,CAAA,UAAA,EAAA;IAAU,GAAG,EAAExB;EAAf,CAAA,CADF;AAGD;;AAED,eAAA,aAAe0B,KAAK,CAALA,UAAAA,CAAf,eAAeA,CAAf","sourcesContent":["import React, { useRef, useEffect, useImperativeHandle, useState, useMemo } from 'react';\nimport CodeMirror from 'codemirror';\nimport 'codemirror/mode/meta';\nimport './codemirror.css';\n\nconst defaultOptions = {\n  tabSize: 2,\n  autoCloseBrackets: true,\n  matchBrackets: true,\n  showCursorWhenSelecting: true,\n  // 显示行号\n  lineNumbers: true,\n  fullScreen: true,\n}\n\nfunction ReactCodeMirror(props = {}, ref) {\n  const { options = {}, value = '', width = '100%', height = '100%', lazyLoadMode = true } = props;\n  const [editor, setEditor] = useState();\n  const textareaRef = useRef();\n  const lastestProps = useRef(props);\n\n  useImperativeHandle(ref, () => ({ editor, textarea: textareaRef.current }), [editor, textareaRef]);\n  lastestProps.current = props;\n  \n  // 将props中所有的事件处理函数映射并保存\n  function getEventHandleFromProps() {\n    const propNames = Object.keys(props);\n    const eventHandle = propNames.filter((keyName) => {\n      return /^on+/.test(keyName);\n    });\n\n    const eventDict = {};\n    eventHandle.forEach((ele) => {\n      const name = ele.slice(2);\n      if (name && name[0]) {\n        eventDict[ele] = name.replace(name[0], name[0].toLowerCase());\n      }\n    });\n\n    return eventDict;\n  }\n\n  // http://codemirror.net/doc/manual.html#config\n  async function setOptions(instance, opt = {}) {\n    if (typeof opt === 'object' && window) {\n      const mode = CodeMirror.findModeByName(opt.mode || '');\n      if (lazyLoadMode && mode && mode.mode) {\n        await import(`codemirror/mode/${mode.mode}/${mode.mode}.js`);\n      }\n      if (mode) {\n        opt.mode = mode.mime;\n      }\n      Object.keys(opt).forEach((name) => {\n        if ((opt[name] || opt[name] === false) && JSON.stringify(opt[name])) {\n          instance.setOption(name, opt[name]);\n        }\n      });\n    }\n  }\n\n  useEffect(() => {\n    if (!editor && window) {\n      // 生成codemirror实例\n      const instance = CodeMirror.fromTextArea(textareaRef.current, {...defaultOptions, ...options});\n      const eventDict = getEventHandleFromProps();\n      Object.keys(eventDict).forEach((event) => {\n        instance.on(eventDict[event], (...params) => lastestProps.current[event](...params));\n      });\n      instance.setValue(value || '');\n\n      if (width || height) {\n        // 设置尺寸\n        instance.setSize(width, height);\n      }\n      setEditor(instance);\n      setOptions(instance, {...defaultOptions, ...options});\n    }\n    return () => {\n      if (editor && window) {\n        editor.toTextArea();\n        setEditor(undefined);\n      }\n    }\n  }, []);\n\n  useMemo(() => {\n    if (!editor || !window) return;\n    const val = editor.getValue();\n    if (value !== undefined && value !== val) {\n      editor.setValue(value);\n    }\n  }, [value]);\n\n  useMemo(() => {\n    if (!editor || !window) return;\n    editor.setSize(width, height);\n  }, [width, height]);\n\n\n  useMemo(() => {\n    if (!editor || !window) return;\n    setOptions(editor, {...defaultOptions, ...options});\n  }, [editor, options]);\n  \n  return (\n    <textarea ref={textareaRef} />\n  );\n}\n\nexport default React.forwardRef(ReactCodeMirror);\n"]},"metadata":{},"sourceType":"module"}