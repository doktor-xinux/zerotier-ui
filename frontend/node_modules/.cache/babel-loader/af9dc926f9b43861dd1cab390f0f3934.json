{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../python/python\"), require(\"../stex/stex\"), require(\"../../addon/mode/overlay\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../python/python\", \"../stex/stex\", \"../../addon/mode/overlay\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode('rst', function (config, options) {\n    var rx_strong = /^\\*\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*\\*/;\n    var rx_emphasis = /^\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*/;\n    var rx_literal = /^``[^`\\s](?:[^`]*[^`\\s])``/;\n    var rx_number = /^(?:[\\d]+(?:[\\.,]\\d+)*)/;\n    var rx_positive = /^(?:\\s\\+[\\d]+(?:[\\.,]\\d+)*)/;\n    var rx_negative = /^(?:\\s\\-[\\d]+(?:[\\.,]\\d+)*)/;\n    var rx_uri_protocol = \"[Hh][Tt][Tt][Pp][Ss]?://\";\n    var rx_uri_domain = \"(?:[\\\\d\\\\w.-]+)\\\\.(?:\\\\w{2,6})\";\n    var rx_uri_path = \"(?:/[\\\\d\\\\w\\\\#\\\\%\\\\&\\\\-\\\\.\\\\,\\\\/\\\\:\\\\=\\\\?\\\\~]+)*\";\n    var rx_uri = new RegExp(\"^\" + rx_uri_protocol + rx_uri_domain + rx_uri_path);\n    var overlay = {\n      token: function token(stream) {\n        if (stream.match(rx_strong) && stream.match(/\\W+|$/, false)) return 'strong';\n        if (stream.match(rx_emphasis) && stream.match(/\\W+|$/, false)) return 'em';\n        if (stream.match(rx_literal) && stream.match(/\\W+|$/, false)) return 'string-2';\n        if (stream.match(rx_number)) return 'number';\n        if (stream.match(rx_positive)) return 'positive';\n        if (stream.match(rx_negative)) return 'negative';\n        if (stream.match(rx_uri)) return 'link';\n\n        while (stream.next() != null) {\n          if (stream.match(rx_strong, false)) break;\n          if (stream.match(rx_emphasis, false)) break;\n          if (stream.match(rx_literal, false)) break;\n          if (stream.match(rx_number, false)) break;\n          if (stream.match(rx_positive, false)) break;\n          if (stream.match(rx_negative, false)) break;\n          if (stream.match(rx_uri, false)) break;\n        }\n\n        return null;\n      }\n    };\n    var mode = CodeMirror.getMode(config, options.backdrop || 'rst-base');\n    return CodeMirror.overlayMode(mode, overlay, true); // combine\n  }, 'python', 'stex'); ///////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////////\n\n  CodeMirror.defineMode('rst-base', function (config) {\n    ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n    function format(string) {\n      var args = Array.prototype.slice.call(arguments, 1);\n      return string.replace(/{(\\d+)}/g, function (match, n) {\n        return typeof args[n] != 'undefined' ? args[n] : match;\n      });\n    } ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    var mode_python = CodeMirror.getMode(config, 'python');\n    var mode_stex = CodeMirror.getMode(config, 'stex'); ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    var SEPA = \"\\\\s+\";\n    var TAIL = \"(?:\\\\s*|\\\\W|$)\",\n        rx_TAIL = new RegExp(format('^{0}', TAIL));\n    var NAME = \"(?:[^\\\\W\\\\d_](?:[\\\\w!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\",\n        rx_NAME = new RegExp(format('^{0}', NAME));\n    var NAME_WWS = \"(?:[^\\\\W\\\\d_](?:[\\\\w\\\\s!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\";\n    var REF_NAME = format('(?:{0}|`{1}`)', NAME, NAME_WWS);\n    var TEXT1 = \"(?:[^\\\\s\\\\|](?:[^\\\\|]*[^\\\\s\\\\|])?)\";\n    var TEXT2 = \"(?:[^\\\\`]+)\",\n        rx_TEXT2 = new RegExp(format('^{0}', TEXT2));\n    var rx_section = new RegExp(\"^([!'#$%&\\\"()*+,-./:;<=>?@\\\\[\\\\\\\\\\\\]^_`{|}~])\\\\1{3,}\\\\s*$\");\n    var rx_explicit = new RegExp(format('^\\\\.\\\\.{0}', SEPA));\n    var rx_link = new RegExp(format('^_{0}:{1}|^__:{1}', REF_NAME, TAIL));\n    var rx_directive = new RegExp(format('^{0}::{1}', REF_NAME, TAIL));\n    var rx_substitution = new RegExp(format('^\\\\|{0}\\\\|{1}{2}::{3}', TEXT1, SEPA, REF_NAME, TAIL));\n    var rx_footnote = new RegExp(format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]{1}', REF_NAME, TAIL));\n    var rx_citation = new RegExp(format('^\\\\[{0}\\\\]{1}', REF_NAME, TAIL));\n    var rx_substitution_ref = new RegExp(format('^\\\\|{0}\\\\|', TEXT1));\n    var rx_footnote_ref = new RegExp(format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]_', REF_NAME));\n    var rx_citation_ref = new RegExp(format('^\\\\[{0}\\\\]_', REF_NAME));\n    var rx_link_ref1 = new RegExp(format('^{0}__?', REF_NAME));\n    var rx_link_ref2 = new RegExp(format('^`{0}`_', TEXT2));\n    var rx_role_pre = new RegExp(format('^:{0}:`{1}`{2}', NAME, TEXT2, TAIL));\n    var rx_role_suf = new RegExp(format('^`{1}`:{0}:{2}', NAME, TEXT2, TAIL));\n    var rx_role = new RegExp(format('^:{0}:{1}', NAME, TAIL));\n    var rx_directive_name = new RegExp(format('^{0}', REF_NAME));\n    var rx_directive_tail = new RegExp(format('^::{0}', TAIL));\n    var rx_substitution_text = new RegExp(format('^\\\\|{0}\\\\|', TEXT1));\n    var rx_substitution_sepa = new RegExp(format('^{0}', SEPA));\n    var rx_substitution_name = new RegExp(format('^{0}', REF_NAME));\n    var rx_substitution_tail = new RegExp(format('^::{0}', TAIL));\n    var rx_link_head = new RegExp(\"^_\");\n    var rx_link_name = new RegExp(format('^{0}|_', REF_NAME));\n    var rx_link_tail = new RegExp(format('^:{0}', TAIL));\n    var rx_verbatim = new RegExp('^::\\\\s*$');\n    var rx_examples = new RegExp('^\\\\s+(?:>>>|In \\\\[\\\\d+\\\\]:)\\\\s'); ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    function to_normal(stream, state) {\n      var token = null;\n\n      if (stream.sol() && stream.match(rx_examples, false)) {\n        change(state, to_mode, {\n          mode: mode_python,\n          local: CodeMirror.startState(mode_python)\n        });\n      } else if (stream.sol() && stream.match(rx_explicit)) {\n        change(state, to_explicit);\n        token = 'meta';\n      } else if (stream.sol() && stream.match(rx_section)) {\n        change(state, to_normal);\n        token = 'header';\n      } else if (phase(state) == rx_role_pre || stream.match(rx_role_pre, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_normal, context(rx_role_pre, 1));\n            stream.match(/^:/);\n            token = 'meta';\n            break;\n\n          case 1:\n            change(state, to_normal, context(rx_role_pre, 2));\n            stream.match(rx_NAME);\n            token = 'keyword';\n\n            if (stream.current().match(/^(?:math|latex)/)) {\n              state.tmp_stex = true;\n            }\n\n            break;\n\n          case 2:\n            change(state, to_normal, context(rx_role_pre, 3));\n            stream.match(/^:`/);\n            token = 'meta';\n            break;\n\n          case 3:\n            if (state.tmp_stex) {\n              state.tmp_stex = undefined;\n              state.tmp = {\n                mode: mode_stex,\n                local: CodeMirror.startState(mode_stex)\n              };\n            }\n\n            if (state.tmp) {\n              if (stream.peek() == '`') {\n                change(state, to_normal, context(rx_role_pre, 4));\n                state.tmp = undefined;\n                break;\n              }\n\n              token = state.tmp.mode.token(stream, state.tmp.local);\n              break;\n            }\n\n            change(state, to_normal, context(rx_role_pre, 4));\n            stream.match(rx_TEXT2);\n            token = 'string';\n            break;\n\n          case 4:\n            change(state, to_normal, context(rx_role_pre, 5));\n            stream.match(/^`/);\n            token = 'meta';\n            break;\n\n          case 5:\n            change(state, to_normal, context(rx_role_pre, 6));\n            stream.match(rx_TAIL);\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (phase(state) == rx_role_suf || stream.match(rx_role_suf, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_normal, context(rx_role_suf, 1));\n            stream.match(/^`/);\n            token = 'meta';\n            break;\n\n          case 1:\n            change(state, to_normal, context(rx_role_suf, 2));\n            stream.match(rx_TEXT2);\n            token = 'string';\n            break;\n\n          case 2:\n            change(state, to_normal, context(rx_role_suf, 3));\n            stream.match(/^`:/);\n            token = 'meta';\n            break;\n\n          case 3:\n            change(state, to_normal, context(rx_role_suf, 4));\n            stream.match(rx_NAME);\n            token = 'keyword';\n            break;\n\n          case 4:\n            change(state, to_normal, context(rx_role_suf, 5));\n            stream.match(/^:/);\n            token = 'meta';\n            break;\n\n          case 5:\n            change(state, to_normal, context(rx_role_suf, 6));\n            stream.match(rx_TAIL);\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (phase(state) == rx_role || stream.match(rx_role, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_normal, context(rx_role, 1));\n            stream.match(/^:/);\n            token = 'meta';\n            break;\n\n          case 1:\n            change(state, to_normal, context(rx_role, 2));\n            stream.match(rx_NAME);\n            token = 'keyword';\n            break;\n\n          case 2:\n            change(state, to_normal, context(rx_role, 3));\n            stream.match(/^:/);\n            token = 'meta';\n            break;\n\n          case 3:\n            change(state, to_normal, context(rx_role, 4));\n            stream.match(rx_TAIL);\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (phase(state) == rx_substitution_ref || stream.match(rx_substitution_ref, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_normal, context(rx_substitution_ref, 1));\n            stream.match(rx_substitution_text);\n            token = 'variable-2';\n            break;\n\n          case 1:\n            change(state, to_normal, context(rx_substitution_ref, 2));\n            if (stream.match(/^_?_?/)) token = 'link';\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (stream.match(rx_footnote_ref)) {\n        change(state, to_normal);\n        token = 'quote';\n      } else if (stream.match(rx_citation_ref)) {\n        change(state, to_normal);\n        token = 'quote';\n      } else if (stream.match(rx_link_ref1)) {\n        change(state, to_normal);\n\n        if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n          token = 'link';\n        }\n      } else if (phase(state) == rx_link_ref2 || stream.match(rx_link_ref2, false)) {\n        switch (stage(state)) {\n          case 0:\n            if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n              change(state, to_normal, context(rx_link_ref2, 1));\n            } else {\n              stream.match(rx_link_ref2);\n            }\n\n            break;\n\n          case 1:\n            change(state, to_normal, context(rx_link_ref2, 2));\n            stream.match(/^`/);\n            token = 'link';\n            break;\n\n          case 2:\n            change(state, to_normal, context(rx_link_ref2, 3));\n            stream.match(rx_TEXT2);\n            break;\n\n          case 3:\n            change(state, to_normal, context(rx_link_ref2, 4));\n            stream.match(/^`_/);\n            token = 'link';\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (stream.match(rx_verbatim)) {\n        change(state, to_verbatim);\n      } else {\n        if (stream.next()) change(state, to_normal);\n      }\n\n      return token;\n    } ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    function to_explicit(stream, state) {\n      var token = null;\n\n      if (phase(state) == rx_substitution || stream.match(rx_substitution, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_explicit, context(rx_substitution, 1));\n            stream.match(rx_substitution_text);\n            token = 'variable-2';\n            break;\n\n          case 1:\n            change(state, to_explicit, context(rx_substitution, 2));\n            stream.match(rx_substitution_sepa);\n            break;\n\n          case 2:\n            change(state, to_explicit, context(rx_substitution, 3));\n            stream.match(rx_substitution_name);\n            token = 'keyword';\n            break;\n\n          case 3:\n            change(state, to_explicit, context(rx_substitution, 4));\n            stream.match(rx_substitution_tail);\n            token = 'meta';\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (phase(state) == rx_directive || stream.match(rx_directive, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_explicit, context(rx_directive, 1));\n            stream.match(rx_directive_name);\n            token = 'keyword';\n            if (stream.current().match(/^(?:math|latex)/)) state.tmp_stex = true;else if (stream.current().match(/^python/)) state.tmp_py = true;\n            break;\n\n          case 1:\n            change(state, to_explicit, context(rx_directive, 2));\n            stream.match(rx_directive_tail);\n            token = 'meta';\n\n            if (stream.match(/^latex\\s*$/) || state.tmp_stex) {\n              state.tmp_stex = undefined;\n              change(state, to_mode, {\n                mode: mode_stex,\n                local: CodeMirror.startState(mode_stex)\n              });\n            }\n\n            break;\n\n          case 2:\n            change(state, to_explicit, context(rx_directive, 3));\n\n            if (stream.match(/^python\\s*$/) || state.tmp_py) {\n              state.tmp_py = undefined;\n              change(state, to_mode, {\n                mode: mode_python,\n                local: CodeMirror.startState(mode_python)\n              });\n            }\n\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (phase(state) == rx_link || stream.match(rx_link, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_explicit, context(rx_link, 1));\n            stream.match(rx_link_head);\n            stream.match(rx_link_name);\n            token = 'link';\n            break;\n\n          case 1:\n            change(state, to_explicit, context(rx_link, 2));\n            stream.match(rx_link_tail);\n            token = 'meta';\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (stream.match(rx_footnote)) {\n        change(state, to_normal);\n        token = 'quote';\n      } else if (stream.match(rx_citation)) {\n        change(state, to_normal);\n        token = 'quote';\n      } else {\n        stream.eatSpace();\n\n        if (stream.eol()) {\n          change(state, to_normal);\n        } else {\n          stream.skipToEnd();\n          change(state, to_comment);\n          token = 'comment';\n        }\n      }\n\n      return token;\n    } ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    function to_comment(stream, state) {\n      return as_block(stream, state, 'comment');\n    }\n\n    function to_verbatim(stream, state) {\n      return as_block(stream, state, 'meta');\n    }\n\n    function as_block(stream, state, token) {\n      if (stream.eol() || stream.eatSpace()) {\n        stream.skipToEnd();\n        return token;\n      } else {\n        change(state, to_normal);\n        return null;\n      }\n    } ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    function to_mode(stream, state) {\n      if (state.ctx.mode && state.ctx.local) {\n        if (stream.sol()) {\n          if (!stream.eatSpace()) change(state, to_normal);\n          return null;\n        }\n\n        return state.ctx.mode.token(stream, state.ctx.local);\n      }\n\n      change(state, to_normal);\n      return null;\n    } ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    function context(phase, stage, mode, local) {\n      return {\n        phase: phase,\n        stage: stage,\n        mode: mode,\n        local: local\n      };\n    }\n\n    function change(state, tok, ctx) {\n      state.tok = tok;\n      state.ctx = ctx || {};\n    }\n\n    function stage(state) {\n      return state.ctx.stage || 0;\n    }\n\n    function phase(state) {\n      return state.ctx.phase;\n    } ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    return {\n      startState: function startState() {\n        return {\n          tok: to_normal,\n          ctx: context(undefined, 0)\n        };\n      },\n      copyState: function copyState(state) {\n        var ctx = state.ctx,\n            tmp = state.tmp;\n        if (ctx.local) ctx = {\n          mode: ctx.mode,\n          local: CodeMirror.copyState(ctx.mode, ctx.local)\n        };\n        if (tmp) tmp = {\n          mode: tmp.mode,\n          local: CodeMirror.copyState(tmp.mode, tmp.local)\n        };\n        return {\n          tok: state.tok,\n          ctx: ctx,\n          tmp: tmp\n        };\n      },\n      innerMode: function innerMode(state) {\n        return state.tmp ? {\n          state: state.tmp.local,\n          mode: state.tmp.mode\n        } : state.ctx.mode ? {\n          state: state.ctx.local,\n          mode: state.ctx.mode\n        } : null;\n      },\n      token: function token(stream, state) {\n        return state.tok(stream, state);\n      }\n    };\n  }, 'python', 'stex'); ///////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////////\n\n  CodeMirror.defineMIME('text/x-rst', 'rst'); ///////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////////\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","options","rx_strong","rx_emphasis","rx_literal","rx_number","rx_positive","rx_negative","rx_uri_protocol","rx_uri_domain","rx_uri_path","rx_uri","RegExp","overlay","token","stream","match","next","mode","getMode","backdrop","overlayMode","format","string","args","Array","prototype","slice","call","arguments","replace","n","mode_python","mode_stex","SEPA","TAIL","rx_TAIL","NAME","rx_NAME","NAME_WWS","REF_NAME","TEXT1","TEXT2","rx_TEXT2","rx_section","rx_explicit","rx_link","rx_directive","rx_substitution","rx_footnote","rx_citation","rx_substitution_ref","rx_footnote_ref","rx_citation_ref","rx_link_ref1","rx_link_ref2","rx_role_pre","rx_role_suf","rx_role","rx_directive_name","rx_directive_tail","rx_substitution_text","rx_substitution_sepa","rx_substitution_name","rx_substitution_tail","rx_link_head","rx_link_name","rx_link_tail","rx_verbatim","rx_examples","to_normal","state","sol","change","to_mode","local","startState","to_explicit","phase","stage","context","current","tmp_stex","undefined","tmp","peek","to_verbatim","tmp_py","eatSpace","eol","skipToEnd","to_comment","as_block","ctx","tok","copyState","innerMode","defineMIME"],"sources":["/mnt/Datengrab/python/Zero-tier/frontend/node_modules/codemirror/mode/rst/rst.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../python/python\"), require(\"../stex/stex\"), require(\"../../addon/mode/overlay\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../python/python\", \"../stex/stex\", \"../../addon/mode/overlay\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode('rst', function (config, options) {\n\n  var rx_strong = /^\\*\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*\\*/;\n  var rx_emphasis = /^\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*/;\n  var rx_literal = /^``[^`\\s](?:[^`]*[^`\\s])``/;\n\n  var rx_number = /^(?:[\\d]+(?:[\\.,]\\d+)*)/;\n  var rx_positive = /^(?:\\s\\+[\\d]+(?:[\\.,]\\d+)*)/;\n  var rx_negative = /^(?:\\s\\-[\\d]+(?:[\\.,]\\d+)*)/;\n\n  var rx_uri_protocol = \"[Hh][Tt][Tt][Pp][Ss]?://\";\n  var rx_uri_domain = \"(?:[\\\\d\\\\w.-]+)\\\\.(?:\\\\w{2,6})\";\n  var rx_uri_path = \"(?:/[\\\\d\\\\w\\\\#\\\\%\\\\&\\\\-\\\\.\\\\,\\\\/\\\\:\\\\=\\\\?\\\\~]+)*\";\n  var rx_uri = new RegExp(\"^\" + rx_uri_protocol + rx_uri_domain + rx_uri_path);\n\n  var overlay = {\n    token: function (stream) {\n\n      if (stream.match(rx_strong) && stream.match (/\\W+|$/, false))\n        return 'strong';\n      if (stream.match(rx_emphasis) && stream.match (/\\W+|$/, false))\n        return 'em';\n      if (stream.match(rx_literal) && stream.match (/\\W+|$/, false))\n        return 'string-2';\n      if (stream.match(rx_number))\n        return 'number';\n      if (stream.match(rx_positive))\n        return 'positive';\n      if (stream.match(rx_negative))\n        return 'negative';\n      if (stream.match(rx_uri))\n        return 'link';\n\n      while (stream.next() != null) {\n        if (stream.match(rx_strong, false)) break;\n        if (stream.match(rx_emphasis, false)) break;\n        if (stream.match(rx_literal, false)) break;\n        if (stream.match(rx_number, false)) break;\n        if (stream.match(rx_positive, false)) break;\n        if (stream.match(rx_negative, false)) break;\n        if (stream.match(rx_uri, false)) break;\n      }\n\n      return null;\n    }\n  };\n\n  var mode = CodeMirror.getMode(\n    config, options.backdrop || 'rst-base'\n  );\n\n  return CodeMirror.overlayMode(mode, overlay, true); // combine\n}, 'python', 'stex');\n\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\nCodeMirror.defineMode('rst-base', function (config) {\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function format(string) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return string.replace(/{(\\d+)}/g, function (match, n) {\n      return typeof args[n] != 'undefined' ? args[n] : match;\n    });\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  var mode_python = CodeMirror.getMode(config, 'python');\n  var mode_stex = CodeMirror.getMode(config, 'stex');\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  var SEPA = \"\\\\s+\";\n  var TAIL = \"(?:\\\\s*|\\\\W|$)\",\n  rx_TAIL = new RegExp(format('^{0}', TAIL));\n\n  var NAME =\n    \"(?:[^\\\\W\\\\d_](?:[\\\\w!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\",\n  rx_NAME = new RegExp(format('^{0}', NAME));\n  var NAME_WWS =\n    \"(?:[^\\\\W\\\\d_](?:[\\\\w\\\\s!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\";\n  var REF_NAME = format('(?:{0}|`{1}`)', NAME, NAME_WWS);\n\n  var TEXT1 = \"(?:[^\\\\s\\\\|](?:[^\\\\|]*[^\\\\s\\\\|])?)\";\n  var TEXT2 = \"(?:[^\\\\`]+)\",\n  rx_TEXT2 = new RegExp(format('^{0}', TEXT2));\n\n  var rx_section = new RegExp(\n    \"^([!'#$%&\\\"()*+,-./:;<=>?@\\\\[\\\\\\\\\\\\]^_`{|}~])\\\\1{3,}\\\\s*$\");\n  var rx_explicit = new RegExp(\n    format('^\\\\.\\\\.{0}', SEPA));\n  var rx_link = new RegExp(\n    format('^_{0}:{1}|^__:{1}', REF_NAME, TAIL));\n  var rx_directive = new RegExp(\n    format('^{0}::{1}', REF_NAME, TAIL));\n  var rx_substitution = new RegExp(\n    format('^\\\\|{0}\\\\|{1}{2}::{3}', TEXT1, SEPA, REF_NAME, TAIL));\n  var rx_footnote = new RegExp(\n    format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]{1}', REF_NAME, TAIL));\n  var rx_citation = new RegExp(\n    format('^\\\\[{0}\\\\]{1}', REF_NAME, TAIL));\n\n  var rx_substitution_ref = new RegExp(\n    format('^\\\\|{0}\\\\|', TEXT1));\n  var rx_footnote_ref = new RegExp(\n    format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]_', REF_NAME));\n  var rx_citation_ref = new RegExp(\n    format('^\\\\[{0}\\\\]_', REF_NAME));\n  var rx_link_ref1 = new RegExp(\n    format('^{0}__?', REF_NAME));\n  var rx_link_ref2 = new RegExp(\n    format('^`{0}`_', TEXT2));\n\n  var rx_role_pre = new RegExp(\n    format('^:{0}:`{1}`{2}', NAME, TEXT2, TAIL));\n  var rx_role_suf = new RegExp(\n    format('^`{1}`:{0}:{2}', NAME, TEXT2, TAIL));\n  var rx_role = new RegExp(\n    format('^:{0}:{1}', NAME, TAIL));\n\n  var rx_directive_name = new RegExp(format('^{0}', REF_NAME));\n  var rx_directive_tail = new RegExp(format('^::{0}', TAIL));\n  var rx_substitution_text = new RegExp(format('^\\\\|{0}\\\\|', TEXT1));\n  var rx_substitution_sepa = new RegExp(format('^{0}', SEPA));\n  var rx_substitution_name = new RegExp(format('^{0}', REF_NAME));\n  var rx_substitution_tail = new RegExp(format('^::{0}', TAIL));\n  var rx_link_head = new RegExp(\"^_\");\n  var rx_link_name = new RegExp(format('^{0}|_', REF_NAME));\n  var rx_link_tail = new RegExp(format('^:{0}', TAIL));\n\n  var rx_verbatim = new RegExp('^::\\\\s*$');\n  var rx_examples = new RegExp('^\\\\s+(?:>>>|In \\\\[\\\\d+\\\\]:)\\\\s');\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_normal(stream, state) {\n    var token = null;\n\n    if (stream.sol() && stream.match(rx_examples, false)) {\n      change(state, to_mode, {\n        mode: mode_python, local: CodeMirror.startState(mode_python)\n      });\n    } else if (stream.sol() && stream.match(rx_explicit)) {\n      change(state, to_explicit);\n      token = 'meta';\n    } else if (stream.sol() && stream.match(rx_section)) {\n      change(state, to_normal);\n      token = 'header';\n    } else if (phase(state) == rx_role_pre ||\n               stream.match(rx_role_pre, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_role_pre, 1));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_role_pre, 2));\n        stream.match(rx_NAME);\n        token = 'keyword';\n\n        if (stream.current().match(/^(?:math|latex)/)) {\n          state.tmp_stex = true;\n        }\n        break;\n      case 2:\n        change(state, to_normal, context(rx_role_pre, 3));\n        stream.match(/^:`/);\n        token = 'meta';\n        break;\n      case 3:\n        if (state.tmp_stex) {\n          state.tmp_stex = undefined; state.tmp = {\n            mode: mode_stex, local: CodeMirror.startState(mode_stex)\n          };\n        }\n\n        if (state.tmp) {\n          if (stream.peek() == '`') {\n            change(state, to_normal, context(rx_role_pre, 4));\n            state.tmp = undefined;\n            break;\n          }\n\n          token = state.tmp.mode.token(stream, state.tmp.local);\n          break;\n        }\n\n        change(state, to_normal, context(rx_role_pre, 4));\n        stream.match(rx_TEXT2);\n        token = 'string';\n        break;\n      case 4:\n        change(state, to_normal, context(rx_role_pre, 5));\n        stream.match(/^`/);\n        token = 'meta';\n        break;\n      case 5:\n        change(state, to_normal, context(rx_role_pre, 6));\n        stream.match(rx_TAIL);\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_role_suf ||\n               stream.match(rx_role_suf, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_role_suf, 1));\n        stream.match(/^`/);\n        token = 'meta';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_role_suf, 2));\n        stream.match(rx_TEXT2);\n        token = 'string';\n        break;\n      case 2:\n        change(state, to_normal, context(rx_role_suf, 3));\n        stream.match(/^`:/);\n        token = 'meta';\n        break;\n      case 3:\n        change(state, to_normal, context(rx_role_suf, 4));\n        stream.match(rx_NAME);\n        token = 'keyword';\n        break;\n      case 4:\n        change(state, to_normal, context(rx_role_suf, 5));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 5:\n        change(state, to_normal, context(rx_role_suf, 6));\n        stream.match(rx_TAIL);\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_role || stream.match(rx_role, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_role, 1));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_role, 2));\n        stream.match(rx_NAME);\n        token = 'keyword';\n        break;\n      case 2:\n        change(state, to_normal, context(rx_role, 3));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 3:\n        change(state, to_normal, context(rx_role, 4));\n        stream.match(rx_TAIL);\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_substitution_ref ||\n               stream.match(rx_substitution_ref, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_substitution_ref, 1));\n        stream.match(rx_substitution_text);\n        token = 'variable-2';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_substitution_ref, 2));\n        if (stream.match(/^_?_?/)) token = 'link';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (stream.match(rx_footnote_ref)) {\n      change(state, to_normal);\n      token = 'quote';\n    } else if (stream.match(rx_citation_ref)) {\n      change(state, to_normal);\n      token = 'quote';\n    } else if (stream.match(rx_link_ref1)) {\n      change(state, to_normal);\n      if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n        token = 'link';\n      }\n    } else if (phase(state) == rx_link_ref2 ||\n               stream.match(rx_link_ref2, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n          change(state, to_normal, context(rx_link_ref2, 1));\n        } else {\n          stream.match(rx_link_ref2);\n        }\n        break;\n      case 1:\n        change(state, to_normal, context(rx_link_ref2, 2));\n        stream.match(/^`/);\n        token = 'link';\n        break;\n      case 2:\n        change(state, to_normal, context(rx_link_ref2, 3));\n        stream.match(rx_TEXT2);\n        break;\n      case 3:\n        change(state, to_normal, context(rx_link_ref2, 4));\n        stream.match(/^`_/);\n        token = 'link';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (stream.match(rx_verbatim)) {\n      change(state, to_verbatim);\n    }\n\n    else {\n      if (stream.next()) change(state, to_normal);\n    }\n\n    return token;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_explicit(stream, state) {\n    var token = null;\n\n    if (phase(state) == rx_substitution ||\n        stream.match(rx_substitution, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_explicit, context(rx_substitution, 1));\n        stream.match(rx_substitution_text);\n        token = 'variable-2';\n        break;\n      case 1:\n        change(state, to_explicit, context(rx_substitution, 2));\n        stream.match(rx_substitution_sepa);\n        break;\n      case 2:\n        change(state, to_explicit, context(rx_substitution, 3));\n        stream.match(rx_substitution_name);\n        token = 'keyword';\n        break;\n      case 3:\n        change(state, to_explicit, context(rx_substitution, 4));\n        stream.match(rx_substitution_tail);\n        token = 'meta';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_directive ||\n               stream.match(rx_directive, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_explicit, context(rx_directive, 1));\n        stream.match(rx_directive_name);\n        token = 'keyword';\n\n        if (stream.current().match(/^(?:math|latex)/))\n          state.tmp_stex = true;\n        else if (stream.current().match(/^python/))\n          state.tmp_py = true;\n        break;\n      case 1:\n        change(state, to_explicit, context(rx_directive, 2));\n        stream.match(rx_directive_tail);\n        token = 'meta';\n\n        if (stream.match(/^latex\\s*$/) || state.tmp_stex) {\n          state.tmp_stex = undefined; change(state, to_mode, {\n            mode: mode_stex, local: CodeMirror.startState(mode_stex)\n          });\n        }\n        break;\n      case 2:\n        change(state, to_explicit, context(rx_directive, 3));\n        if (stream.match(/^python\\s*$/) || state.tmp_py) {\n          state.tmp_py = undefined; change(state, to_mode, {\n            mode: mode_python, local: CodeMirror.startState(mode_python)\n          });\n        }\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_link || stream.match(rx_link, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_explicit, context(rx_link, 1));\n        stream.match(rx_link_head);\n        stream.match(rx_link_name);\n        token = 'link';\n        break;\n      case 1:\n        change(state, to_explicit, context(rx_link, 2));\n        stream.match(rx_link_tail);\n        token = 'meta';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (stream.match(rx_footnote)) {\n      change(state, to_normal);\n      token = 'quote';\n    } else if (stream.match(rx_citation)) {\n      change(state, to_normal);\n      token = 'quote';\n    }\n\n    else {\n      stream.eatSpace();\n      if (stream.eol()) {\n        change(state, to_normal);\n      } else {\n        stream.skipToEnd();\n        change(state, to_comment);\n        token = 'comment';\n      }\n    }\n\n    return token;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_comment(stream, state) {\n    return as_block(stream, state, 'comment');\n  }\n\n  function to_verbatim(stream, state) {\n    return as_block(stream, state, 'meta');\n  }\n\n  function as_block(stream, state, token) {\n    if (stream.eol() || stream.eatSpace()) {\n      stream.skipToEnd();\n      return token;\n    } else {\n      change(state, to_normal);\n      return null;\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_mode(stream, state) {\n\n    if (state.ctx.mode && state.ctx.local) {\n\n      if (stream.sol()) {\n        if (!stream.eatSpace()) change(state, to_normal);\n        return null;\n      }\n\n      return state.ctx.mode.token(stream, state.ctx.local);\n    }\n\n    change(state, to_normal);\n    return null;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function context(phase, stage, mode, local) {\n    return {phase: phase, stage: stage, mode: mode, local: local};\n  }\n\n  function change(state, tok, ctx) {\n    state.tok = tok;\n    state.ctx = ctx || {};\n  }\n\n  function stage(state) {\n    return state.ctx.stage || 0;\n  }\n\n  function phase(state) {\n    return state.ctx.phase;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  return {\n    startState: function () {\n      return {tok: to_normal, ctx: context(undefined, 0)};\n    },\n\n    copyState: function (state) {\n      var ctx = state.ctx, tmp = state.tmp;\n      if (ctx.local)\n        ctx = {mode: ctx.mode, local: CodeMirror.copyState(ctx.mode, ctx.local)};\n      if (tmp)\n        tmp = {mode: tmp.mode, local: CodeMirror.copyState(tmp.mode, tmp.local)};\n      return {tok: state.tok, ctx: ctx, tmp: tmp};\n    },\n\n    innerMode: function (state) {\n      return state.tmp      ? {state: state.tmp.local, mode: state.tmp.mode}\n      : state.ctx.mode ? {state: state.ctx.local, mode: state.ctx.mode}\n      : null;\n    },\n\n    token: function (stream, state) {\n      return state.tok(stream, state);\n    }\n  };\n}, 'python', 'stex');\n\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\nCodeMirror.defineMIME('text/x-rst', 'rst');\n\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}