{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var paramData = {\n    noEndTag: true,\n    soyState: \"param-def\"\n  };\n  var tags = {\n    \"alias\": {\n      noEndTag: true\n    },\n    \"delpackage\": {\n      noEndTag: true\n    },\n    \"namespace\": {\n      noEndTag: true,\n      soyState: \"namespace-def\"\n    },\n    \"@attribute\": paramData,\n    \"@attribute?\": paramData,\n    \"@param\": paramData,\n    \"@param?\": paramData,\n    \"@inject\": paramData,\n    \"@inject?\": paramData,\n    \"@state\": paramData,\n    \"template\": {\n      soyState: \"templ-def\",\n      variableScope: true\n    },\n    \"extern\": {\n      soyState: \"param-def\"\n    },\n    \"export\": {\n      soyState: \"export\"\n    },\n    \"literal\": {},\n    \"msg\": {},\n    \"fallbackmsg\": {\n      noEndTag: true,\n      reduceIndent: true\n    },\n    \"select\": {},\n    \"plural\": {},\n    \"let\": {\n      soyState: \"var-def\"\n    },\n    \"if\": {},\n    \"javaimpl\": {},\n    \"jsimpl\": {},\n    \"elseif\": {\n      noEndTag: true,\n      reduceIndent: true\n    },\n    \"else\": {\n      noEndTag: true,\n      reduceIndent: true\n    },\n    \"switch\": {},\n    \"case\": {\n      noEndTag: true,\n      reduceIndent: true\n    },\n    \"default\": {\n      noEndTag: true,\n      reduceIndent: true\n    },\n    \"foreach\": {\n      variableScope: true,\n      soyState: \"for-loop\"\n    },\n    \"ifempty\": {\n      noEndTag: true,\n      reduceIndent: true\n    },\n    \"for\": {\n      variableScope: true,\n      soyState: \"for-loop\"\n    },\n    \"call\": {\n      soyState: \"templ-ref\"\n    },\n    \"param\": {\n      soyState: \"param-ref\"\n    },\n    \"print\": {\n      noEndTag: true\n    },\n    \"deltemplate\": {\n      soyState: \"templ-def\",\n      variableScope: true\n    },\n    \"delcall\": {\n      soyState: \"templ-ref\"\n    },\n    \"log\": {},\n    \"element\": {\n      variableScope: true\n    },\n    \"velog\": {},\n    \"const\": {\n      soyState: \"const-def\"\n    }\n  };\n  var indentingTags = Object.keys(tags).filter(function (tag) {\n    return !tags[tag].noEndTag || tags[tag].reduceIndent;\n  });\n  CodeMirror.defineMode(\"soy\", function (config) {\n    var textMode = CodeMirror.getMode(config, \"text/plain\");\n    var modes = {\n      html: CodeMirror.getMode(config, {\n        name: \"text/html\",\n        multilineTagIndentFactor: 2,\n        multilineTagIndentPastTag: false,\n        allowMissingTagName: true\n      }),\n      attributes: textMode,\n      text: textMode,\n      uri: textMode,\n      trusted_resource_uri: textMode,\n      css: CodeMirror.getMode(config, \"text/css\"),\n      js: CodeMirror.getMode(config, {\n        name: \"text/javascript\",\n        statementIndent: 2 * config.indentUnit\n      })\n    };\n\n    function last(array) {\n      return array[array.length - 1];\n    }\n\n    function tokenUntil(stream, state, untilRegExp) {\n      if (stream.sol()) {\n        for (var indent = 0; indent < state.indent; indent++) {\n          if (!stream.eat(/\\s/)) break;\n        }\n\n        if (indent) return null;\n      }\n\n      var oldString = stream.string;\n      var match = untilRegExp.exec(oldString.substr(stream.pos));\n\n      if (match) {\n        // We don't use backUp because it backs up just the position, not the state.\n        // This uses an undocumented API.\n        stream.string = oldString.substr(0, stream.pos + match.index);\n      }\n\n      var result = stream.hideFirstChars(state.indent, function () {\n        var localState = last(state.localStates);\n        return localState.mode.token(stream, localState.state);\n      });\n      stream.string = oldString;\n      return result;\n    }\n\n    function contains(list, element) {\n      while (list) {\n        if (list.element === element) return true;\n        list = list.next;\n      }\n\n      return false;\n    }\n\n    function prepend(list, element) {\n      return {\n        element: element,\n        next: list\n      };\n    }\n\n    function popcontext(state) {\n      if (!state.context) return;\n\n      if (state.context.scope) {\n        state.variables = state.context.scope;\n      }\n\n      state.context = state.context.previousContext;\n    } // Reference a variable `name` in `list`.\n    // Let `loose` be truthy to ignore missing identifiers.\n\n\n    function ref(list, name, loose) {\n      return contains(list, name) ? \"variable-2\" : loose ? \"variable\" : \"variable-2 error\";\n    } // Data for an open soy tag.\n\n\n    function Context(previousContext, tag, scope) {\n      this.previousContext = previousContext;\n      this.tag = tag;\n      this.kind = null;\n      this.scope = scope;\n    }\n\n    function expression(stream, state) {\n      var match;\n\n      if (stream.match(/[[]/)) {\n        state.soyState.push(\"list-literal\");\n        state.context = new Context(state.context, \"list-literal\", state.variables);\n        state.lookupVariables = false;\n        return null;\n      } else if (stream.match(/\\bmap(?=\\()/)) {\n        state.soyState.push(\"map-literal\");\n        return \"keyword\";\n      } else if (stream.match(/\\brecord(?=\\()/)) {\n        state.soyState.push(\"record-literal\");\n        return \"keyword\";\n      } else if (stream.match(/([\\w]+)(?=\\()/)) {\n        return \"variable callee\";\n      } else if (match = stream.match(/^[\"']/)) {\n        state.soyState.push(\"string\");\n        state.quoteKind = match[0];\n        return \"string\";\n      } else if (stream.match(/^[(]/)) {\n        state.soyState.push(\"open-parentheses\");\n        return null;\n      } else if (stream.match(/(null|true|false)(?!\\w)/) || stream.match(/0x([0-9a-fA-F]{2,})/) || stream.match(/-?([0-9]*[.])?[0-9]+(e[0-9]*)?/)) {\n        return \"atom\";\n      } else if (stream.match(/(\\||[+\\-*\\/%]|[=!]=|\\?:|[<>]=?)/)) {\n        // Tokenize filter, binary, null propagator, and equality operators.\n        return \"operator\";\n      } else if (match = stream.match(/^\\$([\\w]+)/)) {\n        return ref(state.variables, match[1], !state.lookupVariables);\n      } else if (match = stream.match(/^\\w+/)) {\n        return /^(?:as|and|or|not|in|if)$/.test(match[0]) ? \"keyword\" : null;\n      }\n\n      stream.next();\n      return null;\n    }\n\n    return {\n      startState: function startState() {\n        return {\n          soyState: [],\n          variables: prepend(null, 'ij'),\n          scopes: null,\n          indent: 0,\n          quoteKind: null,\n          context: null,\n          lookupVariables: true,\n          // Is unknown variables considered an error\n          localStates: [{\n            mode: modes.html,\n            state: CodeMirror.startState(modes.html)\n          }]\n        };\n      },\n      copyState: function copyState(state) {\n        return {\n          tag: state.tag,\n          // Last seen Soy tag.\n          soyState: state.soyState.concat([]),\n          variables: state.variables,\n          context: state.context,\n          indent: state.indent,\n          // Indentation of the following line.\n          quoteKind: state.quoteKind,\n          lookupVariables: state.lookupVariables,\n          localStates: state.localStates.map(function (localState) {\n            return {\n              mode: localState.mode,\n              state: CodeMirror.copyState(localState.mode, localState.state)\n            };\n          })\n        };\n      },\n      token: function token(stream, state) {\n        var match;\n\n        switch (last(state.soyState)) {\n          case \"comment\":\n            if (stream.match(/^.*?\\*\\//)) {\n              state.soyState.pop();\n            } else {\n              stream.skipToEnd();\n            }\n\n            if (!state.context || !state.context.scope) {\n              var paramRe = /@param\\??\\s+(\\S+)/g;\n              var current = stream.current();\n\n              for (var match; match = paramRe.exec(current);) {\n                state.variables = prepend(state.variables, match[1]);\n              }\n            }\n\n            return \"comment\";\n\n          case \"string\":\n            var match = stream.match(/^.*?([\"']|\\\\[\\s\\S])/);\n\n            if (!match) {\n              stream.skipToEnd();\n            } else if (match[1] == state.quoteKind) {\n              state.quoteKind = null;\n              state.soyState.pop();\n            }\n\n            return \"string\";\n        }\n\n        if (!state.soyState.length || last(state.soyState) != \"literal\") {\n          if (stream.match(/^\\/\\*/)) {\n            state.soyState.push(\"comment\");\n            return \"comment\";\n          } else if (stream.match(stream.sol() ? /^\\s*\\/\\/.*/ : /^\\s+\\/\\/.*/)) {\n            return \"comment\";\n          }\n        }\n\n        switch (last(state.soyState)) {\n          case \"templ-def\":\n            if (match = stream.match(/^\\.?([\\w]+(?!\\.[\\w]+)*)/)) {\n              state.soyState.pop();\n              return \"def\";\n            }\n\n            stream.next();\n            return null;\n\n          case \"templ-ref\":\n            if (match = stream.match(/(\\.?[a-zA-Z_][a-zA-Z_0-9]+)+/)) {\n              state.soyState.pop(); // If the first character is '.', it can only be a local template.\n\n              if (match[0][0] == '.') {\n                return \"variable-2\";\n              } // Otherwise\n\n\n              return \"variable\";\n            }\n\n            if (match = stream.match(/^\\$([\\w]+)/)) {\n              state.soyState.pop();\n              return ref(state.variables, match[1], !state.lookupVariables);\n            }\n\n            stream.next();\n            return null;\n\n          case \"namespace-def\":\n            if (match = stream.match(/^\\.?([\\w\\.]+)/)) {\n              state.soyState.pop();\n              return \"variable\";\n            }\n\n            stream.next();\n            return null;\n\n          case \"param-def\":\n            if (match = stream.match(/^\\*/)) {\n              state.soyState.pop();\n              state.soyState.push(\"param-type\");\n              return \"type\";\n            }\n\n            if (match = stream.match(/^\\w+/)) {\n              state.variables = prepend(state.variables, match[0]);\n              state.soyState.pop();\n              state.soyState.push(\"param-type\");\n              return \"def\";\n            }\n\n            stream.next();\n            return null;\n\n          case \"param-ref\":\n            if (match = stream.match(/^\\w+/)) {\n              state.soyState.pop();\n              return \"property\";\n            }\n\n            stream.next();\n            return null;\n\n          case \"open-parentheses\":\n            if (stream.match(/[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n\n            return expression(stream, state);\n\n          case \"param-type\":\n            var peekChar = stream.peek();\n\n            if (\"}]=>,\".indexOf(peekChar) != -1) {\n              state.soyState.pop();\n              return null;\n            } else if (peekChar == \"[\") {\n              state.soyState.push('param-type-record');\n              return null;\n            } else if (peekChar == \"(\") {\n              state.soyState.push('param-type-template');\n              return null;\n            } else if (peekChar == \"<\") {\n              state.soyState.push('param-type-parameter');\n              return null;\n            } else if (match = stream.match(/^([\\w]+|[?])/)) {\n              return \"type\";\n            }\n\n            stream.next();\n            return null;\n\n          case \"param-type-record\":\n            var peekChar = stream.peek();\n\n            if (peekChar == \"]\") {\n              state.soyState.pop();\n              return null;\n            }\n\n            if (stream.match(/^\\w+/)) {\n              state.soyState.push('param-type');\n              return \"property\";\n            }\n\n            stream.next();\n            return null;\n\n          case \"param-type-parameter\":\n            if (stream.match(/^[>]/)) {\n              state.soyState.pop();\n              return null;\n            }\n\n            if (stream.match(/^[<,]/)) {\n              state.soyState.push('param-type');\n              return null;\n            }\n\n            stream.next();\n            return null;\n\n          case \"param-type-template\":\n            if (stream.match(/[>]/)) {\n              state.soyState.pop();\n              state.soyState.push('param-type');\n              return null;\n            }\n\n            if (stream.match(/^\\w+/)) {\n              state.soyState.push('param-type');\n              return \"def\";\n            }\n\n            stream.next();\n            return null;\n\n          case \"var-def\":\n            if (match = stream.match(/^\\$([\\w]+)/)) {\n              state.variables = prepend(state.variables, match[1]);\n              state.soyState.pop();\n              return \"def\";\n            }\n\n            stream.next();\n            return null;\n\n          case \"for-loop\":\n            if (stream.match(/\\bin\\b/)) {\n              state.soyState.pop();\n              return \"keyword\";\n            }\n\n            if (stream.peek() == \"$\") {\n              state.soyState.push('var-def');\n              return null;\n            }\n\n            stream.next();\n            return null;\n\n          case \"record-literal\":\n            if (stream.match(/^[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n\n            if (stream.match(/[(,]/)) {\n              state.soyState.push(\"map-value\");\n              state.soyState.push(\"record-key\");\n              return null;\n            }\n\n            stream.next();\n            return null;\n\n          case \"map-literal\":\n            if (stream.match(/^[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n\n            if (stream.match(/[(,]/)) {\n              state.soyState.push(\"map-value\");\n              state.soyState.push(\"map-value\");\n              return null;\n            }\n\n            stream.next();\n            return null;\n\n          case \"list-literal\":\n            if (stream.match(']')) {\n              state.soyState.pop();\n              state.lookupVariables = true;\n              popcontext(state);\n              return null;\n            }\n\n            if (stream.match(/\\bfor\\b/)) {\n              state.lookupVariables = true;\n              state.soyState.push('for-loop');\n              return \"keyword\";\n            }\n\n            return expression(stream, state);\n\n          case \"record-key\":\n            if (stream.match(/[\\w]+/)) {\n              return \"property\";\n            }\n\n            if (stream.match(/^[:]/)) {\n              state.soyState.pop();\n              return null;\n            }\n\n            stream.next();\n            return null;\n\n          case \"map-value\":\n            if (stream.peek() == \")\" || stream.peek() == \",\" || stream.match(/^[:)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n\n            return expression(stream, state);\n\n          case \"import\":\n            if (stream.eat(\";\")) {\n              state.soyState.pop();\n              state.indent -= 2 * config.indentUnit;\n              return null;\n            }\n\n            if (stream.match(/\\w+(?=\\s+as\\b)/)) {\n              return \"variable\";\n            }\n\n            if (match = stream.match(/\\w+/)) {\n              return /\\b(from|as)\\b/.test(match[0]) ? \"keyword\" : \"def\";\n            }\n\n            if (match = stream.match(/^[\"']/)) {\n              state.soyState.push(\"string\");\n              state.quoteKind = match[0];\n              return \"string\";\n            }\n\n            stream.next();\n            return null;\n\n          case \"tag\":\n            var endTag;\n            var tagName;\n\n            if (state.tag === undefined) {\n              endTag = true;\n              tagName = '';\n            } else {\n              endTag = state.tag[0] == \"/\";\n              tagName = endTag ? state.tag.substring(1) : state.tag;\n            }\n\n            var tag = tags[tagName];\n\n            if (stream.match(/^\\/?}/)) {\n              var selfClosed = stream.current() == \"/}\";\n\n              if (selfClosed && !endTag) {\n                popcontext(state);\n              }\n\n              if (state.tag == \"/template\" || state.tag == \"/deltemplate\") {\n                state.variables = prepend(null, 'ij');\n                state.indent = 0;\n              } else {\n                state.indent -= config.indentUnit * (selfClosed || indentingTags.indexOf(state.tag) == -1 ? 2 : 1);\n              }\n\n              state.soyState.pop();\n              return \"keyword\";\n            } else if (stream.match(/^([\\w?]+)(?==)/)) {\n              if (state.context && state.context.tag == tagName && stream.current() == \"kind\" && (match = stream.match(/^=\"([^\"]+)/, false))) {\n                var kind = match[1];\n                state.context.kind = kind;\n                var mode = modes[kind] || modes.html;\n                var localState = last(state.localStates);\n\n                if (localState.mode.indent) {\n                  state.indent += localState.mode.indent(localState.state, \"\", \"\");\n                }\n\n                state.localStates.push({\n                  mode: mode,\n                  state: CodeMirror.startState(mode)\n                });\n              }\n\n              return \"attribute\";\n            }\n\n            return expression(stream, state);\n\n          case \"template-call-expression\":\n            if (stream.match(/^([\\w-?]+)(?==)/)) {\n              return \"attribute\";\n            } else if (stream.eat('>')) {\n              state.soyState.pop();\n              return \"keyword\";\n            } else if (stream.eat('/>')) {\n              state.soyState.pop();\n              return \"keyword\";\n            }\n\n            return expression(stream, state);\n\n          case \"literal\":\n            if (stream.match('{/literal}', false)) {\n              state.soyState.pop();\n              return this.token(stream, state);\n            }\n\n            return tokenUntil(stream, state, /\\{\\/literal}/);\n\n          case \"export\":\n            if (match = stream.match(/\\w+/)) {\n              state.soyState.pop();\n\n              if (match == \"const\") {\n                state.soyState.push(\"const-def\");\n                return \"keyword\";\n              } else if (match == \"extern\") {\n                state.soyState.push(\"param-def\");\n                return \"keyword\";\n              }\n            } else {\n              stream.next();\n            }\n\n            return null;\n\n          case \"const-def\":\n            if (stream.match(/^\\w+/)) {\n              state.soyState.pop();\n              return \"def\";\n            }\n\n            stream.next();\n            return null;\n        }\n\n        if (stream.match('{literal}')) {\n          state.indent += config.indentUnit;\n          state.soyState.push(\"literal\");\n          state.context = new Context(state.context, \"literal\", state.variables);\n          return \"keyword\"; // A tag-keyword must be followed by whitespace, comment or a closing tag.\n        } else if (match = stream.match(/^\\{([/@\\\\]?\\w+\\??)(?=$|[\\s}]|\\/[/*])/)) {\n          var prevTag = state.tag;\n          state.tag = match[1];\n          var endTag = state.tag[0] == \"/\";\n          var indentingTag = !!tags[state.tag];\n          var tagName = endTag ? state.tag.substring(1) : state.tag;\n          var tag = tags[tagName];\n          if (state.tag != \"/switch\") state.indent += ((endTag || tag && tag.reduceIndent) && prevTag != \"switch\" ? 1 : 2) * config.indentUnit;\n          state.soyState.push(\"tag\");\n          var tagError = false;\n\n          if (tag) {\n            if (!endTag) {\n              if (tag.soyState) state.soyState.push(tag.soyState);\n            } // If a new tag, open a new context.\n\n\n            if (!tag.noEndTag && (indentingTag || !endTag)) {\n              state.context = new Context(state.context, state.tag, tag.variableScope ? state.variables : null); // Otherwise close the current context.\n            } else if (endTag) {\n              var isBalancedForExtern = tagName == 'extern' && state.context && state.context.tag == 'export';\n\n              if (!state.context || state.context.tag != tagName && !isBalancedForExtern) {\n                tagError = true;\n              } else if (state.context) {\n                if (state.context.kind) {\n                  state.localStates.pop();\n                  var localState = last(state.localStates);\n\n                  if (localState.mode.indent) {\n                    state.indent -= localState.mode.indent(localState.state, \"\", \"\");\n                  }\n                }\n\n                popcontext(state);\n              }\n            }\n          } else if (endTag) {\n            // Assume all tags with a closing tag are defined in the config.\n            tagError = true;\n          }\n\n          return (tagError ? \"error \" : \"\") + \"keyword\"; // Not a tag-keyword; it's an implicit print tag.\n        } else if (stream.eat('{')) {\n          state.tag = \"print\";\n          state.indent += 2 * config.indentUnit;\n          state.soyState.push(\"tag\");\n          return \"keyword\";\n        } else if (!state.context && stream.sol() && stream.match(/import\\b/)) {\n          state.soyState.push(\"import\");\n          state.indent += 2 * config.indentUnit;\n          return \"keyword\";\n        } else if (match = stream.match('<{')) {\n          state.soyState.push(\"template-call-expression\");\n          state.indent += 2 * config.indentUnit;\n          state.soyState.push(\"tag\");\n          return \"keyword\";\n        } else if (match = stream.match('</>')) {\n          state.indent -= 1 * config.indentUnit;\n          return \"keyword\";\n        }\n\n        return tokenUntil(stream, state, /\\{|\\s+\\/\\/|\\/\\*/);\n      },\n      indent: function indent(state, textAfter, line) {\n        var indent = state.indent,\n            top = last(state.soyState);\n        if (top == \"comment\") return CodeMirror.Pass;\n\n        if (top == \"literal\") {\n          if (/^\\{\\/literal}/.test(textAfter)) indent -= config.indentUnit;\n        } else {\n          if (/^\\s*\\{\\/(template|deltemplate)\\b/.test(textAfter)) return 0;\n          if (/^\\{(\\/|(fallbackmsg|elseif|else|ifempty)\\b)/.test(textAfter)) indent -= config.indentUnit;\n          if (state.tag != \"switch\" && /^\\{(case|default)\\b/.test(textAfter)) indent -= config.indentUnit;\n          if (/^\\{\\/switch\\b/.test(textAfter)) indent -= config.indentUnit;\n        }\n\n        var localState = last(state.localStates);\n\n        if (indent && localState.mode.indent) {\n          indent += localState.mode.indent(localState.state, textAfter, line);\n        }\n\n        return indent;\n      },\n      innerMode: function innerMode(state) {\n        if (state.soyState.length && last(state.soyState) != \"literal\") return null;else return last(state.localStates);\n      },\n      electricInput: /^\\s*\\{(\\/|\\/template|\\/deltemplate|\\/switch|fallbackmsg|elseif|else|case|default|ifempty|\\/literal\\})$/,\n      lineComment: \"//\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      blockCommentContinue: \" * \",\n      useInnerComments: false,\n      fold: \"indent\"\n    };\n  }, \"htmlmixed\");\n  CodeMirror.registerHelper(\"wordChars\", \"soy\", /[\\w$]/);\n  CodeMirror.registerHelper(\"hintWords\", \"soy\", Object.keys(tags).concat([\"css\", \"debugger\"]));\n  CodeMirror.defineMIME(\"text/x-soy\", \"soy\");\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","paramData","noEndTag","soyState","tags","variableScope","reduceIndent","indentingTags","Object","keys","filter","tag","defineMode","config","textMode","getMode","modes","html","name","multilineTagIndentFactor","multilineTagIndentPastTag","allowMissingTagName","attributes","text","uri","trusted_resource_uri","css","js","statementIndent","indentUnit","last","array","length","tokenUntil","stream","state","untilRegExp","sol","indent","eat","oldString","string","match","exec","substr","pos","index","result","hideFirstChars","localState","localStates","mode","token","contains","list","element","next","prepend","popcontext","context","scope","variables","previousContext","ref","loose","Context","kind","expression","push","lookupVariables","quoteKind","test","startState","scopes","copyState","concat","map","pop","skipToEnd","paramRe","current","peekChar","peek","indexOf","endTag","tagName","undefined","substring","selfClosed","prevTag","indentingTag","tagError","isBalancedForExtern","textAfter","line","top","Pass","innerMode","electricInput","lineComment","blockCommentStart","blockCommentEnd","blockCommentContinue","useInnerComments","fold","registerHelper","defineMIME"],"sources":["/mnt/Datengrab/python/Zero-tier/frontend/node_modules/codemirror/mode/soy/soy.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var paramData = { noEndTag: true, soyState: \"param-def\" };\n  var tags = {\n    \"alias\": { noEndTag: true },\n    \"delpackage\": { noEndTag: true },\n    \"namespace\": { noEndTag: true, soyState: \"namespace-def\" },\n    \"@attribute\": paramData,\n    \"@attribute?\": paramData,\n    \"@param\": paramData,\n    \"@param?\": paramData,\n    \"@inject\": paramData,\n    \"@inject?\": paramData,\n    \"@state\": paramData,\n    \"template\": { soyState: \"templ-def\", variableScope: true},\n    \"extern\": {soyState: \"param-def\"},\n    \"export\": {soyState: \"export\"},\n    \"literal\": { },\n    \"msg\": {},\n    \"fallbackmsg\": { noEndTag: true, reduceIndent: true},\n    \"select\": {},\n    \"plural\": {},\n    \"let\": { soyState: \"var-def\" },\n    \"if\": {},\n    \"javaimpl\": {},\n    \"jsimpl\": {},\n    \"elseif\": { noEndTag: true, reduceIndent: true},\n    \"else\": { noEndTag: true, reduceIndent: true},\n    \"switch\": {},\n    \"case\": { noEndTag: true, reduceIndent: true},\n    \"default\": { noEndTag: true, reduceIndent: true},\n    \"foreach\": { variableScope: true, soyState: \"for-loop\" },\n    \"ifempty\": { noEndTag: true, reduceIndent: true},\n    \"for\": { variableScope: true, soyState: \"for-loop\" },\n    \"call\": { soyState: \"templ-ref\" },\n    \"param\": { soyState: \"param-ref\"},\n    \"print\": { noEndTag: true },\n    \"deltemplate\": { soyState: \"templ-def\", variableScope: true},\n    \"delcall\": { soyState: \"templ-ref\" },\n    \"log\": {},\n    \"element\": { variableScope: true },\n    \"velog\": {},\n    \"const\": { soyState: \"const-def\"},\n  };\n\n  var indentingTags = Object.keys(tags).filter(function(tag) {\n    return !tags[tag].noEndTag || tags[tag].reduceIndent;\n  });\n\n  CodeMirror.defineMode(\"soy\", function(config) {\n    var textMode = CodeMirror.getMode(config, \"text/plain\");\n    var modes = {\n      html: CodeMirror.getMode(config, {name: \"text/html\", multilineTagIndentFactor: 2, multilineTagIndentPastTag: false, allowMissingTagName: true}),\n      attributes: textMode,\n      text: textMode,\n      uri: textMode,\n      trusted_resource_uri: textMode,\n      css: CodeMirror.getMode(config, \"text/css\"),\n      js: CodeMirror.getMode(config, {name: \"text/javascript\", statementIndent: 2 * config.indentUnit})\n    };\n\n    function last(array) {\n      return array[array.length - 1];\n    }\n\n    function tokenUntil(stream, state, untilRegExp) {\n      if (stream.sol()) {\n        for (var indent = 0; indent < state.indent; indent++) {\n          if (!stream.eat(/\\s/)) break;\n        }\n        if (indent) return null;\n      }\n      var oldString = stream.string;\n      var match = untilRegExp.exec(oldString.substr(stream.pos));\n      if (match) {\n        // We don't use backUp because it backs up just the position, not the state.\n        // This uses an undocumented API.\n        stream.string = oldString.substr(0, stream.pos + match.index);\n      }\n      var result = stream.hideFirstChars(state.indent, function() {\n        var localState = last(state.localStates);\n        return localState.mode.token(stream, localState.state);\n      });\n      stream.string = oldString;\n      return result;\n    }\n\n    function contains(list, element) {\n      while (list) {\n        if (list.element === element) return true;\n        list = list.next;\n      }\n      return false;\n    }\n\n    function prepend(list, element) {\n      return {\n        element: element,\n        next: list\n      };\n    }\n\n    function popcontext(state) {\n      if (!state.context) return;\n      if (state.context.scope) {\n        state.variables = state.context.scope;\n      }\n      state.context = state.context.previousContext;\n    }\n\n    // Reference a variable `name` in `list`.\n    // Let `loose` be truthy to ignore missing identifiers.\n    function ref(list, name, loose) {\n      return contains(list, name) ? \"variable-2\" : (loose ? \"variable\" : \"variable-2 error\");\n    }\n\n    // Data for an open soy tag.\n    function Context(previousContext, tag, scope) {\n      this.previousContext = previousContext;\n      this.tag = tag;\n      this.kind = null;\n      this.scope = scope;\n    }\n\n    function expression(stream, state) {\n      var match;\n      if (stream.match(/[[]/)) {\n        state.soyState.push(\"list-literal\");\n        state.context = new Context(state.context, \"list-literal\", state.variables);\n        state.lookupVariables = false;\n        return null;\n      } else if (stream.match(/\\bmap(?=\\()/)) {\n        state.soyState.push(\"map-literal\");\n        return \"keyword\";\n      } else if (stream.match(/\\brecord(?=\\()/)) {\n        state.soyState.push(\"record-literal\");\n        return \"keyword\";\n      } else if (stream.match(/([\\w]+)(?=\\()/)) {\n        return \"variable callee\";\n      } else if (match = stream.match(/^[\"']/)) {\n        state.soyState.push(\"string\");\n        state.quoteKind = match[0];\n        return \"string\";\n      } else if (stream.match(/^[(]/)) {\n        state.soyState.push(\"open-parentheses\");\n        return null;\n      } else if (stream.match(/(null|true|false)(?!\\w)/) ||\n          stream.match(/0x([0-9a-fA-F]{2,})/) ||\n          stream.match(/-?([0-9]*[.])?[0-9]+(e[0-9]*)?/)) {\n        return \"atom\";\n      } else if (stream.match(/(\\||[+\\-*\\/%]|[=!]=|\\?:|[<>]=?)/)) {\n        // Tokenize filter, binary, null propagator, and equality operators.\n        return \"operator\";\n      } else if (match = stream.match(/^\\$([\\w]+)/)) {\n        return ref(state.variables, match[1], !state.lookupVariables);\n      } else if (match = stream.match(/^\\w+/)) {\n        return /^(?:as|and|or|not|in|if)$/.test(match[0]) ? \"keyword\" : null;\n      }\n\n      stream.next();\n      return null;\n    }\n\n    return {\n      startState: function() {\n        return {\n          soyState: [],\n          variables: prepend(null, 'ij'),\n          scopes: null,\n          indent: 0,\n          quoteKind: null,\n          context: null,\n          lookupVariables: true, // Is unknown variables considered an error\n          localStates: [{\n            mode: modes.html,\n            state: CodeMirror.startState(modes.html)\n          }]\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          tag: state.tag, // Last seen Soy tag.\n          soyState: state.soyState.concat([]),\n          variables: state.variables,\n          context: state.context,\n          indent: state.indent, // Indentation of the following line.\n          quoteKind: state.quoteKind,\n          lookupVariables: state.lookupVariables,\n          localStates: state.localStates.map(function(localState) {\n            return {\n              mode: localState.mode,\n              state: CodeMirror.copyState(localState.mode, localState.state)\n            };\n          })\n        };\n      },\n\n      token: function(stream, state) {\n        var match;\n\n        switch (last(state.soyState)) {\n          case \"comment\":\n            if (stream.match(/^.*?\\*\\//)) {\n              state.soyState.pop();\n            } else {\n              stream.skipToEnd();\n            }\n            if (!state.context || !state.context.scope) {\n              var paramRe = /@param\\??\\s+(\\S+)/g;\n              var current = stream.current();\n              for (var match; (match = paramRe.exec(current)); ) {\n                state.variables = prepend(state.variables, match[1]);\n              }\n            }\n            return \"comment\";\n\n          case \"string\":\n            var match = stream.match(/^.*?([\"']|\\\\[\\s\\S])/);\n            if (!match) {\n              stream.skipToEnd();\n            } else if (match[1] == state.quoteKind) {\n              state.quoteKind = null;\n              state.soyState.pop();\n            }\n            return \"string\";\n        }\n\n        if (!state.soyState.length || last(state.soyState) != \"literal\") {\n          if (stream.match(/^\\/\\*/)) {\n            state.soyState.push(\"comment\");\n            return \"comment\";\n          } else if (stream.match(stream.sol() ? /^\\s*\\/\\/.*/ : /^\\s+\\/\\/.*/)) {\n            return \"comment\";\n          }\n        }\n\n        switch (last(state.soyState)) {\n          case \"templ-def\":\n            if (match = stream.match(/^\\.?([\\w]+(?!\\.[\\w]+)*)/)) {\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"templ-ref\":\n            if (match = stream.match(/(\\.?[a-zA-Z_][a-zA-Z_0-9]+)+/)) {\n              state.soyState.pop();\n              // If the first character is '.', it can only be a local template.\n              if (match[0][0] == '.') {\n                return \"variable-2\"\n              }\n              // Otherwise\n              return \"variable\";\n            }\n            if (match = stream.match(/^\\$([\\w]+)/)) {\n              state.soyState.pop();\n              return ref(state.variables, match[1], !state.lookupVariables);\n            }\n\n            stream.next();\n            return null;\n\n          case \"namespace-def\":\n            if (match = stream.match(/^\\.?([\\w\\.]+)/)) {\n              state.soyState.pop();\n              return \"variable\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-def\":\n            if (match = stream.match(/^\\*/)) {\n              state.soyState.pop();\n              state.soyState.push(\"param-type\");\n              return \"type\";\n            }\n            if (match = stream.match(/^\\w+/)) {\n              state.variables = prepend(state.variables, match[0]);\n              state.soyState.pop();\n              state.soyState.push(\"param-type\");\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-ref\":\n            if (match = stream.match(/^\\w+/)) {\n              state.soyState.pop();\n              return \"property\";\n            }\n            stream.next();\n            return null;\n\n          case \"open-parentheses\":\n            if (stream.match(/[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            return expression(stream, state);\n\n          case \"param-type\":\n            var peekChar = stream.peek();\n            if (\"}]=>,\".indexOf(peekChar) != -1) {\n              state.soyState.pop();\n              return null;\n            } else if (peekChar == \"[\") {\n              state.soyState.push('param-type-record');\n              return null;\n            } else if (peekChar == \"(\") {\n              state.soyState.push('param-type-template');\n              return null;\n            } else if (peekChar == \"<\") {\n              state.soyState.push('param-type-parameter');\n              return null;\n            } else if (match = stream.match(/^([\\w]+|[?])/)) {\n              return \"type\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-type-record\":\n            var peekChar = stream.peek();\n            if (peekChar == \"]\") {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/^\\w+/)) {\n              state.soyState.push('param-type');\n              return \"property\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-type-parameter\":\n            if (stream.match(/^[>]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/^[<,]/)) {\n              state.soyState.push('param-type');\n              return null;\n            }\n            stream.next();\n            return null;\n\n          case \"param-type-template\":\n            if (stream.match(/[>]/)) {\n              state.soyState.pop();\n              state.soyState.push('param-type');\n              return null;\n            }\n            if (stream.match(/^\\w+/)) {\n              state.soyState.push('param-type');\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"var-def\":\n            if (match = stream.match(/^\\$([\\w]+)/)) {\n              state.variables = prepend(state.variables, match[1]);\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"for-loop\":\n            if (stream.match(/\\bin\\b/)) {\n              state.soyState.pop();\n              return \"keyword\";\n            }\n            if (stream.peek() == \"$\") {\n              state.soyState.push('var-def');\n              return null;\n            }\n            stream.next();\n            return null;\n\n          case \"record-literal\":\n            if (stream.match(/^[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/[(,]/)) {\n              state.soyState.push(\"map-value\")\n              state.soyState.push(\"record-key\")\n              return null;\n            }\n            stream.next()\n            return null;\n\n          case \"map-literal\":\n            if (stream.match(/^[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/[(,]/)) {\n              state.soyState.push(\"map-value\")\n              state.soyState.push(\"map-value\")\n              return null;\n            }\n            stream.next()\n            return null;\n\n          case \"list-literal\":\n            if (stream.match(']')) {\n              state.soyState.pop();\n              state.lookupVariables = true;\n              popcontext(state);\n              return null;\n            }\n            if (stream.match(/\\bfor\\b/)) {\n              state.lookupVariables = true;\n              state.soyState.push('for-loop');\n              return \"keyword\";\n            }\n            return expression(stream, state);\n\n          case \"record-key\":\n            if (stream.match(/[\\w]+/)) {\n              return \"property\";\n            }\n            if (stream.match(/^[:]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            stream.next();\n            return null;\n\n          case \"map-value\":\n            if (stream.peek() == \")\" || stream.peek() == \",\" || stream.match(/^[:)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            return expression(stream, state);\n\n          case \"import\":\n            if (stream.eat(\";\")) {\n              state.soyState.pop();\n              state.indent -= 2 * config.indentUnit;\n              return null;\n            }\n            if (stream.match(/\\w+(?=\\s+as\\b)/)) {\n              return \"variable\";\n            }\n            if (match = stream.match(/\\w+/)) {\n              return /\\b(from|as)\\b/.test(match[0]) ? \"keyword\" : \"def\";\n            }\n            if (match = stream.match(/^[\"']/)) {\n              state.soyState.push(\"string\");\n              state.quoteKind = match[0];\n              return \"string\";\n            }\n            stream.next();\n            return null;\n\n          case \"tag\":\n            var endTag;\n            var tagName;\n            if (state.tag === undefined) {\n              endTag = true;\n              tagName = '';\n            } else {\n              endTag = state.tag[0] == \"/\";\n              tagName = endTag ? state.tag.substring(1) : state.tag;\n            }\n            var tag = tags[tagName];\n            if (stream.match(/^\\/?}/)) {\n              var selfClosed = stream.current() == \"/}\";\n              if (selfClosed && !endTag) {\n                popcontext(state);\n              }\n              if (state.tag == \"/template\" || state.tag == \"/deltemplate\") {\n                state.variables = prepend(null, 'ij');\n                state.indent = 0;\n              } else {\n                state.indent -= config.indentUnit *\n                    (selfClosed || indentingTags.indexOf(state.tag) == -1 ? 2 : 1);\n              }\n              state.soyState.pop();\n              return \"keyword\";\n            } else if (stream.match(/^([\\w?]+)(?==)/)) {\n              if (state.context && state.context.tag == tagName && stream.current() == \"kind\" && (match = stream.match(/^=\"([^\"]+)/, false))) {\n                var kind = match[1];\n                state.context.kind = kind;\n                var mode = modes[kind] || modes.html;\n                var localState = last(state.localStates);\n                if (localState.mode.indent) {\n                  state.indent += localState.mode.indent(localState.state, \"\", \"\");\n                }\n                state.localStates.push({\n                  mode: mode,\n                  state: CodeMirror.startState(mode)\n                });\n              }\n              return \"attribute\";\n            }\n            return expression(stream, state);\n\n          case \"template-call-expression\":\n            if (stream.match(/^([\\w-?]+)(?==)/)) {\n              return \"attribute\";\n            } else if (stream.eat('>')) {\n              state.soyState.pop();\n              return \"keyword\";\n            } else if (stream.eat('/>')) {\n              state.soyState.pop();\n              return \"keyword\";\n            }\n            return expression(stream, state);\n          case \"literal\":\n            if (stream.match('{/literal}', false)) {\n              state.soyState.pop();\n              return this.token(stream, state);\n            }\n            return tokenUntil(stream, state, /\\{\\/literal}/);\n          case \"export\":\n            if (match = stream.match(/\\w+/)) {\n              state.soyState.pop();\n              if (match == \"const\") {\n                state.soyState.push(\"const-def\")\n                return \"keyword\";\n              } else if (match == \"extern\") {\n                state.soyState.push(\"param-def\")\n                return \"keyword\";\n              }\n            } else {\n              stream.next();\n            }\n            return null;\n          case \"const-def\":\n            if (stream.match(/^\\w+/)) {\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n        }\n\n        if (stream.match('{literal}')) {\n          state.indent += config.indentUnit;\n          state.soyState.push(\"literal\");\n          state.context = new Context(state.context, \"literal\", state.variables);\n          return \"keyword\";\n\n        // A tag-keyword must be followed by whitespace, comment or a closing tag.\n        } else if (match = stream.match(/^\\{([/@\\\\]?\\w+\\??)(?=$|[\\s}]|\\/[/*])/)) {\n          var prevTag = state.tag;\n          state.tag = match[1];\n          var endTag = state.tag[0] == \"/\";\n          var indentingTag = !!tags[state.tag];\n          var tagName = endTag ? state.tag.substring(1) : state.tag;\n          var tag = tags[tagName];\n          if (state.tag != \"/switch\")\n            state.indent += ((endTag || tag && tag.reduceIndent) && prevTag != \"switch\" ? 1 : 2) * config.indentUnit;\n\n          state.soyState.push(\"tag\");\n          var tagError = false;\n          if (tag) {\n            if (!endTag) {\n              if (tag.soyState) state.soyState.push(tag.soyState);\n            }\n            // If a new tag, open a new context.\n            if (!tag.noEndTag && (indentingTag || !endTag)) {\n              state.context = new Context(state.context, state.tag, tag.variableScope ? state.variables : null);\n            // Otherwise close the current context.\n            } else if (endTag) {\n              var isBalancedForExtern = tagName == 'extern' && (state.context && state.context.tag == 'export');\n              if (!state.context || ((state.context.tag != tagName) && !isBalancedForExtern)) {\n                tagError = true;\n              } else if (state.context) {\n                if (state.context.kind) {\n                  state.localStates.pop();\n                  var localState = last(state.localStates);\n                  if (localState.mode.indent) {\n                    state.indent -= localState.mode.indent(localState.state, \"\", \"\");\n                  }\n                }\n                popcontext(state);\n              }\n            }\n          } else if (endTag) {\n            // Assume all tags with a closing tag are defined in the config.\n            tagError = true;\n          }\n          return (tagError ? \"error \" : \"\") + \"keyword\";\n\n        // Not a tag-keyword; it's an implicit print tag.\n        } else if (stream.eat('{')) {\n          state.tag = \"print\";\n          state.indent += 2 * config.indentUnit;\n          state.soyState.push(\"tag\");\n          return \"keyword\";\n        } else if (!state.context && stream.sol() && stream.match(/import\\b/)) {\n          state.soyState.push(\"import\");\n          state.indent += 2 * config.indentUnit;\n          return \"keyword\";\n        } else if (match = stream.match('<{')) {\n          state.soyState.push(\"template-call-expression\");\n          state.indent += 2 * config.indentUnit;\n          state.soyState.push(\"tag\");\n          return \"keyword\";\n        } else if (match = stream.match('</>')) {\n          state.indent -= 1 * config.indentUnit;\n          return \"keyword\";\n        }\n\n        return tokenUntil(stream, state, /\\{|\\s+\\/\\/|\\/\\*/);\n      },\n\n      indent: function(state, textAfter, line) {\n        var indent = state.indent, top = last(state.soyState);\n        if (top == \"comment\") return CodeMirror.Pass;\n\n        if (top == \"literal\") {\n          if (/^\\{\\/literal}/.test(textAfter)) indent -= config.indentUnit;\n        } else {\n          if (/^\\s*\\{\\/(template|deltemplate)\\b/.test(textAfter)) return 0;\n          if (/^\\{(\\/|(fallbackmsg|elseif|else|ifempty)\\b)/.test(textAfter)) indent -= config.indentUnit;\n          if (state.tag != \"switch\" && /^\\{(case|default)\\b/.test(textAfter)) indent -= config.indentUnit;\n          if (/^\\{\\/switch\\b/.test(textAfter)) indent -= config.indentUnit;\n        }\n        var localState = last(state.localStates);\n        if (indent && localState.mode.indent) {\n          indent += localState.mode.indent(localState.state, textAfter, line);\n        }\n        return indent;\n      },\n\n      innerMode: function(state) {\n        if (state.soyState.length && last(state.soyState) != \"literal\") return null;\n        else return last(state.localStates);\n      },\n\n      electricInput: /^\\s*\\{(\\/|\\/template|\\/deltemplate|\\/switch|fallbackmsg|elseif|else|case|default|ifempty|\\/literal\\})$/,\n      lineComment: \"//\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      blockCommentContinue: \" * \",\n      useInnerComments: false,\n      fold: \"indent\"\n    };\n  }, \"htmlmixed\");\n\n  CodeMirror.registerHelper(\"wordChars\", \"soy\", /[\\w$]/);\n\n  CodeMirror.registerHelper(\"hintWords\", \"soy\", Object.keys(tags).concat(\n      [\"css\", \"debugger\"]));\n\n  CodeMirror.defineMIME(\"text/x-soy\", \"soy\");\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}