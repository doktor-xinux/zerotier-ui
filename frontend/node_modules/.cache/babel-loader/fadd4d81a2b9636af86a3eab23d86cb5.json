{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode('tiki', function (config) {\n    function inBlock(style, terminator, returnTokenizer) {\n      return function (stream, state) {\n        while (!stream.eol()) {\n          if (stream.match(terminator)) {\n            state.tokenize = inText;\n            break;\n          }\n\n          stream.next();\n        }\n\n        if (returnTokenizer) state.tokenize = returnTokenizer;\n        return style;\n      };\n    }\n\n    function inLine(style) {\n      return function (stream, state) {\n        while (!stream.eol()) {\n          stream.next();\n        }\n\n        state.tokenize = inText;\n        return style;\n      };\n    }\n\n    function inText(stream, state) {\n      function chain(parser) {\n        state.tokenize = parser;\n        return parser(stream, state);\n      }\n\n      var sol = stream.sol();\n      var ch = stream.next(); //non start of line\n\n      switch (ch) {\n        //switch is generally much faster than if, so it is used here\n        case \"{\":\n          //plugin\n          stream.eat(\"/\");\n          stream.eatSpace();\n          stream.eatWhile(/[^\\s\\u00a0=\\\"\\'\\/?(}]/);\n          state.tokenize = inPlugin;\n          return \"tag\";\n\n        case \"_\":\n          //bold\n          if (stream.eat(\"_\")) return chain(inBlock(\"strong\", \"__\", inText));\n          break;\n\n        case \"'\":\n          //italics\n          if (stream.eat(\"'\")) return chain(inBlock(\"em\", \"''\", inText));\n          break;\n\n        case \"(\":\n          // Wiki Link\n          if (stream.eat(\"(\")) return chain(inBlock(\"variable-2\", \"))\", inText));\n          break;\n\n        case \"[\":\n          // Weblink\n          return chain(inBlock(\"variable-3\", \"]\", inText));\n          break;\n\n        case \"|\":\n          //table\n          if (stream.eat(\"|\")) return chain(inBlock(\"comment\", \"||\"));\n          break;\n\n        case \"-\":\n          if (stream.eat(\"=\")) {\n            //titleBar\n            return chain(inBlock(\"header string\", \"=-\", inText));\n          } else if (stream.eat(\"-\")) {\n            //deleted\n            return chain(inBlock(\"error tw-deleted\", \"--\", inText));\n          }\n\n          break;\n\n        case \"=\":\n          //underline\n          if (stream.match(\"==\")) return chain(inBlock(\"tw-underline\", \"===\", inText));\n          break;\n\n        case \":\":\n          if (stream.eat(\":\")) return chain(inBlock(\"comment\", \"::\"));\n          break;\n\n        case \"^\":\n          //box\n          return chain(inBlock(\"tw-box\", \"^\"));\n          break;\n\n        case \"~\":\n          //np\n          if (stream.match(\"np~\")) return chain(inBlock(\"meta\", \"~/np~\"));\n          break;\n      } //start of line types\n\n\n      if (sol) {\n        switch (ch) {\n          case \"!\":\n            //header at start of line\n            if (stream.match('!!!!!')) {\n              return chain(inLine(\"header string\"));\n            } else if (stream.match('!!!!')) {\n              return chain(inLine(\"header string\"));\n            } else if (stream.match('!!!')) {\n              return chain(inLine(\"header string\"));\n            } else if (stream.match('!!')) {\n              return chain(inLine(\"header string\"));\n            } else {\n              return chain(inLine(\"header string\"));\n            }\n\n            break;\n\n          case \"*\": //unordered list line item, or <li /> at start of line\n\n          case \"#\": //ordered list line item, or <li /> at start of line\n\n          case \"+\":\n            //ordered list line item, or <li /> at start of line\n            return chain(inLine(\"tw-listitem bracket\"));\n            break;\n        }\n      } //stream.eatWhile(/[&{]/); was eating up plugins, turned off to act less like html and more like tiki\n\n\n      return null;\n    }\n\n    var indentUnit = config.indentUnit; // Return variables for tokenizers\n\n    var pluginName, type;\n\n    function inPlugin(stream, state) {\n      var ch = stream.next();\n      var peek = stream.peek();\n\n      if (ch == \"}\") {\n        state.tokenize = inText; //type = ch == \")\" ? \"endPlugin\" : \"selfclosePlugin\"; inPlugin\n\n        return \"tag\";\n      } else if (ch == \"(\" || ch == \")\") {\n        return \"bracket\";\n      } else if (ch == \"=\") {\n        type = \"equals\";\n\n        if (peek == \">\") {\n          stream.next();\n          peek = stream.peek();\n        } //here we detect values directly after equal character with no quotes\n\n\n        if (!/[\\'\\\"]/.test(peek)) {\n          state.tokenize = inAttributeNoQuote();\n        } //end detect values\n\n\n        return \"operator\";\n      } else if (/[\\'\\\"]/.test(ch)) {\n        state.tokenize = inAttribute(ch);\n        return state.tokenize(stream, state);\n      } else {\n        stream.eatWhile(/[^\\s\\u00a0=\\\"\\'\\/?]/);\n        return \"keyword\";\n      }\n    }\n\n    function inAttribute(quote) {\n      return function (stream, state) {\n        while (!stream.eol()) {\n          if (stream.next() == quote) {\n            state.tokenize = inPlugin;\n            break;\n          }\n        }\n\n        return \"string\";\n      };\n    }\n\n    function inAttributeNoQuote() {\n      return function (stream, state) {\n        while (!stream.eol()) {\n          var ch = stream.next();\n          var peek = stream.peek();\n\n          if (ch == \" \" || ch == \",\" || /[ )}]/.test(peek)) {\n            state.tokenize = inPlugin;\n            break;\n          }\n        }\n\n        return \"string\";\n      };\n    }\n\n    var curState, setStyle;\n\n    function pass() {\n      for (var i = arguments.length - 1; i >= 0; i--) {\n        curState.cc.push(arguments[i]);\n      }\n    }\n\n    function cont() {\n      pass.apply(null, arguments);\n      return true;\n    }\n\n    function pushContext(pluginName, startOfLine) {\n      var noIndent = curState.context && curState.context.noIndent;\n      curState.context = {\n        prev: curState.context,\n        pluginName: pluginName,\n        indent: curState.indented,\n        startOfLine: startOfLine,\n        noIndent: noIndent\n      };\n    }\n\n    function popContext() {\n      if (curState.context) curState.context = curState.context.prev;\n    }\n\n    function element(type) {\n      if (type == \"openPlugin\") {\n        curState.pluginName = pluginName;\n        return cont(attributes, endplugin(curState.startOfLine));\n      } else if (type == \"closePlugin\") {\n        var err = false;\n\n        if (curState.context) {\n          err = curState.context.pluginName != pluginName;\n          popContext();\n        } else {\n          err = true;\n        }\n\n        if (err) setStyle = \"error\";\n        return cont(endcloseplugin(err));\n      } else if (type == \"string\") {\n        if (!curState.context || curState.context.name != \"!cdata\") pushContext(\"!cdata\");\n        if (curState.tokenize == inText) popContext();\n        return cont();\n      } else return cont();\n    }\n\n    function endplugin(startOfLine) {\n      return function (type) {\n        if (type == \"selfclosePlugin\" || type == \"endPlugin\") return cont();\n\n        if (type == \"endPlugin\") {\n          pushContext(curState.pluginName, startOfLine);\n          return cont();\n        }\n\n        return cont();\n      };\n    }\n\n    function endcloseplugin(err) {\n      return function (type) {\n        if (err) setStyle = \"error\";\n        if (type == \"endPlugin\") return cont();\n        return pass();\n      };\n    }\n\n    function attributes(type) {\n      if (type == \"keyword\") {\n        setStyle = \"attribute\";\n        return cont(attributes);\n      }\n\n      if (type == \"equals\") return cont(attvalue, attributes);\n      return pass();\n    }\n\n    function attvalue(type) {\n      if (type == \"keyword\") {\n        setStyle = \"string\";\n        return cont();\n      }\n\n      if (type == \"string\") return cont(attvaluemaybe);\n      return pass();\n    }\n\n    function attvaluemaybe(type) {\n      if (type == \"string\") return cont(attvaluemaybe);else return pass();\n    }\n\n    return {\n      startState: function startState() {\n        return {\n          tokenize: inText,\n          cc: [],\n          indented: 0,\n          startOfLine: true,\n          pluginName: null,\n          context: null\n        };\n      },\n      token: function token(stream, state) {\n        if (stream.sol()) {\n          state.startOfLine = true;\n          state.indented = stream.indentation();\n        }\n\n        if (stream.eatSpace()) return null;\n        setStyle = type = pluginName = null;\n        var style = state.tokenize(stream, state);\n\n        if ((style || type) && style != \"comment\") {\n          curState = state;\n\n          while (true) {\n            var comb = state.cc.pop() || element;\n            if (comb(type || style)) break;\n          }\n        }\n\n        state.startOfLine = false;\n        return setStyle || style;\n      },\n      indent: function indent(state, textAfter) {\n        var context = state.context;\n        if (context && context.noIndent) return 0;\n        if (context && /^{\\//.test(textAfter)) context = context.prev;\n\n        while (context && !context.startOfLine) {\n          context = context.prev;\n        }\n\n        if (context) return context.indent + indentUnit;else return 0;\n      },\n      electricChars: \"/\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/tiki\", \"tiki\");\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","inBlock","style","terminator","returnTokenizer","stream","state","eol","match","tokenize","inText","next","inLine","chain","parser","sol","ch","eat","eatSpace","eatWhile","inPlugin","indentUnit","pluginName","type","peek","test","inAttributeNoQuote","inAttribute","quote","curState","setStyle","pass","i","arguments","length","cc","push","cont","apply","pushContext","startOfLine","noIndent","context","prev","indent","indented","popContext","element","attributes","endplugin","err","endcloseplugin","name","attvalue","attvaluemaybe","startState","token","indentation","comb","pop","textAfter","electricChars","defineMIME"],"sources":["/mnt/Datengrab/python/Zero-tier/frontend/node_modules/codemirror/mode/tiki/tiki.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode('tiki', function(config) {\n  function inBlock(style, terminator, returnTokenizer) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n\n      if (returnTokenizer) state.tokenize = returnTokenizer;\n\n      return style;\n    };\n  }\n\n  function inLine(style) {\n    return function(stream, state) {\n      while(!stream.eol()) {\n        stream.next();\n      }\n      state.tokenize = inText;\n      return style;\n    };\n  }\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var sol = stream.sol();\n    var ch = stream.next();\n\n    //non start of line\n    switch (ch) { //switch is generally much faster than if, so it is used here\n    case \"{\": //plugin\n      stream.eat(\"/\");\n      stream.eatSpace();\n      stream.eatWhile(/[^\\s\\u00a0=\\\"\\'\\/?(}]/);\n      state.tokenize = inPlugin;\n      return \"tag\";\n    case \"_\": //bold\n      if (stream.eat(\"_\"))\n        return chain(inBlock(\"strong\", \"__\", inText));\n      break;\n    case \"'\": //italics\n      if (stream.eat(\"'\"))\n        return chain(inBlock(\"em\", \"''\", inText));\n      break;\n    case \"(\":// Wiki Link\n      if (stream.eat(\"(\"))\n        return chain(inBlock(\"variable-2\", \"))\", inText));\n      break;\n    case \"[\":// Weblink\n      return chain(inBlock(\"variable-3\", \"]\", inText));\n      break;\n    case \"|\": //table\n      if (stream.eat(\"|\"))\n        return chain(inBlock(\"comment\", \"||\"));\n      break;\n    case \"-\":\n      if (stream.eat(\"=\")) {//titleBar\n        return chain(inBlock(\"header string\", \"=-\", inText));\n      } else if (stream.eat(\"-\")) {//deleted\n        return chain(inBlock(\"error tw-deleted\", \"--\", inText));\n      }\n      break;\n    case \"=\": //underline\n      if (stream.match(\"==\"))\n        return chain(inBlock(\"tw-underline\", \"===\", inText));\n      break;\n    case \":\":\n      if (stream.eat(\":\"))\n        return chain(inBlock(\"comment\", \"::\"));\n      break;\n    case \"^\": //box\n      return chain(inBlock(\"tw-box\", \"^\"));\n      break;\n    case \"~\": //np\n      if (stream.match(\"np~\"))\n        return chain(inBlock(\"meta\", \"~/np~\"));\n      break;\n    }\n\n    //start of line types\n    if (sol) {\n      switch (ch) {\n      case \"!\": //header at start of line\n        if (stream.match('!!!!!')) {\n          return chain(inLine(\"header string\"));\n        } else if (stream.match('!!!!')) {\n          return chain(inLine(\"header string\"));\n        } else if (stream.match('!!!')) {\n          return chain(inLine(\"header string\"));\n        } else if (stream.match('!!')) {\n          return chain(inLine(\"header string\"));\n        } else {\n          return chain(inLine(\"header string\"));\n        }\n        break;\n      case \"*\": //unordered list line item, or <li /> at start of line\n      case \"#\": //ordered list line item, or <li /> at start of line\n      case \"+\": //ordered list line item, or <li /> at start of line\n        return chain(inLine(\"tw-listitem bracket\"));\n        break;\n      }\n    }\n\n    //stream.eatWhile(/[&{]/); was eating up plugins, turned off to act less like html and more like tiki\n    return null;\n  }\n\n  var indentUnit = config.indentUnit;\n\n  // Return variables for tokenizers\n  var pluginName, type;\n  function inPlugin(stream, state) {\n    var ch = stream.next();\n    var peek = stream.peek();\n\n    if (ch == \"}\") {\n      state.tokenize = inText;\n      //type = ch == \")\" ? \"endPlugin\" : \"selfclosePlugin\"; inPlugin\n      return \"tag\";\n    } else if (ch == \"(\" || ch == \")\") {\n      return \"bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n\n      if (peek == \">\") {\n        stream.next();\n        peek = stream.peek();\n      }\n\n      //here we detect values directly after equal character with no quotes\n      if (!/[\\'\\\"]/.test(peek)) {\n        state.tokenize = inAttributeNoQuote();\n      }\n      //end detect values\n\n      return \"operator\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      return state.tokenize(stream, state);\n    } else {\n      stream.eatWhile(/[^\\s\\u00a0=\\\"\\'\\/?]/);\n      return \"keyword\";\n    }\n  }\n\n  function inAttribute(quote) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inPlugin;\n          break;\n        }\n      }\n      return \"string\";\n    };\n  }\n\n  function inAttributeNoQuote() {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        var ch = stream.next();\n        var peek = stream.peek();\n        if (ch == \" \" || ch == \",\" || /[ )}]/.test(peek)) {\n      state.tokenize = inPlugin;\n      break;\n    }\n  }\n  return \"string\";\n};\n                     }\n\nvar curState, setStyle;\nfunction pass() {\n  for (var i = arguments.length - 1; i >= 0; i--) curState.cc.push(arguments[i]);\n}\n\nfunction cont() {\n  pass.apply(null, arguments);\n  return true;\n}\n\nfunction pushContext(pluginName, startOfLine) {\n  var noIndent = curState.context && curState.context.noIndent;\n  curState.context = {\n    prev: curState.context,\n    pluginName: pluginName,\n    indent: curState.indented,\n    startOfLine: startOfLine,\n    noIndent: noIndent\n  };\n}\n\nfunction popContext() {\n  if (curState.context) curState.context = curState.context.prev;\n}\n\nfunction element(type) {\n  if (type == \"openPlugin\") {curState.pluginName = pluginName; return cont(attributes, endplugin(curState.startOfLine));}\n  else if (type == \"closePlugin\") {\n    var err = false;\n    if (curState.context) {\n      err = curState.context.pluginName != pluginName;\n      popContext();\n    } else {\n      err = true;\n    }\n    if (err) setStyle = \"error\";\n    return cont(endcloseplugin(err));\n  }\n  else if (type == \"string\") {\n    if (!curState.context || curState.context.name != \"!cdata\") pushContext(\"!cdata\");\n    if (curState.tokenize == inText) popContext();\n    return cont();\n  }\n  else return cont();\n}\n\nfunction endplugin(startOfLine) {\n  return function(type) {\n    if (\n      type == \"selfclosePlugin\" ||\n        type == \"endPlugin\"\n    )\n      return cont();\n    if (type == \"endPlugin\") {pushContext(curState.pluginName, startOfLine); return cont();}\n    return cont();\n  };\n}\n\nfunction endcloseplugin(err) {\n  return function(type) {\n    if (err) setStyle = \"error\";\n    if (type == \"endPlugin\") return cont();\n    return pass();\n  };\n}\n\nfunction attributes(type) {\n  if (type == \"keyword\") {setStyle = \"attribute\"; return cont(attributes);}\n  if (type == \"equals\") return cont(attvalue, attributes);\n  return pass();\n}\nfunction attvalue(type) {\n  if (type == \"keyword\") {setStyle = \"string\"; return cont();}\n  if (type == \"string\") return cont(attvaluemaybe);\n  return pass();\n}\nfunction attvaluemaybe(type) {\n  if (type == \"string\") return cont(attvaluemaybe);\n  else return pass();\n}\nreturn {\n  startState: function() {\n    return {tokenize: inText, cc: [], indented: 0, startOfLine: true, pluginName: null, context: null};\n  },\n  token: function(stream, state) {\n    if (stream.sol()) {\n      state.startOfLine = true;\n      state.indented = stream.indentation();\n    }\n    if (stream.eatSpace()) return null;\n\n    setStyle = type = pluginName = null;\n    var style = state.tokenize(stream, state);\n    if ((style || type) && style != \"comment\") {\n      curState = state;\n      while (true) {\n        var comb = state.cc.pop() || element;\n        if (comb(type || style)) break;\n      }\n    }\n    state.startOfLine = false;\n    return setStyle || style;\n  },\n  indent: function(state, textAfter) {\n    var context = state.context;\n    if (context && context.noIndent) return 0;\n    if (context && /^{\\//.test(textAfter))\n        context = context.prev;\n    while (context && !context.startOfLine)\n        context = context.prev;\n    if (context) return context.indent + indentUnit;\n    else return 0;\n  },\n  electricChars: \"/\"\n};\n});\n\nCodeMirror.defineMIME(\"text/tiki\", \"tiki\");\n\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}