{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n// Originally written by Alf Nielsen, re-written by Michael Zhou\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  function words(str) {\n    var obj = {},\n        words = str.split(\",\");\n\n    for (var i = 0; i < words.length; ++i) {\n      var allCaps = words[i].toUpperCase();\n      var firstCap = words[i].charAt(0).toUpperCase() + words[i].slice(1);\n      obj[words[i]] = true;\n      obj[allCaps] = true;\n      obj[firstCap] = true;\n    }\n\n    return obj;\n  }\n\n  function metaHook(stream) {\n    stream.eatWhile(/[\\w\\$_]/);\n    return \"meta\";\n  }\n\n  CodeMirror.defineMode(\"vhdl\", function (config, parserConfig) {\n    var indentUnit = config.indentUnit,\n        atoms = parserConfig.atoms || words(\"null\"),\n        hooks = parserConfig.hooks || {\n      \"`\": metaHook,\n      \"$\": metaHook\n    },\n        multiLineStrings = parserConfig.multiLineStrings;\n    var keywords = words(\"abs,access,after,alias,all,and,architecture,array,assert,attribute,begin,block,\" + \"body,buffer,bus,case,component,configuration,constant,disconnect,downto,else,elsif,end,end block,end case,\" + \"end component,end for,end generate,end if,end loop,end process,end record,end units,entity,exit,file,for,\" + \"function,generate,generic,generic map,group,guarded,if,impure,in,inertial,inout,is,label,library,linkage,\" + \"literal,loop,map,mod,nand,new,next,nor,null,of,on,open,or,others,out,package,package body,port,port map,\" + \"postponed,procedure,process,pure,range,record,register,reject,rem,report,return,rol,ror,select,severity,signal,\" + \"sla,sll,sra,srl,subtype,then,to,transport,type,unaffected,units,until,use,variable,wait,when,while,with,xnor,xor\");\n    var blockKeywords = words(\"architecture,entity,begin,case,port,else,elsif,end,for,function,if\");\n    var isOperatorChar = /[&|~><!\\)\\(*#%@+\\/=?\\:;}{,\\.\\^\\-\\[\\]]/;\n    var curPunc;\n\n    function tokenBase(stream, state) {\n      var ch = stream.next();\n\n      if (hooks[ch]) {\n        var result = hooks[ch](stream, state);\n        if (result !== false) return result;\n      }\n\n      if (ch == '\"') {\n        state.tokenize = tokenString2(ch);\n        return state.tokenize(stream, state);\n      }\n\n      if (ch == \"'\") {\n        state.tokenize = tokenString(ch);\n        return state.tokenize(stream, state);\n      }\n\n      if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n        curPunc = ch;\n        return null;\n      }\n\n      if (/[\\d']/.test(ch)) {\n        stream.eatWhile(/[\\w\\.']/);\n        return \"number\";\n      }\n\n      if (ch == \"-\") {\n        if (stream.eat(\"-\")) {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n      }\n\n      if (isOperatorChar.test(ch)) {\n        stream.eatWhile(isOperatorChar);\n        return \"operator\";\n      }\n\n      stream.eatWhile(/[\\w\\$_]/);\n      var cur = stream.current();\n\n      if (keywords.propertyIsEnumerable(cur.toLowerCase())) {\n        if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n        return \"keyword\";\n      }\n\n      if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n      return \"variable\";\n    }\n\n    function tokenString(quote) {\n      return function (stream, state) {\n        var escaped = false,\n            next,\n            end = false;\n\n        while ((next = stream.next()) != null) {\n          if (next == quote && !escaped) {\n            end = true;\n            break;\n          }\n\n          escaped = !escaped && next == \"--\";\n        }\n\n        if (end || !(escaped || multiLineStrings)) state.tokenize = tokenBase;\n        return \"string\";\n      };\n    }\n\n    function tokenString2(quote) {\n      return function (stream, state) {\n        var escaped = false,\n            next,\n            end = false;\n\n        while ((next = stream.next()) != null) {\n          if (next == quote && !escaped) {\n            end = true;\n            break;\n          }\n\n          escaped = !escaped && next == \"--\";\n        }\n\n        if (end || !(escaped || multiLineStrings)) state.tokenize = tokenBase;\n        return \"string-2\";\n      };\n    }\n\n    function Context(indented, column, type, align, prev) {\n      this.indented = indented;\n      this.column = column;\n      this.type = type;\n      this.align = align;\n      this.prev = prev;\n    }\n\n    function pushContext(state, col, type) {\n      return state.context = new Context(state.indented, col, type, null, state.context);\n    }\n\n    function popContext(state) {\n      var t = state.context.type;\n      if (t == \")\" || t == \"]\" || t == \"}\") state.indented = state.context.indented;\n      return state.context = state.context.prev;\n    } // Interface\n\n\n    return {\n      startState: function startState(basecolumn) {\n        return {\n          tokenize: null,\n          context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", false),\n          indented: 0,\n          startOfLine: true\n        };\n      },\n      token: function token(stream, state) {\n        var ctx = state.context;\n\n        if (stream.sol()) {\n          if (ctx.align == null) ctx.align = false;\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n        }\n\n        if (stream.eatSpace()) return null;\n        curPunc = null;\n        var style = (state.tokenize || tokenBase)(stream, state);\n        if (style == \"comment\" || style == \"meta\") return style;\n        if (ctx.align == null) ctx.align = true;\n        if ((curPunc == \";\" || curPunc == \":\") && ctx.type == \"statement\") popContext(state);else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");else if (curPunc == \"}\") {\n          while (ctx.type == \"statement\") {\n            ctx = popContext(state);\n          }\n\n          if (ctx.type == \"}\") ctx = popContext(state);\n\n          while (ctx.type == \"statement\") {\n            ctx = popContext(state);\n          }\n        } else if (curPunc == ctx.type) popContext(state);else if (ctx.type == \"}\" || ctx.type == \"top\" || ctx.type == \"statement\" && curPunc == \"newstatement\") pushContext(state, stream.column(), \"statement\");\n        state.startOfLine = false;\n        return style;\n      },\n      indent: function indent(state, textAfter) {\n        if (state.tokenize != tokenBase && state.tokenize != null) return 0;\n        var firstChar = textAfter && textAfter.charAt(0),\n            ctx = state.context,\n            closing = firstChar == ctx.type;\n        if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : indentUnit);else if (ctx.align) return ctx.column + (closing ? 0 : 1);else return ctx.indented + (closing ? 0 : indentUnit);\n      },\n      electricChars: \"{}\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-vhdl\", \"vhdl\");\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","words","str","obj","split","i","length","allCaps","toUpperCase","firstCap","charAt","slice","metaHook","stream","eatWhile","defineMode","config","parserConfig","indentUnit","atoms","hooks","multiLineStrings","keywords","blockKeywords","isOperatorChar","curPunc","tokenBase","state","ch","next","result","tokenize","tokenString2","tokenString","test","eat","skipToEnd","cur","current","propertyIsEnumerable","toLowerCase","quote","escaped","end","Context","indented","column","type","align","prev","pushContext","col","context","popContext","t","startState","basecolumn","startOfLine","token","ctx","sol","indentation","eatSpace","style","indent","textAfter","firstChar","closing","electricChars","defineMIME"],"sources":["/mnt/Datengrab/python/Zero-tier/frontend/node_modules/codemirror/mode/vhdl/vhdl.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Originally written by Alf Nielsen, re-written by Michael Zhou\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction words(str) {\n  var obj = {}, words = str.split(\",\");\n  for (var i = 0; i < words.length; ++i) {\n    var allCaps = words[i].toUpperCase();\n    var firstCap = words[i].charAt(0).toUpperCase() + words[i].slice(1);\n    obj[words[i]] = true;\n    obj[allCaps] = true;\n    obj[firstCap] = true;\n  }\n  return obj;\n}\n\nfunction metaHook(stream) {\n  stream.eatWhile(/[\\w\\$_]/);\n  return \"meta\";\n}\n\nCodeMirror.defineMode(\"vhdl\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit,\n      atoms = parserConfig.atoms || words(\"null\"),\n      hooks = parserConfig.hooks || {\"`\": metaHook, \"$\": metaHook},\n      multiLineStrings = parserConfig.multiLineStrings;\n\n  var keywords = words(\"abs,access,after,alias,all,and,architecture,array,assert,attribute,begin,block,\" +\n      \"body,buffer,bus,case,component,configuration,constant,disconnect,downto,else,elsif,end,end block,end case,\" +\n      \"end component,end for,end generate,end if,end loop,end process,end record,end units,entity,exit,file,for,\" +\n      \"function,generate,generic,generic map,group,guarded,if,impure,in,inertial,inout,is,label,library,linkage,\" +\n      \"literal,loop,map,mod,nand,new,next,nor,null,of,on,open,or,others,out,package,package body,port,port map,\" +\n      \"postponed,procedure,process,pure,range,record,register,reject,rem,report,return,rol,ror,select,severity,signal,\" +\n      \"sla,sll,sra,srl,subtype,then,to,transport,type,unaffected,units,until,use,variable,wait,when,while,with,xnor,xor\");\n\n  var blockKeywords = words(\"architecture,entity,begin,case,port,else,elsif,end,for,function,if\");\n\n  var isOperatorChar = /[&|~><!\\)\\(*#%@+\\/=?\\:;}{,\\.\\^\\-\\[\\]]/;\n  var curPunc;\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (hooks[ch]) {\n      var result = hooks[ch](stream, state);\n      if (result !== false) return result;\n    }\n    if (ch == '\"') {\n      state.tokenize = tokenString2(ch);\n      return state.tokenize(stream, state);\n    }\n    if (ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    }\n    if (/[\\d']/.test(ch)) {\n      stream.eatWhile(/[\\w\\.']/);\n      return \"number\";\n    }\n    if (ch == \"-\") {\n      if (stream.eat(\"-\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (isOperatorChar.test(ch)) {\n      stream.eatWhile(isOperatorChar);\n      return \"operator\";\n    }\n    stream.eatWhile(/[\\w\\$_]/);\n    var cur = stream.current();\n    if (keywords.propertyIsEnumerable(cur.toLowerCase())) {\n      if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n      return \"keyword\";\n    }\n    if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n    return \"variable\";\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && next == \"--\";\n      }\n      if (end || !(escaped || multiLineStrings))\n        state.tokenize = tokenBase;\n      return \"string\";\n    };\n  }\n  function tokenString2(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && next == \"--\";\n      }\n      if (end || !(escaped || multiLineStrings))\n        state.tokenize = tokenBase;\n      return \"string-2\";\n    };\n  }\n\n  function Context(indented, column, type, align, prev) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.align = align;\n    this.prev = prev;\n  }\n  function pushContext(state, col, type) {\n    return state.context = new Context(state.indented, col, type, null, state.context);\n  }\n  function popContext(state) {\n    var t = state.context.type;\n    if (t == \")\" || t == \"]\" || t == \"}\")\n      state.indented = state.context.indented;\n    return state.context = state.context.prev;\n  }\n\n  // Interface\n  return {\n    startState: function(basecolumn) {\n      return {\n        tokenize: null,\n        context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", false),\n        indented: 0,\n        startOfLine: true\n      };\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n      }\n      if (stream.eatSpace()) return null;\n      curPunc = null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\" || style == \"meta\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if ((curPunc == \";\" || curPunc == \":\") && ctx.type == \"statement\") popContext(state);\n      else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n      else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n      else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n      else if (curPunc == \"}\") {\n        while (ctx.type == \"statement\") ctx = popContext(state);\n        if (ctx.type == \"}\") ctx = popContext(state);\n        while (ctx.type == \"statement\") ctx = popContext(state);\n      }\n      else if (curPunc == ctx.type) popContext(state);\n      else if (ctx.type == \"}\" || ctx.type == \"top\" || (ctx.type == \"statement\" && curPunc == \"newstatement\"))\n        pushContext(state, stream.column(), \"statement\");\n      state.startOfLine = false;\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase && state.tokenize != null) return 0;\n      var firstChar = textAfter && textAfter.charAt(0), ctx = state.context, closing = firstChar == ctx.type;\n      if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : indentUnit);\n      else if (ctx.align) return ctx.column + (closing ? 0 : 1);\n      else return ctx.indented + (closing ? 0 : indentUnit);\n    },\n\n    electricChars: \"{}\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-vhdl\", \"vhdl\");\n\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}