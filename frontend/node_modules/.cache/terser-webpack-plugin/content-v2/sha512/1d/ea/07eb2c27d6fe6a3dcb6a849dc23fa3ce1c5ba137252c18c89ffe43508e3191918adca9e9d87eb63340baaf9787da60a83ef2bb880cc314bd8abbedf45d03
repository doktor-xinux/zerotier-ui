{"code":"(this.webpackJsonpfrontend=this.webpackJsonpfrontend||[]).push([[103],{382:function(e,t,n){!function(e){\"use strict\";function t(e){for(var t={},n=0;n<e.length;n++)t[e[n]]=!0;return t}var n=t([\"_\",\"var\",\"let\",\"class\",\"enum\",\"extension\",\"import\",\"protocol\",\"struct\",\"func\",\"typealias\",\"associatedtype\",\"open\",\"public\",\"internal\",\"fileprivate\",\"private\",\"deinit\",\"init\",\"new\",\"override\",\"self\",\"subscript\",\"super\",\"convenience\",\"dynamic\",\"final\",\"indirect\",\"lazy\",\"required\",\"static\",\"unowned\",\"unowned(safe)\",\"unowned(unsafe)\",\"weak\",\"as\",\"is\",\"break\",\"case\",\"continue\",\"default\",\"else\",\"fallthrough\",\"for\",\"guard\",\"if\",\"in\",\"repeat\",\"switch\",\"where\",\"while\",\"defer\",\"return\",\"inout\",\"mutating\",\"nonmutating\",\"catch\",\"do\",\"rethrows\",\"throw\",\"throws\",\"try\",\"didSet\",\"get\",\"set\",\"willSet\",\"assignment\",\"associativity\",\"infix\",\"left\",\"none\",\"operator\",\"postfix\",\"precedence\",\"precedencegroup\",\"prefix\",\"right\",\"Any\",\"AnyObject\",\"Type\",\"dynamicType\",\"Self\",\"Protocol\",\"__COLUMN__\",\"__FILE__\",\"__FUNCTION__\",\"__LINE__\"]),r=t([\"var\",\"let\",\"class\",\"enum\",\"extension\",\"import\",\"protocol\",\"struct\",\"func\",\"typealias\",\"associatedtype\",\"for\"]),i=t([\"true\",\"false\",\"nil\",\"self\",\"super\",\"_\"]),o=t([\"Array\",\"Bool\",\"Character\",\"Dictionary\",\"Double\",\"Float\",\"Int\",\"Int8\",\"Int16\",\"Int32\",\"Int64\",\"Never\",\"Optional\",\"Set\",\"String\",\"UInt8\",\"UInt16\",\"UInt32\",\"UInt64\",\"Void\"]),a=\"+-/*%=|&<>~^?!\",u=\":;,.(){}[]\",c=/^\\-?0b[01][01_]*/,f=/^\\-?0o[0-7][0-7_]*/,s=/^\\-?0x[\\dA-Fa-f][\\dA-Fa-f_]*(?:(?:\\.[\\dA-Fa-f][\\dA-Fa-f_]*)?[Pp]\\-?\\d[\\d_]*)?/,p=/^\\-?\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[Ee]\\-?\\d[\\d_]*)?/,d=/^\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1/,l=/^\\.(?:\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1)/,h=/^\\#[A-Za-z]+/,m=/^@(?:\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1)/;function v(e,t,v){if(e.sol()&&(t.indented=e.indentation()),e.eatSpace())return null;var _,w=e.peek();if(\"/\"==w){if(e.match(\"//\"))return e.skipToEnd(),\"comment\";if(e.match(\"/*\"))return t.tokenize.push(x),x(e,t)}if(e.match(h))return\"builtin\";if(e.match(m))return\"attribute\";if(e.match(c))return\"number\";if(e.match(f))return\"number\";if(e.match(s))return\"number\";if(e.match(p))return\"number\";if(e.match(l))return\"property\";if(a.indexOf(w)>-1)return e.next(),\"operator\";if(u.indexOf(w)>-1)return e.next(),e.match(\"..\"),\"punctuation\";if(_=e.match(/(\"\"\"|\"|')/)){var b=k.bind(null,_[0]);return t.tokenize.push(b),b(e,t)}if(e.match(d)){var y=e.current();return o.hasOwnProperty(y)?\"variable-2\":i.hasOwnProperty(y)?\"atom\":n.hasOwnProperty(y)?(r.hasOwnProperty(y)&&(t.prev=\"define\"),\"keyword\"):\"define\"==v?\"def\":\"variable\"}return e.next(),null}function _(){var e=0;return function(t,n,r){var i=v(t,n,r);if(\"punctuation\"==i)if(\"(\"==t.current())++e;else if(\")\"==t.current()){if(0==e)return t.backUp(1),n.tokenize.pop(),n.tokenize[n.tokenize.length-1](t,n);--e}return i}}function k(e,t,n){for(var r,i=1==e.length,o=!1;r=t.peek();)if(o){if(t.next(),\"(\"==r)return n.tokenize.push(_()),\"string\";o=!1}else{if(t.match(e))return n.tokenize.pop(),\"string\";t.next(),o=\"\\\\\"==r}return i&&n.tokenize.pop(),\"string\"}function x(e,t){for(var n;e.match(/^[^/*]+/,!0),n=e.next();)\"/\"===n&&e.eat(\"*\")?t.tokenize.push(x):\"*\"===n&&e.eat(\"/\")&&t.tokenize.pop();return\"comment\"}function w(e,t,n){this.prev=e,this.align=t,this.indented=n}function b(e,t){var n=t.match(/^\\s*($|\\/[\\/\\*])/,!1)?null:t.column()+1;e.context=new w(e.context,n,e.indented)}function y(e){e.context&&(e.indented=e.context.indented,e.context=e.context.prev)}e.defineMode(\"swift\",(function(e){return{startState:function(){return{prev:null,context:null,indented:0,tokenize:[]}},token:function(e,t){var n=t.prev;t.prev=null;var r=(t.tokenize[t.tokenize.length-1]||v)(e,t,n);if(r&&\"comment\"!=r?t.prev||(t.prev=r):t.prev=n,\"punctuation\"==r){var i=/[\\(\\[\\{]|([\\]\\)\\}])/.exec(e.current());i&&(i[1]?y:b)(t,e)}return r},indent:function(t,n){var r=t.context;if(!r)return 0;var i=/^[\\]\\}\\)]/.test(n);return null!=r.align?r.align-(i?1:0):r.indented+(i?0:e.indentUnit)},electricInput:/^\\s*[\\)\\}\\]]$/,lineComment:\"//\",blockCommentStart:\"/*\",blockCommentEnd:\"*/\",fold:\"brace\",closeBrackets:\"()[]{}''\\\"\\\"``\"}})),e.defineMIME(\"text/x-swift\",\"swift\")}(n(108))}}]);","name":"static/js/103.ad2d4c71.chunk.js","map":{"version":3,"sources":["static/js/103.ad2d4c71.chunk.js"],"names":["this","push","module","exports","__webpack_require__","CodeMirror","wordSet","words","set","i","length","keywords","definingKeywords","atoms","types","operators","punc","binary","octal","hexadecimal","decimal","identifier","property","instruction","attribute","tokenBase","stream","state","prev","sol","indented","indentation","eatSpace","stringMatch","ch","peek","match","skipToEnd","tokenize","tokenComment","indexOf","next","tokenString","bind","ident","current","hasOwnProperty","tokenUntilClosingParen","depth","inner","backUp","pop","openQuote","singleLine","escaped","eat","Context","align","pushContext","column","context","popContext","defineMode","config","startState","token","style","bracket","exec","indent","textAfter","cx","closing","test","indentUnit","electricInput","lineComment","blockCommentStart","blockCommentEnd","fold","closeBrackets","defineMIME","mod"],"mappings":"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"},"input":"(this[\"webpackJsonpfrontend\"] = this[\"webpackJsonpfrontend\"] || []).push([[103],{\n\n/***/ 382:\n/***/ (function(module, exports, __webpack_require__) {\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n// Swift mode created by Michael Kaminsky https://github.com/mkaminsky11\n(function (mod) {\n  if (true) mod(__webpack_require__(108));else {}\n})(function (CodeMirror) {\n  \"use strict\";\n\n  function wordSet(words) {\n    var set = {};\n\n    for (var i = 0; i < words.length; i++) {\n      set[words[i]] = true;\n    }\n\n    return set;\n  }\n\n  var keywords = wordSet([\"_\", \"var\", \"let\", \"class\", \"enum\", \"extension\", \"import\", \"protocol\", \"struct\", \"func\", \"typealias\", \"associatedtype\", \"open\", \"public\", \"internal\", \"fileprivate\", \"private\", \"deinit\", \"init\", \"new\", \"override\", \"self\", \"subscript\", \"super\", \"convenience\", \"dynamic\", \"final\", \"indirect\", \"lazy\", \"required\", \"static\", \"unowned\", \"unowned(safe)\", \"unowned(unsafe)\", \"weak\", \"as\", \"is\", \"break\", \"case\", \"continue\", \"default\", \"else\", \"fallthrough\", \"for\", \"guard\", \"if\", \"in\", \"repeat\", \"switch\", \"where\", \"while\", \"defer\", \"return\", \"inout\", \"mutating\", \"nonmutating\", \"catch\", \"do\", \"rethrows\", \"throw\", \"throws\", \"try\", \"didSet\", \"get\", \"set\", \"willSet\", \"assignment\", \"associativity\", \"infix\", \"left\", \"none\", \"operator\", \"postfix\", \"precedence\", \"precedencegroup\", \"prefix\", \"right\", \"Any\", \"AnyObject\", \"Type\", \"dynamicType\", \"Self\", \"Protocol\", \"__COLUMN__\", \"__FILE__\", \"__FUNCTION__\", \"__LINE__\"]);\n  var definingKeywords = wordSet([\"var\", \"let\", \"class\", \"enum\", \"extension\", \"import\", \"protocol\", \"struct\", \"func\", \"typealias\", \"associatedtype\", \"for\"]);\n  var atoms = wordSet([\"true\", \"false\", \"nil\", \"self\", \"super\", \"_\"]);\n  var types = wordSet([\"Array\", \"Bool\", \"Character\", \"Dictionary\", \"Double\", \"Float\", \"Int\", \"Int8\", \"Int16\", \"Int32\", \"Int64\", \"Never\", \"Optional\", \"Set\", \"String\", \"UInt8\", \"UInt16\", \"UInt32\", \"UInt64\", \"Void\"]);\n  var operators = \"+-/*%=|&<>~^?!\";\n  var punc = \":;,.(){}[]\";\n  var binary = /^\\-?0b[01][01_]*/;\n  var octal = /^\\-?0o[0-7][0-7_]*/;\n  var hexadecimal = /^\\-?0x[\\dA-Fa-f][\\dA-Fa-f_]*(?:(?:\\.[\\dA-Fa-f][\\dA-Fa-f_]*)?[Pp]\\-?\\d[\\d_]*)?/;\n  var decimal = /^\\-?\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[Ee]\\-?\\d[\\d_]*)?/;\n  var identifier = /^\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1/;\n  var property = /^\\.(?:\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1)/;\n  var instruction = /^\\#[A-Za-z]+/;\n  var attribute = /^@(?:\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1)/; //var regexp = /^\\/(?!\\s)(?:\\/\\/)?(?:\\\\.|[^\\/])+\\//\n\n  function tokenBase(stream, state, prev) {\n    if (stream.sol()) state.indented = stream.indentation();\n    if (stream.eatSpace()) return null;\n    var ch = stream.peek();\n\n    if (ch == \"/\") {\n      if (stream.match(\"//\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n\n      if (stream.match(\"/*\")) {\n        state.tokenize.push(tokenComment);\n        return tokenComment(stream, state);\n      }\n    }\n\n    if (stream.match(instruction)) return \"builtin\";\n    if (stream.match(attribute)) return \"attribute\";\n    if (stream.match(binary)) return \"number\";\n    if (stream.match(octal)) return \"number\";\n    if (stream.match(hexadecimal)) return \"number\";\n    if (stream.match(decimal)) return \"number\";\n    if (stream.match(property)) return \"property\";\n\n    if (operators.indexOf(ch) > -1) {\n      stream.next();\n      return \"operator\";\n    }\n\n    if (punc.indexOf(ch) > -1) {\n      stream.next();\n      stream.match(\"..\");\n      return \"punctuation\";\n    }\n\n    var stringMatch;\n\n    if (stringMatch = stream.match(/(\"\"\"|\"|')/)) {\n      var tokenize = tokenString.bind(null, stringMatch[0]);\n      state.tokenize.push(tokenize);\n      return tokenize(stream, state);\n    }\n\n    if (stream.match(identifier)) {\n      var ident = stream.current();\n      if (types.hasOwnProperty(ident)) return \"variable-2\";\n      if (atoms.hasOwnProperty(ident)) return \"atom\";\n\n      if (keywords.hasOwnProperty(ident)) {\n        if (definingKeywords.hasOwnProperty(ident)) state.prev = \"define\";\n        return \"keyword\";\n      }\n\n      if (prev == \"define\") return \"def\";\n      return \"variable\";\n    }\n\n    stream.next();\n    return null;\n  }\n\n  function tokenUntilClosingParen() {\n    var depth = 0;\n    return function (stream, state, prev) {\n      var inner = tokenBase(stream, state, prev);\n\n      if (inner == \"punctuation\") {\n        if (stream.current() == \"(\") ++depth;else if (stream.current() == \")\") {\n          if (depth == 0) {\n            stream.backUp(1);\n            state.tokenize.pop();\n            return state.tokenize[state.tokenize.length - 1](stream, state);\n          } else --depth;\n        }\n      }\n\n      return inner;\n    };\n  }\n\n  function tokenString(openQuote, stream, state) {\n    var singleLine = openQuote.length == 1;\n    var ch,\n        escaped = false;\n\n    while (ch = stream.peek()) {\n      if (escaped) {\n        stream.next();\n\n        if (ch == \"(\") {\n          state.tokenize.push(tokenUntilClosingParen());\n          return \"string\";\n        }\n\n        escaped = false;\n      } else if (stream.match(openQuote)) {\n        state.tokenize.pop();\n        return \"string\";\n      } else {\n        stream.next();\n        escaped = ch == \"\\\\\";\n      }\n    }\n\n    if (singleLine) {\n      state.tokenize.pop();\n    }\n\n    return \"string\";\n  }\n\n  function tokenComment(stream, state) {\n    var ch;\n\n    while (true) {\n      stream.match(/^[^/*]+/, true);\n      ch = stream.next();\n      if (!ch) break;\n\n      if (ch === \"/\" && stream.eat(\"*\")) {\n        state.tokenize.push(tokenComment);\n      } else if (ch === \"*\" && stream.eat(\"/\")) {\n        state.tokenize.pop();\n      }\n    }\n\n    return \"comment\";\n  }\n\n  function Context(prev, align, indented) {\n    this.prev = prev;\n    this.align = align;\n    this.indented = indented;\n  }\n\n  function pushContext(state, stream) {\n    var align = stream.match(/^\\s*($|\\/[\\/\\*])/, false) ? null : stream.column() + 1;\n    state.context = new Context(state.context, align, state.indented);\n  }\n\n  function popContext(state) {\n    if (state.context) {\n      state.indented = state.context.indented;\n      state.context = state.context.prev;\n    }\n  }\n\n  CodeMirror.defineMode(\"swift\", function (config) {\n    return {\n      startState: function startState() {\n        return {\n          prev: null,\n          context: null,\n          indented: 0,\n          tokenize: []\n        };\n      },\n      token: function token(stream, state) {\n        var prev = state.prev;\n        state.prev = null;\n        var tokenize = state.tokenize[state.tokenize.length - 1] || tokenBase;\n        var style = tokenize(stream, state, prev);\n        if (!style || style == \"comment\") state.prev = prev;else if (!state.prev) state.prev = style;\n\n        if (style == \"punctuation\") {\n          var bracket = /[\\(\\[\\{]|([\\]\\)\\}])/.exec(stream.current());\n          if (bracket) (bracket[1] ? popContext : pushContext)(state, stream);\n        }\n\n        return style;\n      },\n      indent: function indent(state, textAfter) {\n        var cx = state.context;\n        if (!cx) return 0;\n        var closing = /^[\\]\\}\\)]/.test(textAfter);\n        if (cx.align != null) return cx.align - (closing ? 1 : 0);\n        return cx.indented + (closing ? 0 : config.indentUnit);\n      },\n      electricInput: /^\\s*[\\)\\}\\]]$/,\n      lineComment: \"//\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      fold: \"brace\",\n      closeBrackets: \"()[]{}''\\\"\\\"``\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-swift\", \"swift\");\n});\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/mnt/Datengrab/python/Zero-tier/frontend/node_modules/codemirror/mode/swift/swift.js"],"names":["mod","require","CodeMirror","wordSet","words","set","i","length","keywords","definingKeywords","atoms","types","operators","punc","binary","octal","hexadecimal","decimal","identifier","property","instruction","attribute","tokenBase","stream","state","prev","sol","indented","indentation","eatSpace","ch","peek","match","skipToEnd","tokenize","push","tokenComment","indexOf","next","stringMatch","tokenString","bind","ident","current","hasOwnProperty","tokenUntilClosingParen","depth","inner","backUp","pop","openQuote","singleLine","escaped","eat","Context","align","pushContext","column","context","popContext","defineMode","config","startState","token","style","bracket","exec","indent","textAfter","cx","closing","test","indentUnit","electricInput","lineComment","blockCommentStart","blockCommentEnd","fold","closeBrackets","defineMIME"],"mappings":"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","file":"x","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Swift mode created by Michael Kaminsky https://github.com/mkaminsky11\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    mod(require(\"../../lib/codemirror\"))\n  else if (typeof define == \"function\" && define.amd)\n    define([\"../../lib/codemirror\"], mod)\n  else\n    mod(CodeMirror)\n})(function(CodeMirror) {\n  \"use strict\"\n\n  function wordSet(words) {\n    var set = {}\n    for (var i = 0; i < words.length; i++) set[words[i]] = true\n    return set\n  }\n\n  var keywords = wordSet([\"_\",\"var\",\"let\",\"class\",\"enum\",\"extension\",\"import\",\"protocol\",\"struct\",\"func\",\"typealias\",\"associatedtype\",\n                          \"open\",\"public\",\"internal\",\"fileprivate\",\"private\",\"deinit\",\"init\",\"new\",\"override\",\"self\",\"subscript\",\"super\",\n                          \"convenience\",\"dynamic\",\"final\",\"indirect\",\"lazy\",\"required\",\"static\",\"unowned\",\"unowned(safe)\",\"unowned(unsafe)\",\"weak\",\"as\",\"is\",\n                          \"break\",\"case\",\"continue\",\"default\",\"else\",\"fallthrough\",\"for\",\"guard\",\"if\",\"in\",\"repeat\",\"switch\",\"where\",\"while\",\n                          \"defer\",\"return\",\"inout\",\"mutating\",\"nonmutating\",\"catch\",\"do\",\"rethrows\",\"throw\",\"throws\",\"try\",\"didSet\",\"get\",\"set\",\"willSet\",\n                          \"assignment\",\"associativity\",\"infix\",\"left\",\"none\",\"operator\",\"postfix\",\"precedence\",\"precedencegroup\",\"prefix\",\"right\",\n                          \"Any\",\"AnyObject\",\"Type\",\"dynamicType\",\"Self\",\"Protocol\",\"__COLUMN__\",\"__FILE__\",\"__FUNCTION__\",\"__LINE__\"])\n  var definingKeywords = wordSet([\"var\",\"let\",\"class\",\"enum\",\"extension\",\"import\",\"protocol\",\"struct\",\"func\",\"typealias\",\"associatedtype\",\"for\"])\n  var atoms = wordSet([\"true\",\"false\",\"nil\",\"self\",\"super\",\"_\"])\n  var types = wordSet([\"Array\",\"Bool\",\"Character\",\"Dictionary\",\"Double\",\"Float\",\"Int\",\"Int8\",\"Int16\",\"Int32\",\"Int64\",\"Never\",\"Optional\",\"Set\",\"String\",\n                       \"UInt8\",\"UInt16\",\"UInt32\",\"UInt64\",\"Void\"])\n  var operators = \"+-/*%=|&<>~^?!\"\n  var punc = \":;,.(){}[]\"\n  var binary = /^\\-?0b[01][01_]*/\n  var octal = /^\\-?0o[0-7][0-7_]*/\n  var hexadecimal = /^\\-?0x[\\dA-Fa-f][\\dA-Fa-f_]*(?:(?:\\.[\\dA-Fa-f][\\dA-Fa-f_]*)?[Pp]\\-?\\d[\\d_]*)?/\n  var decimal = /^\\-?\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[Ee]\\-?\\d[\\d_]*)?/\n  var identifier = /^\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1/\n  var property = /^\\.(?:\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1)/\n  var instruction = /^\\#[A-Za-z]+/\n  var attribute = /^@(?:\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1)/\n  //var regexp = /^\\/(?!\\s)(?:\\/\\/)?(?:\\\\.|[^\\/])+\\//\n\n  function tokenBase(stream, state, prev) {\n    if (stream.sol()) state.indented = stream.indentation()\n    if (stream.eatSpace()) return null\n\n    var ch = stream.peek()\n    if (ch == \"/\") {\n      if (stream.match(\"//\")) {\n        stream.skipToEnd()\n        return \"comment\"\n      }\n      if (stream.match(\"/*\")) {\n        state.tokenize.push(tokenComment)\n        return tokenComment(stream, state)\n      }\n    }\n    if (stream.match(instruction)) return \"builtin\"\n    if (stream.match(attribute)) return \"attribute\"\n    if (stream.match(binary)) return \"number\"\n    if (stream.match(octal)) return \"number\"\n    if (stream.match(hexadecimal)) return \"number\"\n    if (stream.match(decimal)) return \"number\"\n    if (stream.match(property)) return \"property\"\n    if (operators.indexOf(ch) > -1) {\n      stream.next()\n      return \"operator\"\n    }\n    if (punc.indexOf(ch) > -1) {\n      stream.next()\n      stream.match(\"..\")\n      return \"punctuation\"\n    }\n    var stringMatch\n    if (stringMatch = stream.match(/(\"\"\"|\"|')/)) {\n      var tokenize = tokenString.bind(null, stringMatch[0])\n      state.tokenize.push(tokenize)\n      return tokenize(stream, state)\n    }\n\n    if (stream.match(identifier)) {\n      var ident = stream.current()\n      if (types.hasOwnProperty(ident)) return \"variable-2\"\n      if (atoms.hasOwnProperty(ident)) return \"atom\"\n      if (keywords.hasOwnProperty(ident)) {\n        if (definingKeywords.hasOwnProperty(ident))\n          state.prev = \"define\"\n        return \"keyword\"\n      }\n      if (prev == \"define\") return \"def\"\n      return \"variable\"\n    }\n\n    stream.next()\n    return null\n  }\n\n  function tokenUntilClosingParen() {\n    var depth = 0\n    return function(stream, state, prev) {\n      var inner = tokenBase(stream, state, prev)\n      if (inner == \"punctuation\") {\n        if (stream.current() == \"(\") ++depth\n        else if (stream.current() == \")\") {\n          if (depth == 0) {\n            stream.backUp(1)\n            state.tokenize.pop()\n            return state.tokenize[state.tokenize.length - 1](stream, state)\n          }\n          else --depth\n        }\n      }\n      return inner\n    }\n  }\n\n  function tokenString(openQuote, stream, state) {\n    var singleLine = openQuote.length == 1\n    var ch, escaped = false\n    while (ch = stream.peek()) {\n      if (escaped) {\n        stream.next()\n        if (ch == \"(\") {\n          state.tokenize.push(tokenUntilClosingParen())\n          return \"string\"\n        }\n        escaped = false\n      } else if (stream.match(openQuote)) {\n        state.tokenize.pop()\n        return \"string\"\n      } else {\n        stream.next()\n        escaped = ch == \"\\\\\"\n      }\n    }\n    if (singleLine) {\n      state.tokenize.pop()\n    }\n    return \"string\"\n  }\n\n  function tokenComment(stream, state) {\n    var ch\n    while (true) {\n      stream.match(/^[^/*]+/, true)\n      ch = stream.next()\n      if (!ch) break\n      if (ch === \"/\" && stream.eat(\"*\")) {\n        state.tokenize.push(tokenComment)\n      } else if (ch === \"*\" && stream.eat(\"/\")) {\n        state.tokenize.pop()\n      }\n    }\n    return \"comment\"\n  }\n\n  function Context(prev, align, indented) {\n    this.prev = prev\n    this.align = align\n    this.indented = indented\n  }\n\n  function pushContext(state, stream) {\n    var align = stream.match(/^\\s*($|\\/[\\/\\*])/, false) ? null : stream.column() + 1\n    state.context = new Context(state.context, align, state.indented)\n  }\n\n  function popContext(state) {\n    if (state.context) {\n      state.indented = state.context.indented\n      state.context = state.context.prev\n    }\n  }\n\n  CodeMirror.defineMode(\"swift\", function(config) {\n    return {\n      startState: function() {\n        return {\n          prev: null,\n          context: null,\n          indented: 0,\n          tokenize: []\n        }\n      },\n\n      token: function(stream, state) {\n        var prev = state.prev\n        state.prev = null\n        var tokenize = state.tokenize[state.tokenize.length - 1] || tokenBase\n        var style = tokenize(stream, state, prev)\n        if (!style || style == \"comment\") state.prev = prev\n        else if (!state.prev) state.prev = style\n\n        if (style == \"punctuation\") {\n          var bracket = /[\\(\\[\\{]|([\\]\\)\\}])/.exec(stream.current())\n          if (bracket) (bracket[1] ? popContext : pushContext)(state, stream)\n        }\n\n        return style\n      },\n\n      indent: function(state, textAfter) {\n        var cx = state.context\n        if (!cx) return 0\n        var closing = /^[\\]\\}\\)]/.test(textAfter)\n        if (cx.align != null) return cx.align - (closing ? 1 : 0)\n        return cx.indented + (closing ? 0 : config.indentUnit)\n      },\n\n      electricInput: /^\\s*[\\)\\}\\]]$/,\n\n      lineComment: \"//\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      fold: \"brace\",\n      closeBrackets: \"()[]{}''\\\"\\\"``\"\n    }\n  })\n\n  CodeMirror.defineMIME(\"text/x-swift\",\"swift\")\n});\n"]}}