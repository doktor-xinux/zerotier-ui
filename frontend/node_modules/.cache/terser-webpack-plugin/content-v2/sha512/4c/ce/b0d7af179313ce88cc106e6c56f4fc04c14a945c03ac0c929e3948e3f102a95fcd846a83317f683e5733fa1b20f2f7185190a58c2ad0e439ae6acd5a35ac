{"code":"(this.webpackJsonpfrontend=this.webpackJsonpfrontend||[]).push([[104],{383:function(e,r,t){!function(e){\"use strict\";e.defineMode(\"tcl\",(function(){function e(e){for(var r={},t=e.split(\" \"),n=0;n<t.length;++n)r[t[n]]=!0;return r}var r=e(\"Tcl safe after append array auto_execok auto_import auto_load auto_mkindex auto_mkindex_old auto_qualify auto_reset bgerror binary break catch cd close concat continue dde eof encoding error eval exec exit expr fblocked fconfigure fcopy file fileevent filename filename flush for foreach format gets glob global history http if incr info interp join lappend lindex linsert list llength load lrange lreplace lsearch lset lsort memory msgcat namespace open package parray pid pkg::create pkg_mkIndex proc puts pwd re_syntax read regex regexp registry regsub rename resource return scan seek set socket source split string subst switch tcl_endOfWord tcl_findLibrary tcl_startOfNextWord tcl_wordBreakAfter tcl_startOfPreviousWord tcl_wordBreakBefore tcltest tclvars tell time trace unknown unset update uplevel upvar variable vwait\"),t=e(\"if elseif else and not or eq ne in ni for foreach while switch\"),n=/[+\\-*&%=<>!?^\\/\\|]/;function a(e,r,t){return r.tokenize=t,t(e,r)}function o(e,o){var c=o.beforeParams;o.beforeParams=!1;var s=e.next();if('\"'!=s&&\"'\"!=s||!o.inParams){if(/[\\[\\]{}\\(\\),;\\.]/.test(s))return\"(\"==s&&c?o.inParams=!0:\")\"==s&&(o.inParams=!1),null;if(/\\d/.test(s))return e.eatWhile(/[\\w\\.]/),\"number\";if(\"#\"==s)return e.eat(\"*\")?a(e,o,f):\"#\"==s&&e.match(/ *\\[ *\\[/)?a(e,o,l):(e.skipToEnd(),\"comment\");if('\"'==s)return e.skipTo(/\"/),\"comment\";if(\"$\"==s)return e.eatWhile(/[$_a-z0-9A-Z\\.{:]/),e.eatWhile(/}/),o.beforeParams=!0,\"builtin\";if(n.test(s))return e.eatWhile(n),\"comment\";e.eatWhile(/[\\w\\$_{}\\xa1-\\uffff]/);var u=e.current().toLowerCase();return r&&r.propertyIsEnumerable(u)?\"keyword\":t&&t.propertyIsEnumerable(u)?(o.beforeParams=!0,\"keyword\"):null}return a(e,o,i(s))}function i(e){return function(r,t){for(var n,a=!1,i=!1;null!=(n=r.next());){if(n==e&&!a){i=!0;break}a=!a&&\"\\\\\"==n}return i&&(t.tokenize=o),\"string\"}}function f(e,r){for(var t,n=!1;t=e.next();){if(\"#\"==t&&n){r.tokenize=o;break}n=\"*\"==t}return\"comment\"}function l(e,r){for(var t,n=0;t=e.next();){if(\"#\"==t&&2==n){r.tokenize=o;break}\"]\"==t?n++:\" \"!=t&&(n=0)}return\"meta\"}return{startState:function(){return{tokenize:o,beforeParams:!1,inParams:!1}},token:function(e,r){return e.eatSpace()?null:r.tokenize(e,r)},lineComment:\"#\"}})),e.defineMIME(\"text/x-tcl\",\"tcl\")}(t(108))}}]);","name":"static/js/104.26f682df.chunk.js","map":{"version":3,"sources":["static/js/104.26f682df.chunk.js"],"names":["this","push","module","exports","__webpack_require__","CodeMirror","defineMode","parseWords","str","obj","words","split","i","length","keywords","functions","isOperatorChar","chain","stream","state","f","tokenize","tokenBase","beforeParams","ch","next","inParams","test","eatWhile","eat","tokenComment","match","tokenUnparsed","skipToEnd","skipTo","word","current","toLowerCase","propertyIsEnumerable","tokenString","quote","escaped","end","maybeEnd","startState","token","eatSpace","lineComment","defineMIME","mod"],"mappings":"CAACA,KAA2B,qBAAIA,KAA2B,sBAAK,IAAIC,KAAK,CAAC,CAAC,KAAK,CAE1E,IACA,SAAUC,EAAQC,EAASC,IAQ9B,SAAUC,GACX,aAEAA,EAAWC,WAAW,OAAO,WAC3B,SAASC,EAAWC,GAIlB,IAHA,IAAIC,EAAM,GACNC,EAAQF,EAAIG,MAAM,KAEbC,EAAI,EAAGA,EAAIF,EAAMG,SAAUD,EAClCH,EAAIC,EAAME,KAAM,EAGlB,OAAOH,EAGT,IAAIK,EAAWP,EAAW,+zBACtBQ,EAAYR,EAAW,kEACvBS,EAAiB,qBAErB,SAASC,EAAMC,EAAQC,EAAOC,GAE5B,OADAD,EAAME,SAAWD,EACVA,EAAEF,EAAQC,GAGnB,SAASG,EAAUJ,EAAQC,GACzB,IAAII,EAAeJ,EAAMI,aACzBJ,EAAMI,cAAe,EACrB,IAAIC,EAAKN,EAAOO,OAEhB,GAAW,KAAND,GAAmB,KAANA,IAAcL,EAAMO,SAE/B,CAAA,GAAI,mBAAmBC,KAAKH,GAEjC,MADU,KAANA,GAAaD,EAAcJ,EAAMO,UAAW,EAAoB,KAANF,IAAWL,EAAMO,UAAW,GACnF,KACF,GAAI,KAAKC,KAAKH,GAEnB,OADAN,EAAOU,SAAS,UACT,SACF,GAAU,KAANJ,EACT,OAAIN,EAAOW,IAAI,KAAaZ,EAAMC,EAAQC,EAAOW,GACvC,KAANN,GAAaN,EAAOa,MAAM,YAAoBd,EAAMC,EAAQC,EAAOa,IACvEd,EAAOe,YACA,WACF,GAAU,KAANT,EAET,OADAN,EAAOgB,OAAO,KACP,UACF,GAAU,KAANV,EAIT,OAHAN,EAAOU,SAAS,qBAChBV,EAAOU,SAAS,KAChBT,EAAMI,cAAe,EACd,UACF,GAAIP,EAAeW,KAAKH,GAE7B,OADAN,EAAOU,SAASZ,GACT,UAEPE,EAAOU,SAAS,wBAChB,IAAIO,EAAOjB,EAAOkB,UAAUC,cAC5B,OAAIvB,GAAYA,EAASwB,qBAAqBH,GAAc,UAExDpB,GAAaA,EAAUuB,qBAAqBH,IAC9ChB,EAAMI,cAAe,EACd,WAGF,KAjCP,OAAON,EAAMC,EAAQC,EAAOoB,EAAYf,IAqC5C,SAASe,EAAYC,GACnB,OAAO,SAAUtB,EAAQC,GAKvB,IAJA,IACIM,EADAgB,GAAU,EAEVC,GAAM,EAEuB,OAAzBjB,EAAOP,EAAOO,SAAiB,CACrC,GAAIA,GAAQe,IAAUC,EAAS,CAC7BC,GAAM,EACN,MAGFD,GAAWA,GAAmB,MAARhB,EAIxB,OADIiB,IAAKvB,EAAME,SAAWC,GACnB,UAIX,SAASQ,EAAaZ,EAAQC,GAI5B,IAHA,IACIK,EADAmB,GAAW,EAGRnB,EAAKN,EAAOO,QAAQ,CACzB,GAAU,KAAND,GAAamB,EAAU,CACzBxB,EAAME,SAAWC,EACjB,MAGFqB,EAAiB,KAANnB,EAGb,MAAO,UAGT,SAASQ,EAAcd,EAAQC,GAI7B,IAHA,IACIK,EADAmB,EAAW,EAGRnB,EAAKN,EAAOO,QAAQ,CACzB,GAAU,KAAND,GAAyB,GAAZmB,EAAe,CAC9BxB,EAAME,SAAWC,EACjB,MAGQ,KAANE,EAAWmB,IAA0B,KAANnB,IAAWmB,EAAW,GAG3D,MAAO,OAGT,MAAO,CACLC,WAAY,WACV,MAAO,CACLvB,SAAUC,EACVC,cAAc,EACdG,UAAU,IAGdmB,MAAO,SAAe3B,EAAQC,GAC5B,OAAID,EAAO4B,WAAmB,KACvB3B,EAAME,SAASH,EAAQC,IAEhC4B,YAAa,QAGjB1C,EAAW2C,WAAW,aAAc,OAvIlCC,CAAI7C,EAAoB"},"input":"(this[\"webpackJsonpfrontend\"] = this[\"webpackJsonpfrontend\"] || []).push([[104],{\n\n/***/ 383:\n/***/ (function(module, exports, __webpack_require__) {\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n//tcl mode by Ford_Lawnmower :: Based on Velocity mode by Steve O'Hara\n(function (mod) {\n  if (true) // CommonJS\n    mod(__webpack_require__(108));else {}\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"tcl\", function () {\n    function parseWords(str) {\n      var obj = {},\n          words = str.split(\" \");\n\n      for (var i = 0; i < words.length; ++i) {\n        obj[words[i]] = true;\n      }\n\n      return obj;\n    }\n\n    var keywords = parseWords(\"Tcl safe after append array auto_execok auto_import auto_load \" + \"auto_mkindex auto_mkindex_old auto_qualify auto_reset bgerror \" + \"binary break catch cd close concat continue dde eof encoding error \" + \"eval exec exit expr fblocked fconfigure fcopy file fileevent filename \" + \"filename flush for foreach format gets glob global history http if \" + \"incr info interp join lappend lindex linsert list llength load lrange \" + \"lreplace lsearch lset lsort memory msgcat namespace open package parray \" + \"pid pkg::create pkg_mkIndex proc puts pwd re_syntax read regex regexp \" + \"registry regsub rename resource return scan seek set socket source split \" + \"string subst switch tcl_endOfWord tcl_findLibrary tcl_startOfNextWord \" + \"tcl_wordBreakAfter tcl_startOfPreviousWord tcl_wordBreakBefore tcltest \" + \"tclvars tell time trace unknown unset update uplevel upvar variable \" + \"vwait\");\n    var functions = parseWords(\"if elseif else and not or eq ne in ni for foreach while switch\");\n    var isOperatorChar = /[+\\-*&%=<>!?^\\/\\|]/;\n\n    function chain(stream, state, f) {\n      state.tokenize = f;\n      return f(stream, state);\n    }\n\n    function tokenBase(stream, state) {\n      var beforeParams = state.beforeParams;\n      state.beforeParams = false;\n      var ch = stream.next();\n\n      if ((ch == '\"' || ch == \"'\") && state.inParams) {\n        return chain(stream, state, tokenString(ch));\n      } else if (/[\\[\\]{}\\(\\),;\\.]/.test(ch)) {\n        if (ch == \"(\" && beforeParams) state.inParams = true;else if (ch == \")\") state.inParams = false;\n        return null;\n      } else if (/\\d/.test(ch)) {\n        stream.eatWhile(/[\\w\\.]/);\n        return \"number\";\n      } else if (ch == \"#\") {\n        if (stream.eat(\"*\")) return chain(stream, state, tokenComment);\n        if (ch == \"#\" && stream.match(/ *\\[ *\\[/)) return chain(stream, state, tokenUnparsed);\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (ch == '\"') {\n        stream.skipTo(/\"/);\n        return \"comment\";\n      } else if (ch == \"$\") {\n        stream.eatWhile(/[$_a-z0-9A-Z\\.{:]/);\n        stream.eatWhile(/}/);\n        state.beforeParams = true;\n        return \"builtin\";\n      } else if (isOperatorChar.test(ch)) {\n        stream.eatWhile(isOperatorChar);\n        return \"comment\";\n      } else {\n        stream.eatWhile(/[\\w\\$_{}\\xa1-\\uffff]/);\n        var word = stream.current().toLowerCase();\n        if (keywords && keywords.propertyIsEnumerable(word)) return \"keyword\";\n\n        if (functions && functions.propertyIsEnumerable(word)) {\n          state.beforeParams = true;\n          return \"keyword\";\n        }\n\n        return null;\n      }\n    }\n\n    function tokenString(quote) {\n      return function (stream, state) {\n        var escaped = false,\n            next,\n            end = false;\n\n        while ((next = stream.next()) != null) {\n          if (next == quote && !escaped) {\n            end = true;\n            break;\n          }\n\n          escaped = !escaped && next == \"\\\\\";\n        }\n\n        if (end) state.tokenize = tokenBase;\n        return \"string\";\n      };\n    }\n\n    function tokenComment(stream, state) {\n      var maybeEnd = false,\n          ch;\n\n      while (ch = stream.next()) {\n        if (ch == \"#\" && maybeEnd) {\n          state.tokenize = tokenBase;\n          break;\n        }\n\n        maybeEnd = ch == \"*\";\n      }\n\n      return \"comment\";\n    }\n\n    function tokenUnparsed(stream, state) {\n      var maybeEnd = 0,\n          ch;\n\n      while (ch = stream.next()) {\n        if (ch == \"#\" && maybeEnd == 2) {\n          state.tokenize = tokenBase;\n          break;\n        }\n\n        if (ch == \"]\") maybeEnd++;else if (ch != \" \") maybeEnd = 0;\n      }\n\n      return \"meta\";\n    }\n\n    return {\n      startState: function startState() {\n        return {\n          tokenize: tokenBase,\n          beforeParams: false,\n          inParams: false\n        };\n      },\n      token: function token(stream, state) {\n        if (stream.eatSpace()) return null;\n        return state.tokenize(stream, state);\n      },\n      lineComment: \"#\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-tcl\", \"tcl\");\n});\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/mnt/Datengrab/python/Zero-tier/frontend/node_modules/codemirror/mode/tcl/tcl.js"],"names":["mod","require","CodeMirror","defineMode","parseWords","str","obj","words","split","i","length","keywords","functions","isOperatorChar","chain","stream","state","f","tokenize","tokenBase","beforeParams","ch","next","inParams","tokenString","test","eatWhile","eat","tokenComment","match","tokenUnparsed","skipToEnd","skipTo","word","current","toLowerCase","propertyIsEnumerable","quote","escaped","end","maybeEnd","startState","token","eatSpace","lineComment","defineMIME"],"mappings":"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","file":"x","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n//tcl mode by Ford_Lawnmower :: Based on Velocity mode by Steve O'Hara\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"tcl\", function() {\n  function parseWords(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n  var keywords = parseWords(\"Tcl safe after append array auto_execok auto_import auto_load \" +\n        \"auto_mkindex auto_mkindex_old auto_qualify auto_reset bgerror \" +\n        \"binary break catch cd close concat continue dde eof encoding error \" +\n        \"eval exec exit expr fblocked fconfigure fcopy file fileevent filename \" +\n        \"filename flush for foreach format gets glob global history http if \" +\n        \"incr info interp join lappend lindex linsert list llength load lrange \" +\n        \"lreplace lsearch lset lsort memory msgcat namespace open package parray \" +\n        \"pid pkg::create pkg_mkIndex proc puts pwd re_syntax read regex regexp \" +\n        \"registry regsub rename resource return scan seek set socket source split \" +\n        \"string subst switch tcl_endOfWord tcl_findLibrary tcl_startOfNextWord \" +\n        \"tcl_wordBreakAfter tcl_startOfPreviousWord tcl_wordBreakBefore tcltest \" +\n        \"tclvars tell time trace unknown unset update uplevel upvar variable \" +\n    \"vwait\");\n    var functions = parseWords(\"if elseif else and not or eq ne in ni for foreach while switch\");\n    var isOperatorChar = /[+\\-*&%=<>!?^\\/\\|]/;\n    function chain(stream, state, f) {\n      state.tokenize = f;\n      return f(stream, state);\n    }\n    function tokenBase(stream, state) {\n      var beforeParams = state.beforeParams;\n      state.beforeParams = false;\n      var ch = stream.next();\n      if ((ch == '\"' || ch == \"'\") && state.inParams) {\n        return chain(stream, state, tokenString(ch));\n      } else if (/[\\[\\]{}\\(\\),;\\.]/.test(ch)) {\n        if (ch == \"(\" && beforeParams) state.inParams = true;\n        else if (ch == \")\") state.inParams = false;\n          return null;\n      } else if (/\\d/.test(ch)) {\n        stream.eatWhile(/[\\w\\.]/);\n        return \"number\";\n      } else if (ch == \"#\") {\n        if (stream.eat(\"*\"))\n          return chain(stream, state, tokenComment);\n        if (ch == \"#\" && stream.match(/ *\\[ *\\[/))\n          return chain(stream, state, tokenUnparsed);\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (ch == '\"') {\n        stream.skipTo(/\"/);\n        return \"comment\";\n      } else if (ch == \"$\") {\n        stream.eatWhile(/[$_a-z0-9A-Z\\.{:]/);\n        stream.eatWhile(/}/);\n        state.beforeParams = true;\n        return \"builtin\";\n      } else if (isOperatorChar.test(ch)) {\n        stream.eatWhile(isOperatorChar);\n        return \"comment\";\n      } else {\n        stream.eatWhile(/[\\w\\$_{}\\xa1-\\uffff]/);\n        var word = stream.current().toLowerCase();\n        if (keywords && keywords.propertyIsEnumerable(word))\n          return \"keyword\";\n        if (functions && functions.propertyIsEnumerable(word)) {\n          state.beforeParams = true;\n          return \"keyword\";\n        }\n        return null;\n      }\n    }\n    function tokenString(quote) {\n      return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {\n          end = true;\n          break;\n        }\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (end) state.tokenize = tokenBase;\n        return \"string\";\n      };\n    }\n    function tokenComment(stream, state) {\n      var maybeEnd = false, ch;\n      while (ch = stream.next()) {\n        if (ch == \"#\" && maybeEnd) {\n          state.tokenize = tokenBase;\n          break;\n        }\n        maybeEnd = (ch == \"*\");\n      }\n      return \"comment\";\n    }\n    function tokenUnparsed(stream, state) {\n      var maybeEnd = 0, ch;\n      while (ch = stream.next()) {\n        if (ch == \"#\" && maybeEnd == 2) {\n          state.tokenize = tokenBase;\n          break;\n        }\n        if (ch == \"]\")\n          maybeEnd++;\n        else if (ch != \" \")\n          maybeEnd = 0;\n      }\n      return \"meta\";\n    }\n    return {\n      startState: function() {\n        return {\n          tokenize: tokenBase,\n          beforeParams: false,\n          inParams: false\n        };\n      },\n      token: function(stream, state) {\n        if (stream.eatSpace()) return null;\n        return state.tokenize(stream, state);\n      },\n      lineComment: \"#\"\n    };\n});\nCodeMirror.defineMIME(\"text/x-tcl\", \"tcl\");\n\n});\n"]}}