{"code":"(this.webpackJsonpfrontend=this.webpackJsonpfrontend||[]).push([[52],{325:function(e,n,t){!function(e){\"use strict\";e.defineMode(\"fcl\",(function(e){var n=e.indentUnit,t={term:!0,method:!0,accu:!0,rule:!0,then:!0,is:!0,and:!0,or:!0,if:!0,default:!0},r={var_input:!0,var_output:!0,fuzzify:!0,defuzzify:!0,function_block:!0,ruleblock:!0},o={end_ruleblock:!0,end_defuzzify:!0,end_function_block:!0,end_fuzzify:!0,end_var:!0},i={true:!0,false:!0,nan:!0,real:!0,min:!0,max:!0,cog:!0,cogs:!0},u=/[+\\-*&^%:=<>!|\\/]/;function a(e,n){var a=e.next();if(/[\\d\\.]/.test(a))return\".\"==a?e.match(/^[0-9]+([eE][\\-+]?[0-9]+)?/):\"0\"==a?e.match(/^[xX][0-9a-fA-F]+/)||e.match(/^0[0-7]+/):e.match(/^[0-9]*\\.?[0-9]*([eE][\\-+]?[0-9]+)?/),\"number\";if(\"/\"==a||\"(\"==a){if(e.eat(\"*\"))return n.tokenize=c,c(e,n);if(e.eat(\"/\"))return e.skipToEnd(),\"comment\"}if(u.test(a))return e.eatWhile(u),\"operator\";e.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);var l=e.current().toLowerCase();return t.propertyIsEnumerable(l)||r.propertyIsEnumerable(l)||o.propertyIsEnumerable(l)?\"keyword\":i.propertyIsEnumerable(l)?\"atom\":\"variable\"}function c(e,n){for(var t,r=!1;t=e.next();){if((\"/\"==t||\")\"==t)&&r){n.tokenize=a;break}r=\"*\"==t}return\"comment\"}function l(e,n,t,r,o){this.indented=e,this.column=n,this.type=t,this.align=r,this.prev=o}function f(e,n,t){return e.context=new l(e.indented,n,t,null,e.context)}function d(e){if(e.context.prev)return\"end_block\"==e.context.type&&(e.indented=e.context.indented),e.context=e.context.prev}return{startState:function(e){return{tokenize:null,context:new l((e||0)-n,0,\"top\",!1),indented:0,startOfLine:!0}},token:function(e,n){var t=n.context;if(e.sol()&&(null==t.align&&(t.align=!1),n.indented=e.indentation(),n.startOfLine=!0),e.eatSpace())return null;var i=(n.tokenize||a)(e,n);if(\"comment\"==i)return i;null==t.align&&(t.align=!0);var u=e.current().toLowerCase();return r.propertyIsEnumerable(u)?f(n,e.column(),\"end_block\"):o.propertyIsEnumerable(u)&&d(n),n.startOfLine=!1,i},indent:function(e,t){if(e.tokenize!=a&&null!=e.tokenize)return 0;var r=e.context,i=o.propertyIsEnumerable(t);return r.align?r.column+(i?0:1):r.indented+(i?0:n)},electricChars:\"ryk\",fold:\"brace\",blockCommentStart:\"(*\",blockCommentEnd:\"*)\",lineComment:\"//\"}})),e.defineMIME(\"text/x-fcl\",\"fcl\")}(t(108))}}]);","name":"static/js/52.e155bab8.chunk.js","map":{"version":3,"sources":["static/js/52.e155bab8.chunk.js"],"names":["this","push","module","exports","__webpack_require__","CodeMirror","defineMode","config","indentUnit","keywords","term","method","accu","rule","then","is","and","or","if","default","start_blocks","var_input","var_output","fuzzify","defuzzify","function_block","ruleblock","end_blocks","end_ruleblock","end_defuzzify","end_function_block","end_fuzzify","end_var","atoms","true","false","nan","real","min","max","cog","cogs","isOperatorChar","tokenBase","stream","state","ch","next","test","match","eat","tokenize","tokenComment","skipToEnd","eatWhile","cur","current","toLowerCase","propertyIsEnumerable","maybeEnd","Context","indented","column","type","align","prev","pushContext","col","context","popContext","startState","basecolumn","startOfLine","token","ctx","sol","indentation","eatSpace","style","indent","textAfter","closing","electricChars","fold","blockCommentStart","blockCommentEnd","lineComment","defineMIME","mod"],"mappings":"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"},"input":"(this[\"webpackJsonpfrontend\"] = this[\"webpackJsonpfrontend\"] || []).push([[52],{\n\n/***/ 325:\n/***/ (function(module, exports, __webpack_require__) {\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (true) // CommonJS\n    mod(__webpack_require__(108));else {}\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"fcl\", function (config) {\n    var indentUnit = config.indentUnit;\n    var keywords = {\n      \"term\": true,\n      \"method\": true,\n      \"accu\": true,\n      \"rule\": true,\n      \"then\": true,\n      \"is\": true,\n      \"and\": true,\n      \"or\": true,\n      \"if\": true,\n      \"default\": true\n    };\n    var start_blocks = {\n      \"var_input\": true,\n      \"var_output\": true,\n      \"fuzzify\": true,\n      \"defuzzify\": true,\n      \"function_block\": true,\n      \"ruleblock\": true\n    };\n    var end_blocks = {\n      \"end_ruleblock\": true,\n      \"end_defuzzify\": true,\n      \"end_function_block\": true,\n      \"end_fuzzify\": true,\n      \"end_var\": true\n    };\n    var atoms = {\n      \"true\": true,\n      \"false\": true,\n      \"nan\": true,\n      \"real\": true,\n      \"min\": true,\n      \"max\": true,\n      \"cog\": true,\n      \"cogs\": true\n    };\n    var isOperatorChar = /[+\\-*&^%:=<>!|\\/]/;\n\n    function tokenBase(stream, state) {\n      var ch = stream.next();\n\n      if (/[\\d\\.]/.test(ch)) {\n        if (ch == \".\") {\n          stream.match(/^[0-9]+([eE][\\-+]?[0-9]+)?/);\n        } else if (ch == \"0\") {\n          stream.match(/^[xX][0-9a-fA-F]+/) || stream.match(/^0[0-7]+/);\n        } else {\n          stream.match(/^[0-9]*\\.?[0-9]*([eE][\\-+]?[0-9]+)?/);\n        }\n\n        return \"number\";\n      }\n\n      if (ch == \"/\" || ch == \"(\") {\n        if (stream.eat(\"*\")) {\n          state.tokenize = tokenComment;\n          return tokenComment(stream, state);\n        }\n\n        if (stream.eat(\"/\")) {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n      }\n\n      if (isOperatorChar.test(ch)) {\n        stream.eatWhile(isOperatorChar);\n        return \"operator\";\n      }\n\n      stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n      var cur = stream.current().toLowerCase();\n\n      if (keywords.propertyIsEnumerable(cur) || start_blocks.propertyIsEnumerable(cur) || end_blocks.propertyIsEnumerable(cur)) {\n        return \"keyword\";\n      }\n\n      if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n      return \"variable\";\n    }\n\n    function tokenComment(stream, state) {\n      var maybeEnd = false,\n          ch;\n\n      while (ch = stream.next()) {\n        if ((ch == \"/\" || ch == \")\") && maybeEnd) {\n          state.tokenize = tokenBase;\n          break;\n        }\n\n        maybeEnd = ch == \"*\";\n      }\n\n      return \"comment\";\n    }\n\n    function Context(indented, column, type, align, prev) {\n      this.indented = indented;\n      this.column = column;\n      this.type = type;\n      this.align = align;\n      this.prev = prev;\n    }\n\n    function pushContext(state, col, type) {\n      return state.context = new Context(state.indented, col, type, null, state.context);\n    }\n\n    function popContext(state) {\n      if (!state.context.prev) return;\n      var t = state.context.type;\n      if (t == \"end_block\") state.indented = state.context.indented;\n      return state.context = state.context.prev;\n    } // Interface\n\n\n    return {\n      startState: function startState(basecolumn) {\n        return {\n          tokenize: null,\n          context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", false),\n          indented: 0,\n          startOfLine: true\n        };\n      },\n      token: function token(stream, state) {\n        var ctx = state.context;\n\n        if (stream.sol()) {\n          if (ctx.align == null) ctx.align = false;\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n        }\n\n        if (stream.eatSpace()) return null;\n        var style = (state.tokenize || tokenBase)(stream, state);\n        if (style == \"comment\") return style;\n        if (ctx.align == null) ctx.align = true;\n        var cur = stream.current().toLowerCase();\n        if (start_blocks.propertyIsEnumerable(cur)) pushContext(state, stream.column(), \"end_block\");else if (end_blocks.propertyIsEnumerable(cur)) popContext(state);\n        state.startOfLine = false;\n        return style;\n      },\n      indent: function indent(state, textAfter) {\n        if (state.tokenize != tokenBase && state.tokenize != null) return 0;\n        var ctx = state.context;\n        var closing = end_blocks.propertyIsEnumerable(textAfter);\n        if (ctx.align) return ctx.column + (closing ? 0 : 1);else return ctx.indented + (closing ? 0 : indentUnit);\n      },\n      electricChars: \"ryk\",\n      fold: \"brace\",\n      blockCommentStart: \"(*\",\n      blockCommentEnd: \"*)\",\n      lineComment: \"//\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-fcl\", \"fcl\");\n});\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/mnt/Datengrab/python/Zero-tier/frontend/node_modules/codemirror/mode/fcl/fcl.js"],"names":["mod","require","CodeMirror","defineMode","config","indentUnit","keywords","start_blocks","end_blocks","atoms","isOperatorChar","tokenBase","stream","state","ch","next","test","match","eat","tokenize","tokenComment","skipToEnd","eatWhile","cur","current","toLowerCase","propertyIsEnumerable","maybeEnd","Context","indented","column","type","align","prev","pushContext","col","context","popContext","t","startState","basecolumn","startOfLine","token","ctx","sol","indentation","eatSpace","style","indent","textAfter","closing","electricChars","fold","blockCommentStart","blockCommentEnd","lineComment","defineMIME"],"mappings":"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","file":"x","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"fcl\", function(config) {\n  var indentUnit = config.indentUnit;\n\n  var keywords = {\n      \"term\": true,\n      \"method\": true, \"accu\": true,\n      \"rule\": true, \"then\": true, \"is\": true, \"and\": true, \"or\": true,\n      \"if\": true, \"default\": true\n  };\n\n  var start_blocks = {\n      \"var_input\": true,\n      \"var_output\": true,\n      \"fuzzify\": true,\n      \"defuzzify\": true,\n      \"function_block\": true,\n      \"ruleblock\": true\n  };\n\n  var end_blocks = {\n      \"end_ruleblock\": true,\n      \"end_defuzzify\": true,\n      \"end_function_block\": true,\n      \"end_fuzzify\": true,\n      \"end_var\": true\n  };\n\n  var atoms = {\n      \"true\": true, \"false\": true, \"nan\": true,\n      \"real\": true, \"min\": true, \"max\": true, \"cog\": true, \"cogs\": true\n  };\n\n  var isOperatorChar = /[+\\-*&^%:=<>!|\\/]/;\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n\n    if (/[\\d\\.]/.test(ch)) {\n      if (ch == \".\") {\n        stream.match(/^[0-9]+([eE][\\-+]?[0-9]+)?/);\n      } else if (ch == \"0\") {\n        stream.match(/^[xX][0-9a-fA-F]+/) || stream.match(/^0[0-7]+/);\n      } else {\n        stream.match(/^[0-9]*\\.?[0-9]*([eE][\\-+]?[0-9]+)?/);\n      }\n      return \"number\";\n    }\n\n    if (ch == \"/\" || ch == \"(\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      }\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (isOperatorChar.test(ch)) {\n      stream.eatWhile(isOperatorChar);\n      return \"operator\";\n    }\n    stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n\n    var cur = stream.current().toLowerCase();\n    if (keywords.propertyIsEnumerable(cur) ||\n        start_blocks.propertyIsEnumerable(cur) ||\n        end_blocks.propertyIsEnumerable(cur)) {\n      return \"keyword\";\n    }\n    if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n    return \"variable\";\n  }\n\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if ((ch == \"/\" || ch == \")\") && maybeEnd) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return \"comment\";\n  }\n\n  function Context(indented, column, type, align, prev) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.align = align;\n    this.prev = prev;\n  }\n\n  function pushContext(state, col, type) {\n    return state.context = new Context(state.indented, col, type, null, state.context);\n  }\n\n  function popContext(state) {\n    if (!state.context.prev) return;\n    var t = state.context.type;\n    if (t == \"end_block\")\n      state.indented = state.context.indented;\n    return state.context = state.context.prev;\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n      return {\n        tokenize: null,\n        context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", false),\n        indented: 0,\n        startOfLine: true\n      };\n    },\n\n    token: function(stream, state) {\n        var ctx = state.context;\n        if (stream.sol()) {\n            if (ctx.align == null) ctx.align = false;\n            state.indented = stream.indentation();\n            state.startOfLine = true;\n        }\n        if (stream.eatSpace()) return null;\n\n        var style = (state.tokenize || tokenBase)(stream, state);\n        if (style == \"comment\") return style;\n        if (ctx.align == null) ctx.align = true;\n\n        var cur = stream.current().toLowerCase();\n\n        if (start_blocks.propertyIsEnumerable(cur)) pushContext(state, stream.column(), \"end_block\");\n        else if (end_blocks.propertyIsEnumerable(cur))  popContext(state);\n\n        state.startOfLine = false;\n        return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase && state.tokenize != null) return 0;\n      var ctx = state.context;\n\n      var closing = end_blocks.propertyIsEnumerable(textAfter);\n      if (ctx.align) return ctx.column + (closing ? 0 : 1);\n      else return ctx.indented + (closing ? 0 : indentUnit);\n    },\n\n    electricChars: \"ryk\",\n    fold: \"brace\",\n    blockCommentStart: \"(*\",\n    blockCommentEnd: \"*)\",\n    lineComment: \"//\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-fcl\", \"fcl\");\n});\n"]}}