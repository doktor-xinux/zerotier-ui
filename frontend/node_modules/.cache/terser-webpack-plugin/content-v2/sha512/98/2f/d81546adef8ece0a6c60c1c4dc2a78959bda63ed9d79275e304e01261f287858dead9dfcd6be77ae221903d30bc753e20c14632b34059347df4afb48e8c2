{"code":"(this.webpackJsonpfrontend=this.webpackJsonpfrontend||[]).push([[26,59],{293:function(e,t,n){!function(e){\"use strict\";e.defineMode(\"haskell\",(function(e,t){function n(e,t,n){return t(n),n(e,t)}var r=/[a-z_]/,a=/[A-Z]/,i=/\\d/,o=/[0-9A-Fa-f]/,l=/[0-7]/,u=/[a-z_A-Z0-9'\\xa1-\\uffff]/,s=/[-!#$%&*+.\\/<=>?@\\\\^|~:]/,f=/[(),;[\\]`{}]/,c=/[ \\t\\v\\f]/;function d(e,t){if(e.eatWhile(c))return null;var d=e.next();if(f.test(d)){if(\"{\"==d&&e.eat(\"-\")){var p=\"comment\";return e.eat(\"#\")&&(p=\"meta\"),n(e,t,m(p,1))}return null}if(\"'\"==d)return e.eat(\"\\\\\"),e.next(),e.eat(\"'\")?\"string\":\"string error\";if('\"'==d)return n(e,t,h);if(a.test(d))return e.eatWhile(u),e.eat(\".\")?\"qualifier\":\"variable-2\";if(r.test(d))return e.eatWhile(u),\"variable\";if(i.test(d)){if(\"0\"==d){if(e.eat(/[xX]/))return e.eatWhile(o),\"integer\";if(e.eat(/[oO]/))return e.eatWhile(l),\"number\"}return e.eatWhile(i),p=\"number\",e.match(/^\\.\\d+/)&&(p=\"number\"),e.eat(/[eE]/)&&(p=\"number\",e.eat(/[-+]/),e.eatWhile(i)),p}return\".\"==d&&e.eat(\".\")?\"keyword\":s.test(d)?\"-\"==d&&e.eat(/-/)&&(e.eatWhile(/-/),!e.eat(s))?(e.skipToEnd(),\"comment\"):(p=\"variable\",\":\"==d&&(p=\"variable-2\"),e.eatWhile(s),p):\"error\"}function m(e,t){return 0==t?d:function(n,r){for(var a=t;!n.eol();){var i=n.next();if(\"{\"==i&&n.eat(\"-\"))++a;else if(\"-\"==i&&n.eat(\"}\")&&0==--a)return r(d),e}return r(m(e,a)),e}}function h(e,t){for(;!e.eol();){var n=e.next();if('\"'==n)return t(d),\"string\";if(\"\\\\\"==n){if(e.eol()||e.eat(c))return t(p),\"string\";e.eat(\"&\")||e.next()}}return t(d),\"string error\"}function p(e,t){return e.eat(\"\\\\\")?n(e,t,h):(e.next(),t(d),\"error\")}var g=function(){var e={};function n(t){return function(){for(var n=0;n<arguments.length;n++)e[arguments[n]]=t}}n(\"keyword\")(\"case\",\"class\",\"data\",\"default\",\"deriving\",\"do\",\"else\",\"foreign\",\"if\",\"import\",\"in\",\"infix\",\"infixl\",\"infixr\",\"instance\",\"let\",\"module\",\"newtype\",\"of\",\"then\",\"type\",\"where\",\"_\"),n(\"keyword\")(\"..\",\":\",\"::\",\"=\",\"\\\\\",\"<-\",\"->\",\"@\",\"~\",\"=>\"),n(\"builtin\")(\"!!\",\"$!\",\"$\",\"&&\",\"+\",\"++\",\"-\",\".\",\"/\",\"/=\",\"<\",\"<*\",\"<=\",\"<$>\",\"<*>\",\"=<<\",\"==\",\">\",\">=\",\">>\",\">>=\",\"^\",\"^^\",\"||\",\"*\",\"*>\",\"**\"),n(\"builtin\")(\"Applicative\",\"Bool\",\"Bounded\",\"Char\",\"Double\",\"EQ\",\"Either\",\"Enum\",\"Eq\",\"False\",\"FilePath\",\"Float\",\"Floating\",\"Fractional\",\"Functor\",\"GT\",\"IO\",\"IOError\",\"Int\",\"Integer\",\"Integral\",\"Just\",\"LT\",\"Left\",\"Maybe\",\"Monad\",\"Nothing\",\"Num\",\"Ord\",\"Ordering\",\"Rational\",\"Read\",\"ReadS\",\"Real\",\"RealFloat\",\"RealFrac\",\"Right\",\"Show\",\"ShowS\",\"String\",\"True\"),n(\"builtin\")(\"abs\",\"acos\",\"acosh\",\"all\",\"and\",\"any\",\"appendFile\",\"asTypeOf\",\"asin\",\"asinh\",\"atan\",\"atan2\",\"atanh\",\"break\",\"catch\",\"ceiling\",\"compare\",\"concat\",\"concatMap\",\"const\",\"cos\",\"cosh\",\"curry\",\"cycle\",\"decodeFloat\",\"div\",\"divMod\",\"drop\",\"dropWhile\",\"either\",\"elem\",\"encodeFloat\",\"enumFrom\",\"enumFromThen\",\"enumFromThenTo\",\"enumFromTo\",\"error\",\"even\",\"exp\",\"exponent\",\"fail\",\"filter\",\"flip\",\"floatDigits\",\"floatRadix\",\"floatRange\",\"floor\",\"fmap\",\"foldl\",\"foldl1\",\"foldr\",\"foldr1\",\"fromEnum\",\"fromInteger\",\"fromIntegral\",\"fromRational\",\"fst\",\"gcd\",\"getChar\",\"getContents\",\"getLine\",\"head\",\"id\",\"init\",\"interact\",\"ioError\",\"isDenormalized\",\"isIEEE\",\"isInfinite\",\"isNaN\",\"isNegativeZero\",\"iterate\",\"last\",\"lcm\",\"length\",\"lex\",\"lines\",\"log\",\"logBase\",\"lookup\",\"map\",\"mapM\",\"mapM_\",\"max\",\"maxBound\",\"maximum\",\"maybe\",\"min\",\"minBound\",\"minimum\",\"mod\",\"negate\",\"not\",\"notElem\",\"null\",\"odd\",\"or\",\"otherwise\",\"pi\",\"pred\",\"print\",\"product\",\"properFraction\",\"pure\",\"putChar\",\"putStr\",\"putStrLn\",\"quot\",\"quotRem\",\"read\",\"readFile\",\"readIO\",\"readList\",\"readLn\",\"readParen\",\"reads\",\"readsPrec\",\"realToFrac\",\"recip\",\"rem\",\"repeat\",\"replicate\",\"return\",\"reverse\",\"round\",\"scaleFloat\",\"scanl\",\"scanl1\",\"scanr\",\"scanr1\",\"seq\",\"sequence\",\"sequence_\",\"show\",\"showChar\",\"showList\",\"showParen\",\"showString\",\"shows\",\"showsPrec\",\"significand\",\"signum\",\"sin\",\"sinh\",\"snd\",\"span\",\"splitAt\",\"sqrt\",\"subtract\",\"succ\",\"sum\",\"tail\",\"take\",\"takeWhile\",\"tan\",\"tanh\",\"toEnum\",\"toInteger\",\"toRational\",\"truncate\",\"uncurry\",\"undefined\",\"unlines\",\"until\",\"unwords\",\"unzip\",\"unzip3\",\"userError\",\"words\",\"writeFile\",\"zip\",\"zip3\",\"zipWith\",\"zipWith3\");var r=t.overrideKeywords;if(r)for(var a in r)r.hasOwnProperty(a)&&(e[a]=r[a]);return e}();return{startState:function(){return{f:d}},copyState:function(e){return{f:e.f}},token:function(e,t){var n=t.f(e,(function(e){t.f=e})),r=e.current();return g.hasOwnProperty(r)?g[r]:n},blockCommentStart:\"{-\",blockCommentEnd:\"-}\",lineComment:\"--\"}})),e.defineMIME(\"text/x-haskell\",\"haskell\")}(n(108))},334:function(e,t,n){!function(e){\"use strict\";e.defineMode(\"haskell-literate\",(function(t,n){var r=e.getMode(t,n&&n.base||\"haskell\");return{startState:function(){return{inCode:!1,baseState:e.startState(r)}},token:function(e,t){return e.sol()&&(t.inCode=e.eat(\">\"))?\"meta\":t.inCode?r.token(e,t.baseState):(e.skipToEnd(),\"comment\")},innerMode:function(e){return e.inCode?{state:e.baseState,mode:r}:null}}}),\"haskell\"),e.defineMIME(\"text/x-literate-haskell\",\"haskell-literate\")}(n(108),n(293))}}]);","name":"static/js/26.426bffa1.chunk.js","map":{"version":3,"sources":["static/js/26.426bffa1.chunk.js"],"names":["this","push","module","exports","__webpack_require__","CodeMirror","defineMode","_config","modeConfig","switchState","source","setState","f","smallRE","largeRE","digitRE","hexitRE","octitRE","idRE","symbolRE","specialRE","whiteCharRE","normal","eatWhile","ch","next","test","eat","t","ncomment","stringLiteral","match","skipToEnd","type","nest","currNest","eol","stringGap","wellKnownWords","wkw","setType","i","arguments","length","override","overrideKeywords","word","hasOwnProperty","startState","copyState","s","token","stream","state","w","current","blockCommentStart","blockCommentEnd","lineComment","defineMIME","mod","config","parserConfig","baseMode","getMode","base","inCode","baseState","sol","innerMode","mode"],"mappings":"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"},"input":"(this[\"webpackJsonpfrontend\"] = this[\"webpackJsonpfrontend\"] || []).push([[26,59],{\n\n/***/ 293:\n/***/ (function(module, exports, __webpack_require__) {\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (true) // CommonJS\n    mod(__webpack_require__(108));else {}\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"haskell\", function (_config, modeConfig) {\n    function switchState(source, setState, f) {\n      setState(f);\n      return f(source, setState);\n    } // These should all be Unicode extended, as per the Haskell 2010 report\n\n\n    var smallRE = /[a-z_]/;\n    var largeRE = /[A-Z]/;\n    var digitRE = /\\d/;\n    var hexitRE = /[0-9A-Fa-f]/;\n    var octitRE = /[0-7]/;\n    var idRE = /[a-z_A-Z0-9'\\xa1-\\uffff]/;\n    var symbolRE = /[-!#$%&*+.\\/<=>?@\\\\^|~:]/;\n    var specialRE = /[(),;[\\]`{}]/;\n    var whiteCharRE = /[ \\t\\v\\f]/; // newlines are handled in tokenizer\n\n    function normal(source, setState) {\n      if (source.eatWhile(whiteCharRE)) {\n        return null;\n      }\n\n      var ch = source.next();\n\n      if (specialRE.test(ch)) {\n        if (ch == '{' && source.eat('-')) {\n          var t = \"comment\";\n\n          if (source.eat('#')) {\n            t = \"meta\";\n          }\n\n          return switchState(source, setState, ncomment(t, 1));\n        }\n\n        return null;\n      }\n\n      if (ch == '\\'') {\n        if (source.eat('\\\\')) {\n          source.next(); // should handle other escapes here\n        } else {\n          source.next();\n        }\n\n        if (source.eat('\\'')) {\n          return \"string\";\n        }\n\n        return \"string error\";\n      }\n\n      if (ch == '\"') {\n        return switchState(source, setState, stringLiteral);\n      }\n\n      if (largeRE.test(ch)) {\n        source.eatWhile(idRE);\n\n        if (source.eat('.')) {\n          return \"qualifier\";\n        }\n\n        return \"variable-2\";\n      }\n\n      if (smallRE.test(ch)) {\n        source.eatWhile(idRE);\n        return \"variable\";\n      }\n\n      if (digitRE.test(ch)) {\n        if (ch == '0') {\n          if (source.eat(/[xX]/)) {\n            source.eatWhile(hexitRE); // should require at least 1\n\n            return \"integer\";\n          }\n\n          if (source.eat(/[oO]/)) {\n            source.eatWhile(octitRE); // should require at least 1\n\n            return \"number\";\n          }\n        }\n\n        source.eatWhile(digitRE);\n        var t = \"number\";\n\n        if (source.match(/^\\.\\d+/)) {\n          t = \"number\";\n        }\n\n        if (source.eat(/[eE]/)) {\n          t = \"number\";\n          source.eat(/[-+]/);\n          source.eatWhile(digitRE); // should require at least 1\n        }\n\n        return t;\n      }\n\n      if (ch == \".\" && source.eat(\".\")) return \"keyword\";\n\n      if (symbolRE.test(ch)) {\n        if (ch == '-' && source.eat(/-/)) {\n          source.eatWhile(/-/);\n\n          if (!source.eat(symbolRE)) {\n            source.skipToEnd();\n            return \"comment\";\n          }\n        }\n\n        var t = \"variable\";\n\n        if (ch == ':') {\n          t = \"variable-2\";\n        }\n\n        source.eatWhile(symbolRE);\n        return t;\n      }\n\n      return \"error\";\n    }\n\n    function ncomment(type, nest) {\n      if (nest == 0) {\n        return normal;\n      }\n\n      return function (source, setState) {\n        var currNest = nest;\n\n        while (!source.eol()) {\n          var ch = source.next();\n\n          if (ch == '{' && source.eat('-')) {\n            ++currNest;\n          } else if (ch == '-' && source.eat('}')) {\n            --currNest;\n\n            if (currNest == 0) {\n              setState(normal);\n              return type;\n            }\n          }\n        }\n\n        setState(ncomment(type, currNest));\n        return type;\n      };\n    }\n\n    function stringLiteral(source, setState) {\n      while (!source.eol()) {\n        var ch = source.next();\n\n        if (ch == '\"') {\n          setState(normal);\n          return \"string\";\n        }\n\n        if (ch == '\\\\') {\n          if (source.eol() || source.eat(whiteCharRE)) {\n            setState(stringGap);\n            return \"string\";\n          }\n\n          if (source.eat('&')) {} else {\n            source.next(); // should handle other escapes here\n          }\n        }\n      }\n\n      setState(normal);\n      return \"string error\";\n    }\n\n    function stringGap(source, setState) {\n      if (source.eat('\\\\')) {\n        return switchState(source, setState, stringLiteral);\n      }\n\n      source.next();\n      setState(normal);\n      return \"error\";\n    }\n\n    var wellKnownWords = function () {\n      var wkw = {};\n\n      function setType(t) {\n        return function () {\n          for (var i = 0; i < arguments.length; i++) {\n            wkw[arguments[i]] = t;\n          }\n        };\n      }\n\n      setType(\"keyword\")(\"case\", \"class\", \"data\", \"default\", \"deriving\", \"do\", \"else\", \"foreign\", \"if\", \"import\", \"in\", \"infix\", \"infixl\", \"infixr\", \"instance\", \"let\", \"module\", \"newtype\", \"of\", \"then\", \"type\", \"where\", \"_\");\n      setType(\"keyword\")(\"\\.\\.\", \":\", \"::\", \"=\", \"\\\\\", \"<-\", \"->\", \"@\", \"~\", \"=>\");\n      setType(\"builtin\")(\"!!\", \"$!\", \"$\", \"&&\", \"+\", \"++\", \"-\", \".\", \"/\", \"/=\", \"<\", \"<*\", \"<=\", \"<$>\", \"<*>\", \"=<<\", \"==\", \">\", \">=\", \">>\", \">>=\", \"^\", \"^^\", \"||\", \"*\", \"*>\", \"**\");\n      setType(\"builtin\")(\"Applicative\", \"Bool\", \"Bounded\", \"Char\", \"Double\", \"EQ\", \"Either\", \"Enum\", \"Eq\", \"False\", \"FilePath\", \"Float\", \"Floating\", \"Fractional\", \"Functor\", \"GT\", \"IO\", \"IOError\", \"Int\", \"Integer\", \"Integral\", \"Just\", \"LT\", \"Left\", \"Maybe\", \"Monad\", \"Nothing\", \"Num\", \"Ord\", \"Ordering\", \"Rational\", \"Read\", \"ReadS\", \"Real\", \"RealFloat\", \"RealFrac\", \"Right\", \"Show\", \"ShowS\", \"String\", \"True\");\n      setType(\"builtin\")(\"abs\", \"acos\", \"acosh\", \"all\", \"and\", \"any\", \"appendFile\", \"asTypeOf\", \"asin\", \"asinh\", \"atan\", \"atan2\", \"atanh\", \"break\", \"catch\", \"ceiling\", \"compare\", \"concat\", \"concatMap\", \"const\", \"cos\", \"cosh\", \"curry\", \"cycle\", \"decodeFloat\", \"div\", \"divMod\", \"drop\", \"dropWhile\", \"either\", \"elem\", \"encodeFloat\", \"enumFrom\", \"enumFromThen\", \"enumFromThenTo\", \"enumFromTo\", \"error\", \"even\", \"exp\", \"exponent\", \"fail\", \"filter\", \"flip\", \"floatDigits\", \"floatRadix\", \"floatRange\", \"floor\", \"fmap\", \"foldl\", \"foldl1\", \"foldr\", \"foldr1\", \"fromEnum\", \"fromInteger\", \"fromIntegral\", \"fromRational\", \"fst\", \"gcd\", \"getChar\", \"getContents\", \"getLine\", \"head\", \"id\", \"init\", \"interact\", \"ioError\", \"isDenormalized\", \"isIEEE\", \"isInfinite\", \"isNaN\", \"isNegativeZero\", \"iterate\", \"last\", \"lcm\", \"length\", \"lex\", \"lines\", \"log\", \"logBase\", \"lookup\", \"map\", \"mapM\", \"mapM_\", \"max\", \"maxBound\", \"maximum\", \"maybe\", \"min\", \"minBound\", \"minimum\", \"mod\", \"negate\", \"not\", \"notElem\", \"null\", \"odd\", \"or\", \"otherwise\", \"pi\", \"pred\", \"print\", \"product\", \"properFraction\", \"pure\", \"putChar\", \"putStr\", \"putStrLn\", \"quot\", \"quotRem\", \"read\", \"readFile\", \"readIO\", \"readList\", \"readLn\", \"readParen\", \"reads\", \"readsPrec\", \"realToFrac\", \"recip\", \"rem\", \"repeat\", \"replicate\", \"return\", \"reverse\", \"round\", \"scaleFloat\", \"scanl\", \"scanl1\", \"scanr\", \"scanr1\", \"seq\", \"sequence\", \"sequence_\", \"show\", \"showChar\", \"showList\", \"showParen\", \"showString\", \"shows\", \"showsPrec\", \"significand\", \"signum\", \"sin\", \"sinh\", \"snd\", \"span\", \"splitAt\", \"sqrt\", \"subtract\", \"succ\", \"sum\", \"tail\", \"take\", \"takeWhile\", \"tan\", \"tanh\", \"toEnum\", \"toInteger\", \"toRational\", \"truncate\", \"uncurry\", \"undefined\", \"unlines\", \"until\", \"unwords\", \"unzip\", \"unzip3\", \"userError\", \"words\", \"writeFile\", \"zip\", \"zip3\", \"zipWith\", \"zipWith3\");\n      var override = modeConfig.overrideKeywords;\n      if (override) for (var word in override) {\n        if (override.hasOwnProperty(word)) wkw[word] = override[word];\n      }\n      return wkw;\n    }();\n\n    return {\n      startState: function startState() {\n        return {\n          f: normal\n        };\n      },\n      copyState: function copyState(s) {\n        return {\n          f: s.f\n        };\n      },\n      token: function token(stream, state) {\n        var t = state.f(stream, function (s) {\n          state.f = s;\n        });\n        var w = stream.current();\n        return wellKnownWords.hasOwnProperty(w) ? wellKnownWords[w] : t;\n      },\n      blockCommentStart: \"{-\",\n      blockCommentEnd: \"-}\",\n      lineComment: \"--\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-haskell\", \"haskell\");\n});\n\n/***/ }),\n\n/***/ 334:\n/***/ (function(module, exports, __webpack_require__) {\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (true) // CommonJS\n    mod(__webpack_require__(108), __webpack_require__(293));else {}\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"haskell-literate\", function (config, parserConfig) {\n    var baseMode = CodeMirror.getMode(config, parserConfig && parserConfig.base || \"haskell\");\n    return {\n      startState: function startState() {\n        return {\n          inCode: false,\n          baseState: CodeMirror.startState(baseMode)\n        };\n      },\n      token: function token(stream, state) {\n        if (stream.sol()) {\n          if (state.inCode = stream.eat(\">\")) return \"meta\";\n        }\n\n        if (state.inCode) {\n          return baseMode.token(stream, state.baseState);\n        } else {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n      },\n      innerMode: function innerMode(state) {\n        return state.inCode ? {\n          state: state.baseState,\n          mode: baseMode\n        } : null;\n      }\n    };\n  }, \"haskell\");\n  CodeMirror.defineMIME(\"text/x-literate-haskell\", \"haskell-literate\");\n});\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/mnt/Datengrab/python/Zero-tier/frontend/node_modules/codemirror/mode/haskell/haskell.js","/mnt/Datengrab/python/Zero-tier/frontend/node_modules/codemirror/mode/haskell-literate/haskell-literate.js"],"names":["mod","require","CodeMirror","defineMode","_config","modeConfig","switchState","source","setState","f","smallRE","largeRE","digitRE","hexitRE","octitRE","idRE","symbolRE","specialRE","whiteCharRE","normal","eatWhile","ch","next","test","eat","t","ncomment","stringLiteral","match","skipToEnd","type","nest","currNest","eol","stringGap","wellKnownWords","wkw","setType","i","arguments","length","override","overrideKeywords","word","hasOwnProperty","startState","copyState","s","token","stream","state","w","current","blockCommentStart","blockCommentEnd","lineComment","defineMIME","config","parserConfig","baseMode","getMode","base","inCode","baseState","sol","innerMode","mode"],"mappings":"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","file":"x","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"haskell\", function(_config, modeConfig) {\n\n  function switchState(source, setState, f) {\n    setState(f);\n    return f(source, setState);\n  }\n\n  // These should all be Unicode extended, as per the Haskell 2010 report\n  var smallRE = /[a-z_]/;\n  var largeRE = /[A-Z]/;\n  var digitRE = /\\d/;\n  var hexitRE = /[0-9A-Fa-f]/;\n  var octitRE = /[0-7]/;\n  var idRE = /[a-z_A-Z0-9'\\xa1-\\uffff]/;\n  var symbolRE = /[-!#$%&*+.\\/<=>?@\\\\^|~:]/;\n  var specialRE = /[(),;[\\]`{}]/;\n  var whiteCharRE = /[ \\t\\v\\f]/; // newlines are handled in tokenizer\n\n  function normal(source, setState) {\n    if (source.eatWhile(whiteCharRE)) {\n      return null;\n    }\n\n    var ch = source.next();\n    if (specialRE.test(ch)) {\n      if (ch == '{' && source.eat('-')) {\n        var t = \"comment\";\n        if (source.eat('#')) {\n          t = \"meta\";\n        }\n        return switchState(source, setState, ncomment(t, 1));\n      }\n      return null;\n    }\n\n    if (ch == '\\'') {\n      if (source.eat('\\\\')) {\n        source.next();  // should handle other escapes here\n      }\n      else {\n        source.next();\n      }\n      if (source.eat('\\'')) {\n        return \"string\";\n      }\n      return \"string error\";\n    }\n\n    if (ch == '\"') {\n      return switchState(source, setState, stringLiteral);\n    }\n\n    if (largeRE.test(ch)) {\n      source.eatWhile(idRE);\n      if (source.eat('.')) {\n        return \"qualifier\";\n      }\n      return \"variable-2\";\n    }\n\n    if (smallRE.test(ch)) {\n      source.eatWhile(idRE);\n      return \"variable\";\n    }\n\n    if (digitRE.test(ch)) {\n      if (ch == '0') {\n        if (source.eat(/[xX]/)) {\n          source.eatWhile(hexitRE); // should require at least 1\n          return \"integer\";\n        }\n        if (source.eat(/[oO]/)) {\n          source.eatWhile(octitRE); // should require at least 1\n          return \"number\";\n        }\n      }\n      source.eatWhile(digitRE);\n      var t = \"number\";\n      if (source.match(/^\\.\\d+/)) {\n        t = \"number\";\n      }\n      if (source.eat(/[eE]/)) {\n        t = \"number\";\n        source.eat(/[-+]/);\n        source.eatWhile(digitRE); // should require at least 1\n      }\n      return t;\n    }\n\n    if (ch == \".\" && source.eat(\".\"))\n      return \"keyword\";\n\n    if (symbolRE.test(ch)) {\n      if (ch == '-' && source.eat(/-/)) {\n        source.eatWhile(/-/);\n        if (!source.eat(symbolRE)) {\n          source.skipToEnd();\n          return \"comment\";\n        }\n      }\n      var t = \"variable\";\n      if (ch == ':') {\n        t = \"variable-2\";\n      }\n      source.eatWhile(symbolRE);\n      return t;\n    }\n\n    return \"error\";\n  }\n\n  function ncomment(type, nest) {\n    if (nest == 0) {\n      return normal;\n    }\n    return function(source, setState) {\n      var currNest = nest;\n      while (!source.eol()) {\n        var ch = source.next();\n        if (ch == '{' && source.eat('-')) {\n          ++currNest;\n        }\n        else if (ch == '-' && source.eat('}')) {\n          --currNest;\n          if (currNest == 0) {\n            setState(normal);\n            return type;\n          }\n        }\n      }\n      setState(ncomment(type, currNest));\n      return type;\n    };\n  }\n\n  function stringLiteral(source, setState) {\n    while (!source.eol()) {\n      var ch = source.next();\n      if (ch == '\"') {\n        setState(normal);\n        return \"string\";\n      }\n      if (ch == '\\\\') {\n        if (source.eol() || source.eat(whiteCharRE)) {\n          setState(stringGap);\n          return \"string\";\n        }\n        if (source.eat('&')) {\n        }\n        else {\n          source.next(); // should handle other escapes here\n        }\n      }\n    }\n    setState(normal);\n    return \"string error\";\n  }\n\n  function stringGap(source, setState) {\n    if (source.eat('\\\\')) {\n      return switchState(source, setState, stringLiteral);\n    }\n    source.next();\n    setState(normal);\n    return \"error\";\n  }\n\n\n  var wellKnownWords = (function() {\n    var wkw = {};\n    function setType(t) {\n      return function () {\n        for (var i = 0; i < arguments.length; i++)\n          wkw[arguments[i]] = t;\n      };\n    }\n\n    setType(\"keyword\")(\n      \"case\", \"class\", \"data\", \"default\", \"deriving\", \"do\", \"else\", \"foreign\",\n      \"if\", \"import\", \"in\", \"infix\", \"infixl\", \"infixr\", \"instance\", \"let\",\n      \"module\", \"newtype\", \"of\", \"then\", \"type\", \"where\", \"_\");\n\n    setType(\"keyword\")(\n      \"\\.\\.\", \":\", \"::\", \"=\", \"\\\\\", \"<-\", \"->\", \"@\", \"~\", \"=>\");\n\n    setType(\"builtin\")(\n      \"!!\", \"$!\", \"$\", \"&&\", \"+\", \"++\", \"-\", \".\", \"/\", \"/=\", \"<\", \"<*\", \"<=\",\n      \"<$>\", \"<*>\", \"=<<\", \"==\", \">\", \">=\", \">>\", \">>=\", \"^\", \"^^\", \"||\", \"*\",\n      \"*>\", \"**\");\n\n    setType(\"builtin\")(\n      \"Applicative\", \"Bool\", \"Bounded\", \"Char\", \"Double\", \"EQ\", \"Either\", \"Enum\",\n      \"Eq\", \"False\", \"FilePath\", \"Float\", \"Floating\", \"Fractional\", \"Functor\",\n      \"GT\", \"IO\", \"IOError\", \"Int\", \"Integer\", \"Integral\", \"Just\", \"LT\", \"Left\",\n      \"Maybe\", \"Monad\", \"Nothing\", \"Num\", \"Ord\", \"Ordering\", \"Rational\", \"Read\",\n      \"ReadS\", \"Real\", \"RealFloat\", \"RealFrac\", \"Right\", \"Show\", \"ShowS\",\n      \"String\", \"True\");\n\n    setType(\"builtin\")(\n      \"abs\", \"acos\", \"acosh\", \"all\", \"and\", \"any\", \"appendFile\", \"asTypeOf\",\n      \"asin\", \"asinh\", \"atan\", \"atan2\", \"atanh\", \"break\", \"catch\", \"ceiling\",\n      \"compare\", \"concat\", \"concatMap\", \"const\", \"cos\", \"cosh\", \"curry\",\n      \"cycle\", \"decodeFloat\", \"div\", \"divMod\", \"drop\", \"dropWhile\", \"either\",\n      \"elem\", \"encodeFloat\", \"enumFrom\", \"enumFromThen\", \"enumFromThenTo\",\n      \"enumFromTo\", \"error\", \"even\", \"exp\", \"exponent\", \"fail\", \"filter\",\n      \"flip\", \"floatDigits\", \"floatRadix\", \"floatRange\", \"floor\", \"fmap\",\n      \"foldl\", \"foldl1\", \"foldr\", \"foldr1\", \"fromEnum\", \"fromInteger\",\n      \"fromIntegral\", \"fromRational\", \"fst\", \"gcd\", \"getChar\", \"getContents\",\n      \"getLine\", \"head\", \"id\", \"init\", \"interact\", \"ioError\", \"isDenormalized\",\n      \"isIEEE\", \"isInfinite\", \"isNaN\", \"isNegativeZero\", \"iterate\", \"last\",\n      \"lcm\", \"length\", \"lex\", \"lines\", \"log\", \"logBase\", \"lookup\", \"map\",\n      \"mapM\", \"mapM_\", \"max\", \"maxBound\", \"maximum\", \"maybe\", \"min\", \"minBound\",\n      \"minimum\", \"mod\", \"negate\", \"not\", \"notElem\", \"null\", \"odd\", \"or\",\n      \"otherwise\", \"pi\", \"pred\", \"print\", \"product\", \"properFraction\", \"pure\",\n      \"putChar\", \"putStr\", \"putStrLn\", \"quot\", \"quotRem\", \"read\", \"readFile\",\n      \"readIO\", \"readList\", \"readLn\", \"readParen\", \"reads\", \"readsPrec\",\n      \"realToFrac\", \"recip\", \"rem\", \"repeat\", \"replicate\", \"return\", \"reverse\",\n      \"round\", \"scaleFloat\", \"scanl\", \"scanl1\", \"scanr\", \"scanr1\", \"seq\",\n      \"sequence\", \"sequence_\", \"show\", \"showChar\", \"showList\", \"showParen\",\n      \"showString\", \"shows\", \"showsPrec\", \"significand\", \"signum\", \"sin\",\n      \"sinh\", \"snd\", \"span\", \"splitAt\", \"sqrt\", \"subtract\", \"succ\", \"sum\",\n      \"tail\", \"take\", \"takeWhile\", \"tan\", \"tanh\", \"toEnum\", \"toInteger\",\n      \"toRational\", \"truncate\", \"uncurry\", \"undefined\", \"unlines\", \"until\",\n      \"unwords\", \"unzip\", \"unzip3\", \"userError\", \"words\", \"writeFile\", \"zip\",\n      \"zip3\", \"zipWith\", \"zipWith3\");\n\n    var override = modeConfig.overrideKeywords;\n    if (override) for (var word in override) if (override.hasOwnProperty(word))\n      wkw[word] = override[word];\n\n    return wkw;\n  })();\n\n\n\n  return {\n    startState: function ()  { return { f: normal }; },\n    copyState:  function (s) { return { f: s.f }; },\n\n    token: function(stream, state) {\n      var t = state.f(stream, function(s) { state.f = s; });\n      var w = stream.current();\n      return wellKnownWords.hasOwnProperty(w) ? wellKnownWords[w] : t;\n    },\n\n    blockCommentStart: \"{-\",\n    blockCommentEnd: \"-}\",\n    lineComment: \"--\"\n  };\n\n});\n\nCodeMirror.defineMIME(\"text/x-haskell\", \"haskell\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../haskell/haskell\"))\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../haskell/haskell\"], mod)\n  else // Plain browser env\n    mod(CodeMirror)\n})(function (CodeMirror) {\n  \"use strict\"\n\n  CodeMirror.defineMode(\"haskell-literate\", function (config, parserConfig) {\n    var baseMode = CodeMirror.getMode(config, (parserConfig && parserConfig.base) || \"haskell\")\n\n    return {\n      startState: function () {\n        return {\n          inCode: false,\n          baseState: CodeMirror.startState(baseMode)\n        }\n      },\n      token: function (stream, state) {\n        if (stream.sol()) {\n          if (state.inCode = stream.eat(\">\"))\n            return \"meta\"\n        }\n        if (state.inCode) {\n          return baseMode.token(stream, state.baseState)\n        } else {\n          stream.skipToEnd()\n          return \"comment\"\n        }\n      },\n      innerMode: function (state) {\n        return state.inCode ? {state: state.baseState, mode: baseMode} : null\n      }\n    }\n  }, \"haskell\")\n\n  CodeMirror.defineMIME(\"text/x-literate-haskell\", \"haskell-literate\")\n});\n"]}}