{"code":"(this.webpackJsonpfrontend=this.webpackJsonpfrontend||[]).push([[49],{321:function(e,t,n){!function(e){\"use strict\";e.defineMode(\"eiffel\",(function(){function e(e){for(var t={},n=0,r=e.length;n<r;++n)t[e[n]]=!0;return t}var t=e([\"note\",\"across\",\"when\",\"variant\",\"until\",\"unique\",\"undefine\",\"then\",\"strip\",\"select\",\"retry\",\"rescue\",\"require\",\"rename\",\"reference\",\"redefine\",\"prefix\",\"once\",\"old\",\"obsolete\",\"loop\",\"local\",\"like\",\"is\",\"inspect\",\"infix\",\"include\",\"if\",\"frozen\",\"from\",\"external\",\"export\",\"ensure\",\"end\",\"elseif\",\"else\",\"do\",\"creation\",\"create\",\"check\",\"alias\",\"agent\",\"separate\",\"invariant\",\"inherit\",\"indexing\",\"feature\",\"expanded\",\"deferred\",\"class\",\"Void\",\"True\",\"Result\",\"Precursor\",\"False\",\"Current\",\"create\",\"attached\",\"detachable\",\"as\",\"and\",\"implies\",\"not\",\"or\"]),n=e([\":=\",\"and then\",\"and\",\"or\",\"<<\",\">>\"]);function r(e,t,n){return n.tokenize.push(e),e(t,n)}function i(e,t){if(e.eatSpace())return null;var n=e.next();return'\"'==n||\"'\"==n?r(a(n,\"string\"),e,t):\"-\"==n&&e.eat(\"-\")?(e.skipToEnd(),\"comment\"):\":\"==n&&e.eat(\"=\")?\"operator\":/[0-9]/.test(n)?(e.eatWhile(/[xXbBCc0-9\\.]/),e.eat(/[\\?\\!]/),\"ident\"):/[a-zA-Z_0-9]/.test(n)?(e.eatWhile(/[a-zA-Z_0-9]/),e.eat(/[\\?\\!]/),\"ident\"):/[=+\\-\\/*^%<>~]/.test(n)?(e.eatWhile(/[=+\\-\\/*^%<>~]/),\"operator\"):null}function a(e,t,n){return function(r,i){for(var a,o=!1;null!=(a=r.next());){if(a==e&&(n||!o)){i.tokenize.pop();break}o=!o&&\"%\"==a}return t}}return{startState:function(){return{tokenize:[i]}},token:function(e,r){var i=r.tokenize[r.tokenize.length-1](e,r);if(\"ident\"==i){var a=e.current();i=t.propertyIsEnumerable(e.current())?\"keyword\":n.propertyIsEnumerable(e.current())?\"operator\":/^[A-Z][A-Z_0-9]*$/g.test(a)?\"tag\":/^0[bB][0-1]+$/g.test(a)||/^0[cC][0-7]+$/g.test(a)||/^0[xX][a-fA-F0-9]+$/g.test(a)||/^([0-9]+\\.[0-9]*)|([0-9]*\\.[0-9]+)$/g.test(a)||/^[0-9]+$/g.test(a)?\"number\":\"variable\"}return i},lineComment:\"--\"}})),e.defineMIME(\"text/x-eiffel\",\"eiffel\")}(n(108))}}]);","name":"static/js/49.c5e7fddb.chunk.js","map":{"version":3,"sources":["static/js/49.c5e7fddb.chunk.js"],"names":["this","push","module","exports","__webpack_require__","CodeMirror","defineMode","wordObj","words","o","i","e","length","keywords","operators","chain","newtok","stream","state","tokenize","tokenBase","eatSpace","ch","next","readQuoted","eat","skipToEnd","test","eatWhile","quote","style","unescaped","escaped","pop","startState","token","word","current","propertyIsEnumerable","lineComment","defineMIME","mod"],"mappings":"CAACA,KAA2B,qBAAIA,KAA2B,sBAAK,IAAIC,KAAK,CAAC,CAAC,IAAI,CAEzE,IACA,SAAUC,EAAQC,EAASC,IAO9B,SAAUC,GACX,aAEAA,EAAWC,WAAW,UAAU,WAC9B,SAASC,EAAQC,GAGf,IAFA,IAAIC,EAAI,GAECC,EAAI,EAAGC,EAAIH,EAAMI,OAAQF,EAAIC,IAAKD,EACzCD,EAAED,EAAME,KAAM,EAGhB,OAAOD,EAGT,IAAII,EAAWN,EAAQ,CAAC,OAAQ,SAAU,OAAQ,UAAW,QAAS,SAAU,WAAY,OAAQ,QAAS,SAAU,QAAS,SAAU,UAAW,SAAU,YAAa,WAAY,SAAU,OAAQ,MAAO,WAAY,OAAQ,QAAS,OAAQ,KAAM,UAAW,QAAS,UAAW,KAAM,SAAU,OAAQ,WAAY,SAAU,SAAU,MAAO,SAAU,OAAQ,KAAM,WAAY,SAAU,QAAS,QAAS,QAAS,WAAY,YAAa,UAAW,WAAY,UAAW,WAAY,WAAY,QAAS,OAAQ,OAAQ,SAAU,YAAa,QAAS,UAAW,SAAU,WAAY,aAAc,KAAM,MAAO,UAAW,MAAO,OACznBO,EAAYP,EAAQ,CAAC,KAAM,WAAY,MAAO,KAAM,KAAM,OAE9D,SAASQ,EAAMC,EAAQC,EAAQC,GAE7B,OADAA,EAAMC,SAASlB,KAAKe,GACbA,EAAOC,EAAQC,GAGxB,SAASE,EAAUH,EAAQC,GACzB,GAAID,EAAOI,WAAY,OAAO,KAC9B,IAAIC,EAAKL,EAAOM,OAEhB,MAAU,KAAND,GAAmB,KAANA,EACRP,EAAMS,EAAWF,EAAI,UAAWL,EAAQC,GAChC,KAANI,GAAaL,EAAOQ,IAAI,MACjCR,EAAOS,YACA,WACQ,KAANJ,GAAaL,EAAOQ,IAAI,KAC1B,WACE,QAAQE,KAAKL,IACtBL,EAAOW,SAAS,iBAChBX,EAAOQ,IAAI,UACJ,SACE,eAAeE,KAAKL,IAC7BL,EAAOW,SAAS,gBAChBX,EAAOQ,IAAI,UACJ,SACE,iBAAiBE,KAAKL,IAC/BL,EAAOW,SAAS,kBACT,YAEA,KAIX,SAASJ,EAAWK,EAAOC,EAAOC,GAChC,OAAO,SAAUd,EAAQC,GAIvB,IAHA,IACII,EADAU,GAAU,EAGiB,OAAvBV,EAAKL,EAAOM,SAAiB,CACnC,GAAID,GAAMO,IAAUE,IAAcC,GAAU,CAC1Cd,EAAMC,SAASc,MACf,MAGFD,GAAWA,GAAiB,KAANV,EAGxB,OAAOQ,GAIX,MAAO,CACLI,WAAY,WACV,MAAO,CACLf,SAAU,CAACC,KAGfe,MAAO,SAAelB,EAAQC,GAC5B,IAAIY,EAAQZ,EAAMC,SAASD,EAAMC,SAASP,OAAS,GAAGK,EAAQC,GAE9D,GAAa,SAATY,EAAkB,CACpB,IAAIM,EAAOnB,EAAOoB,UAClBP,EAAQjB,EAASyB,qBAAqBrB,EAAOoB,WAAa,UAAYvB,EAAUwB,qBAAqBrB,EAAOoB,WAAa,WAAa,qBAAqBV,KAAKS,GAAQ,MAAQ,iBAAiBT,KAAKS,IAAmB,iBAAiBT,KAAKS,IAAmB,uBAAuBT,KAAKS,IAAmB,uCAAuCT,KAAKS,IAAmB,YAAYT,KAAKS,GAAnL,SAAsM,WAGtZ,OAAON,GAETS,YAAa,SAGjBlC,EAAWmC,WAAW,gBAAiB,UAvFrCC,CAAIrC,EAAoB"},"input":"(this[\"webpackJsonpfrontend\"] = this[\"webpackJsonpfrontend\"] || []).push([[49],{\n\n/***/ 321:\n/***/ (function(module, exports, __webpack_require__) {\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (true) // CommonJS\n    mod(__webpack_require__(108));else {}\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"eiffel\", function () {\n    function wordObj(words) {\n      var o = {};\n\n      for (var i = 0, e = words.length; i < e; ++i) {\n        o[words[i]] = true;\n      }\n\n      return o;\n    }\n\n    var keywords = wordObj(['note', 'across', 'when', 'variant', 'until', 'unique', 'undefine', 'then', 'strip', 'select', 'retry', 'rescue', 'require', 'rename', 'reference', 'redefine', 'prefix', 'once', 'old', 'obsolete', 'loop', 'local', 'like', 'is', 'inspect', 'infix', 'include', 'if', 'frozen', 'from', 'external', 'export', 'ensure', 'end', 'elseif', 'else', 'do', 'creation', 'create', 'check', 'alias', 'agent', 'separate', 'invariant', 'inherit', 'indexing', 'feature', 'expanded', 'deferred', 'class', 'Void', 'True', 'Result', 'Precursor', 'False', 'Current', 'create', 'attached', 'detachable', 'as', 'and', 'implies', 'not', 'or']);\n    var operators = wordObj([\":=\", \"and then\", \"and\", \"or\", \"<<\", \">>\"]);\n\n    function chain(newtok, stream, state) {\n      state.tokenize.push(newtok);\n      return newtok(stream, state);\n    }\n\n    function tokenBase(stream, state) {\n      if (stream.eatSpace()) return null;\n      var ch = stream.next();\n\n      if (ch == '\"' || ch == \"'\") {\n        return chain(readQuoted(ch, \"string\"), stream, state);\n      } else if (ch == \"-\" && stream.eat(\"-\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (ch == \":\" && stream.eat(\"=\")) {\n        return \"operator\";\n      } else if (/[0-9]/.test(ch)) {\n        stream.eatWhile(/[xXbBCc0-9\\.]/);\n        stream.eat(/[\\?\\!]/);\n        return \"ident\";\n      } else if (/[a-zA-Z_0-9]/.test(ch)) {\n        stream.eatWhile(/[a-zA-Z_0-9]/);\n        stream.eat(/[\\?\\!]/);\n        return \"ident\";\n      } else if (/[=+\\-\\/*^%<>~]/.test(ch)) {\n        stream.eatWhile(/[=+\\-\\/*^%<>~]/);\n        return \"operator\";\n      } else {\n        return null;\n      }\n    }\n\n    function readQuoted(quote, style, unescaped) {\n      return function (stream, state) {\n        var escaped = false,\n            ch;\n\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && (unescaped || !escaped)) {\n            state.tokenize.pop();\n            break;\n          }\n\n          escaped = !escaped && ch == \"%\";\n        }\n\n        return style;\n      };\n    }\n\n    return {\n      startState: function startState() {\n        return {\n          tokenize: [tokenBase]\n        };\n      },\n      token: function token(stream, state) {\n        var style = state.tokenize[state.tokenize.length - 1](stream, state);\n\n        if (style == \"ident\") {\n          var word = stream.current();\n          style = keywords.propertyIsEnumerable(stream.current()) ? \"keyword\" : operators.propertyIsEnumerable(stream.current()) ? \"operator\" : /^[A-Z][A-Z_0-9]*$/g.test(word) ? \"tag\" : /^0[bB][0-1]+$/g.test(word) ? \"number\" : /^0[cC][0-7]+$/g.test(word) ? \"number\" : /^0[xX][a-fA-F0-9]+$/g.test(word) ? \"number\" : /^([0-9]+\\.[0-9]*)|([0-9]*\\.[0-9]+)$/g.test(word) ? \"number\" : /^[0-9]+$/g.test(word) ? \"number\" : \"variable\";\n        }\n\n        return style;\n      },\n      lineComment: \"--\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-eiffel\", \"eiffel\");\n});\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/mnt/Datengrab/python/Zero-tier/frontend/node_modules/codemirror/mode/eiffel/eiffel.js"],"names":["mod","require","CodeMirror","defineMode","wordObj","words","o","i","e","length","keywords","operators","chain","newtok","stream","state","tokenize","push","tokenBase","eatSpace","ch","next","readQuoted","eat","skipToEnd","test","eatWhile","quote","style","unescaped","escaped","pop","startState","token","word","current","propertyIsEnumerable","lineComment","defineMIME"],"mappings":"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","file":"x","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"eiffel\", function() {\n  function wordObj(words) {\n    var o = {};\n    for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n    return o;\n  }\n  var keywords = wordObj([\n    'note',\n    'across',\n    'when',\n    'variant',\n    'until',\n    'unique',\n    'undefine',\n    'then',\n    'strip',\n    'select',\n    'retry',\n    'rescue',\n    'require',\n    'rename',\n    'reference',\n    'redefine',\n    'prefix',\n    'once',\n    'old',\n    'obsolete',\n    'loop',\n    'local',\n    'like',\n    'is',\n    'inspect',\n    'infix',\n    'include',\n    'if',\n    'frozen',\n    'from',\n    'external',\n    'export',\n    'ensure',\n    'end',\n    'elseif',\n    'else',\n    'do',\n    'creation',\n    'create',\n    'check',\n    'alias',\n    'agent',\n    'separate',\n    'invariant',\n    'inherit',\n    'indexing',\n    'feature',\n    'expanded',\n    'deferred',\n    'class',\n    'Void',\n    'True',\n    'Result',\n    'Precursor',\n    'False',\n    'Current',\n    'create',\n    'attached',\n    'detachable',\n    'as',\n    'and',\n    'implies',\n    'not',\n    'or'\n  ]);\n  var operators = wordObj([\":=\", \"and then\",\"and\", \"or\",\"<<\",\">>\"]);\n\n  function chain(newtok, stream, state) {\n    state.tokenize.push(newtok);\n    return newtok(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    if (stream.eatSpace()) return null;\n    var ch = stream.next();\n    if (ch == '\"'||ch == \"'\") {\n      return chain(readQuoted(ch, \"string\"), stream, state);\n    } else if (ch == \"-\"&&stream.eat(\"-\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \":\"&&stream.eat(\"=\")) {\n      return \"operator\";\n    } else if (/[0-9]/.test(ch)) {\n      stream.eatWhile(/[xXbBCc0-9\\.]/);\n      stream.eat(/[\\?\\!]/);\n      return \"ident\";\n    } else if (/[a-zA-Z_0-9]/.test(ch)) {\n      stream.eatWhile(/[a-zA-Z_0-9]/);\n      stream.eat(/[\\?\\!]/);\n      return \"ident\";\n    } else if (/[=+\\-\\/*^%<>~]/.test(ch)) {\n      stream.eatWhile(/[=+\\-\\/*^%<>~]/);\n      return \"operator\";\n    } else {\n      return null;\n    }\n  }\n\n  function readQuoted(quote, style,  unescaped) {\n    return function(stream, state) {\n      var escaped = false, ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && (unescaped || !escaped)) {\n          state.tokenize.pop();\n          break;\n        }\n        escaped = !escaped && ch == \"%\";\n      }\n      return style;\n    };\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: [tokenBase]};\n    },\n\n    token: function(stream, state) {\n      var style = state.tokenize[state.tokenize.length-1](stream, state);\n      if (style == \"ident\") {\n        var word = stream.current();\n        style = keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n          : operators.propertyIsEnumerable(stream.current()) ? \"operator\"\n          : /^[A-Z][A-Z_0-9]*$/g.test(word) ? \"tag\"\n          : /^0[bB][0-1]+$/g.test(word) ? \"number\"\n          : /^0[cC][0-7]+$/g.test(word) ? \"number\"\n          : /^0[xX][a-fA-F0-9]+$/g.test(word) ? \"number\"\n          : /^([0-9]+\\.[0-9]*)|([0-9]*\\.[0-9]+)$/g.test(word) ? \"number\"\n          : /^[0-9]+$/g.test(word) ? \"number\"\n          : \"variable\";\n      }\n      return style;\n    },\n    lineComment: \"--\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-eiffel\", \"eiffel\");\n\n});\n"]}}