{"code":"(this.webpackJsonpfrontend=this.webpackJsonpfrontend||[]).push([[73],{350:function(e,t,n){!function(e){\"use strict\";e.defineMode(\"mumps\",(function(){function e(e){return new RegExp(\"^((\"+e.join(\")|(\")+\"))\\\\b\",\"i\")}var t=new RegExp(\"^[\\\\+\\\\-\\\\*/&#!_?\\\\\\\\<>=\\\\'\\\\[\\\\]]\"),n=new RegExp(\"^(('=)|(<=)|(>=)|('>)|('<)|([[)|(]])|(^$))\"),$=new RegExp(\"^[\\\\.,:]\"),o=new RegExp(\"[()]\"),a=new RegExp(\"^[%A-Za-z][A-Za-z0-9]*\"),r=[\"break\",\"close\",\"do\",\"else\",\"for\",\"goto\",\"halt\",\"hang\",\"if\",\"job\",\"kill\",\"lock\",\"merge\",\"new\",\"open\",\"quit\",\"read\",\"set\",\"tcommit\",\"trollback\",\"tstart\",\"use\",\"view\",\"write\",\"xecute\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"q\",\"r\",\"s\",\"tc\",\"tro\",\"ts\",\"u\",\"v\",\"w\",\"x\"],c=e([\"\\\\$ascii\",\"\\\\$char\",\"\\\\$data\",\"\\\\$ecode\",\"\\\\$estack\",\"\\\\$etrap\",\"\\\\$extract\",\"\\\\$find\",\"\\\\$fnumber\",\"\\\\$get\",\"\\\\$horolog\",\"\\\\$io\",\"\\\\$increment\",\"\\\\$job\",\"\\\\$justify\",\"\\\\$length\",\"\\\\$name\",\"\\\\$next\",\"\\\\$order\",\"\\\\$piece\",\"\\\\$qlength\",\"\\\\$qsubscript\",\"\\\\$query\",\"\\\\$quit\",\"\\\\$random\",\"\\\\$reverse\",\"\\\\$select\",\"\\\\$stack\",\"\\\\$test\",\"\\\\$text\",\"\\\\$translate\",\"\\\\$view\",\"\\\\$x\",\"\\\\$y\",\"\\\\$a\",\"\\\\$c\",\"\\\\$d\",\"\\\\$e\",\"\\\\$ec\",\"\\\\$es\",\"\\\\$et\",\"\\\\$f\",\"\\\\$fn\",\"\\\\$g\",\"\\\\$h\",\"\\\\$i\",\"\\\\$j\",\"\\\\$l\",\"\\\\$n\",\"\\\\$na\",\"\\\\$o\",\"\\\\$p\",\"\\\\$q\",\"\\\\$ql\",\"\\\\$qs\",\"\\\\$r\",\"\\\\$re\",\"\\\\$s\",\"\\\\$st\",\"\\\\$t\",\"\\\\$tr\",\"\\\\$v\",\"\\\\$z\"]),i=e(r);function m(e,r){e.sol()&&(r.label=!0,r.commandMode=0);var m=e.peek();return\" \"==m||\"\\t\"==m?(r.label=!1,0==r.commandMode?r.commandMode=1:(r.commandMode<0||2==r.commandMode)&&(r.commandMode=0)):\".\"!=m&&r.commandMode>0&&(r.commandMode=\":\"==m?-1:2),\"(\"!==m&&\"\\t\"!==m||(r.label=!1),\";\"===m?(e.skipToEnd(),\"comment\"):e.match(/^[-+]?\\d+(\\.\\d+)?([eE][-+]?\\d+)?/)?\"number\":'\"'==m?e.skipTo('\"')?(e.next(),\"string\"):(e.skipToEnd(),\"error\"):e.match(n)||e.match(t)?\"operator\":e.match($)?null:o.test(m)?(e.next(),\"bracket\"):r.commandMode>0&&e.match(i)?\"variable-2\":e.match(c)?\"builtin\":e.match(a)?\"variable\":\"$\"===m||\"^\"===m?(e.next(),\"builtin\"):\"@\"===m?(e.next(),\"string-2\"):/[\\w%]/.test(m)?(e.eatWhile(/[\\w%]/),\"variable\"):(e.next(),\"error\")}return{startState:function(){return{label:!1,commandMode:0}},token:function(e,t){var n=m(e,t);return t.label?\"tag\":n}}})),e.defineMIME(\"text/x-mumps\",\"mumps\")}(n(108))}}]);","name":"static/js/73.60340566.chunk.js","map":{"version":3,"sources":["static/js/73.60340566.chunk.js"],"names":["this","push","module","exports","__webpack_require__","CodeMirror","defineMode","wordRegexp","words","RegExp","join","singleOperators","doubleOperators","singleDelimiters","brackets","identifiers","commandKeywords","intrinsicFuncs","command","tokenBase","stream","state","sol","label","commandMode","ch","peek","skipToEnd","match","skipTo","next","test","eatWhile","startState","token","style","defineMIME","mod"],"mappings":"CAACA,KAA2B,qBAAIA,KAA2B,sBAAK,IAAIC,KAAK,CAAC,CAAC,IAAI,CAEzE,IACA,SAAUC,EAAQC,EAASC,IAW9B,SAAUC,GACX,aAEAA,EAAWC,WAAW,SAAS,WAC7B,SAASC,EAAWC,GAClB,OAAO,IAAIC,OAAO,MAAQD,EAAME,KAAK,OAAS,QAAS,KAGzD,IAAIC,EAAkB,IAAIF,OAAO,sCAC7BG,EAAkB,IAAIH,OAAO,8CAC7BI,EAAmB,IAAIJ,OAAO,YAC9BK,EAAW,IAAIL,OAAO,QACtBM,EAAc,IAAIN,OAAO,0BACzBO,EAAkB,CAAC,QAAS,QAAS,KAAM,OAAQ,MAAO,OAAQ,OAAQ,OAAQ,KAAM,MAAO,OAAQ,OAAQ,QAAS,MAAO,OAAQ,OAAQ,OAAQ,MAAO,UAAW,YAAa,SAAU,MAAO,OAAQ,QAAS,SAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,MAAO,KAAM,IAAK,IAAK,IAAK,KAGzVC,EAAiBV,EADK,CAAC,WAAY,UAAW,UAAW,WAAY,YAAa,WAAY,aAAc,UAAW,aAAc,SAAU,aAAc,QAAS,eAAgB,SAAU,aAAc,YAAa,UAAW,UAAW,WAAY,WAAY,aAAc,gBAAiB,WAAY,UAAW,YAAa,aAAc,YAAa,WAAY,UAAW,UAAW,eAAgB,UAAW,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,QAAS,QAAS,OAAQ,QAAS,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,OAAQ,OAAQ,OAAQ,QAAS,QAAS,OAAQ,QAAS,OAAQ,QAAS,OAAQ,QAAS,OAAQ,SAE9pBW,EAAUX,EAAWS,GAEzB,SAASG,EAAUC,EAAQC,GACrBD,EAAOE,QACTD,EAAME,OAAQ,EACdF,EAAMG,YAAc,GAQtB,IAAIC,EAAKL,EAAOM,OAchB,MAZU,KAAND,GAAmB,MAANA,GAEfJ,EAAME,OAAQ,EACW,GAArBF,EAAMG,YAAkBH,EAAMG,YAAc,GAAWH,EAAMG,YAAc,GAA0B,GAArBH,EAAMG,eAAkBH,EAAMG,YAAc,IACjH,KAANC,GAAaJ,EAAMG,YAAc,IAC3BH,EAAMG,YAAX,KAANC,GAAgC,EACX,GAIhB,MAAPA,GAAqB,OAAPA,IAAaJ,EAAME,OAAQ,GAElC,MAAPE,GACFL,EAAOO,YACA,WAILP,EAAOQ,MAAM,oCAA4C,SAEnD,KAANH,EACEL,EAAOS,OAAO,MAChBT,EAAOU,OACA,WAEPV,EAAOO,YACA,SAKPP,EAAOQ,MAAMhB,IAAoBQ,EAAOQ,MAAMjB,GAAyB,WAEvES,EAAOQ,MAAMf,GAA0B,KAEvCC,EAASiB,KAAKN,IAChBL,EAAOU,OACA,WAGLT,EAAMG,YAAc,GAAKJ,EAAOQ,MAAMV,GAAiB,aACvDE,EAAOQ,MAAMX,GAAwB,UACrCG,EAAOQ,MAAMb,GAAqB,WAG3B,MAAPU,GAAqB,MAAPA,GAChBL,EAAOU,OACA,WAIE,MAAPL,GACFL,EAAOU,OACA,YAGL,QAAQC,KAAKN,IACfL,EAAOY,SAAS,SACT,aAITZ,EAAOU,OACA,SAGT,MAAO,CACLG,WAAY,WACV,MAAO,CACLV,OAAO,EACPC,YAAa,IAGjBU,MAAO,SAAed,EAAQC,GAC5B,IAAIc,EAAQhB,EAAUC,EAAQC,GAC9B,OAAIA,EAAME,MAAc,MACjBY,OAIb9B,EAAW+B,WAAW,eAAgB,SAjHpCC,CAAIjC,EAAoB"},"input":"(this[\"webpackJsonpfrontend\"] = this[\"webpackJsonpfrontend\"] || []).push([[73],{\n\n/***/ 350:\n/***/ (function(module, exports, __webpack_require__) {\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/*\n  This MUMPS Language script was constructed using vbscript.js as a template.\n*/\n(function (mod) {\n  if (true) // CommonJS\n    mod(__webpack_require__(108));else {}\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"mumps\", function () {\n    function wordRegexp(words) {\n      return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\", \"i\");\n    }\n\n    var singleOperators = new RegExp(\"^[\\\\+\\\\-\\\\*/&#!_?\\\\\\\\<>=\\\\'\\\\[\\\\]]\");\n    var doubleOperators = new RegExp(\"^(('=)|(<=)|(>=)|('>)|('<)|([[)|(]])|(^$))\");\n    var singleDelimiters = new RegExp(\"^[\\\\.,:]\");\n    var brackets = new RegExp(\"[()]\");\n    var identifiers = new RegExp(\"^[%A-Za-z][A-Za-z0-9]*\");\n    var commandKeywords = [\"break\", \"close\", \"do\", \"else\", \"for\", \"goto\", \"halt\", \"hang\", \"if\", \"job\", \"kill\", \"lock\", \"merge\", \"new\", \"open\", \"quit\", \"read\", \"set\", \"tcommit\", \"trollback\", \"tstart\", \"use\", \"view\", \"write\", \"xecute\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"q\", \"r\", \"s\", \"tc\", \"tro\", \"ts\", \"u\", \"v\", \"w\", \"x\"]; // The following list includes intrinsic functions _and_ special variables\n\n    var intrinsicFuncsWords = [\"\\\\$ascii\", \"\\\\$char\", \"\\\\$data\", \"\\\\$ecode\", \"\\\\$estack\", \"\\\\$etrap\", \"\\\\$extract\", \"\\\\$find\", \"\\\\$fnumber\", \"\\\\$get\", \"\\\\$horolog\", \"\\\\$io\", \"\\\\$increment\", \"\\\\$job\", \"\\\\$justify\", \"\\\\$length\", \"\\\\$name\", \"\\\\$next\", \"\\\\$order\", \"\\\\$piece\", \"\\\\$qlength\", \"\\\\$qsubscript\", \"\\\\$query\", \"\\\\$quit\", \"\\\\$random\", \"\\\\$reverse\", \"\\\\$select\", \"\\\\$stack\", \"\\\\$test\", \"\\\\$text\", \"\\\\$translate\", \"\\\\$view\", \"\\\\$x\", \"\\\\$y\", \"\\\\$a\", \"\\\\$c\", \"\\\\$d\", \"\\\\$e\", \"\\\\$ec\", \"\\\\$es\", \"\\\\$et\", \"\\\\$f\", \"\\\\$fn\", \"\\\\$g\", \"\\\\$h\", \"\\\\$i\", \"\\\\$j\", \"\\\\$l\", \"\\\\$n\", \"\\\\$na\", \"\\\\$o\", \"\\\\$p\", \"\\\\$q\", \"\\\\$ql\", \"\\\\$qs\", \"\\\\$r\", \"\\\\$re\", \"\\\\$s\", \"\\\\$st\", \"\\\\$t\", \"\\\\$tr\", \"\\\\$v\", \"\\\\$z\"];\n    var intrinsicFuncs = wordRegexp(intrinsicFuncsWords);\n    var command = wordRegexp(commandKeywords);\n\n    function tokenBase(stream, state) {\n      if (stream.sol()) {\n        state.label = true;\n        state.commandMode = 0;\n      } // The <space> character has meaning in MUMPS. Ignoring consecutive\n      // spaces would interfere with interpreting whether the next non-space\n      // character belongs to the command or argument context.\n      // Examine each character and update a mode variable whose interpretation is:\n      //   >0 => command    0 => argument    <0 => command post-conditional\n\n\n      var ch = stream.peek();\n\n      if (ch == \" \" || ch == \"\\t\") {\n        // Pre-process <space>\n        state.label = false;\n        if (state.commandMode == 0) state.commandMode = 1;else if (state.commandMode < 0 || state.commandMode == 2) state.commandMode = 0;\n      } else if (ch != \".\" && state.commandMode > 0) {\n        if (ch == \":\") state.commandMode = -1; // SIS - Command post-conditional\n        else state.commandMode = 2;\n      } // Do not color parameter list as line tag\n\n\n      if (ch === \"(\" || ch === \"\\t\") state.label = false; // MUMPS comment starts with \";\"\n\n      if (ch === \";\") {\n        stream.skipToEnd();\n        return \"comment\";\n      } // Number Literals // SIS/RLM - MUMPS permits canonic number followed by concatenate operator\n\n\n      if (stream.match(/^[-+]?\\d+(\\.\\d+)?([eE][-+]?\\d+)?/)) return \"number\"; // Handle Strings\n\n      if (ch == '\"') {\n        if (stream.skipTo('\"')) {\n          stream.next();\n          return \"string\";\n        } else {\n          stream.skipToEnd();\n          return \"error\";\n        }\n      } // Handle operators and Delimiters\n\n\n      if (stream.match(doubleOperators) || stream.match(singleOperators)) return \"operator\"; // Prevents leading \".\" in DO block from falling through to error\n\n      if (stream.match(singleDelimiters)) return null;\n\n      if (brackets.test(ch)) {\n        stream.next();\n        return \"bracket\";\n      }\n\n      if (state.commandMode > 0 && stream.match(command)) return \"variable-2\";\n      if (stream.match(intrinsicFuncs)) return \"builtin\";\n      if (stream.match(identifiers)) return \"variable\"; // Detect dollar-sign when not a documented intrinsic function\n      // \"^\" may introduce a GVN or SSVN - Color same as function\n\n      if (ch === \"$\" || ch === \"^\") {\n        stream.next();\n        return \"builtin\";\n      } // MUMPS Indirection\n\n\n      if (ch === \"@\") {\n        stream.next();\n        return \"string-2\";\n      }\n\n      if (/[\\w%]/.test(ch)) {\n        stream.eatWhile(/[\\w%]/);\n        return \"variable\";\n      } // Handle non-detected items\n\n\n      stream.next();\n      return \"error\";\n    }\n\n    return {\n      startState: function startState() {\n        return {\n          label: false,\n          commandMode: 0\n        };\n      },\n      token: function token(stream, state) {\n        var style = tokenBase(stream, state);\n        if (state.label) return \"tag\";\n        return style;\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-mumps\", \"mumps\");\n});\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/mnt/Datengrab/python/Zero-tier/frontend/node_modules/codemirror/mode/mumps/mumps.js"],"names":["mod","require","CodeMirror","defineMode","wordRegexp","words","RegExp","join","singleOperators","doubleOperators","singleDelimiters","brackets","identifiers","commandKeywords","intrinsicFuncsWords","intrinsicFuncs","command","tokenBase","stream","state","sol","label","commandMode","ch","peek","skipToEnd","match","skipTo","next","test","eatWhile","startState","token","style","defineMIME"],"mappings":"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","file":"x","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/*\n  This MUMPS Language script was constructed using vbscript.js as a template.\n*/\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"mumps\", function() {\n    function wordRegexp(words) {\n      return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\", \"i\");\n    }\n\n    var singleOperators = new RegExp(\"^[\\\\+\\\\-\\\\*/&#!_?\\\\\\\\<>=\\\\'\\\\[\\\\]]\");\n    var doubleOperators = new RegExp(\"^(('=)|(<=)|(>=)|('>)|('<)|([[)|(]])|(^$))\");\n    var singleDelimiters = new RegExp(\"^[\\\\.,:]\");\n    var brackets = new RegExp(\"[()]\");\n    var identifiers = new RegExp(\"^[%A-Za-z][A-Za-z0-9]*\");\n    var commandKeywords = [\"break\",\"close\",\"do\",\"else\",\"for\",\"goto\", \"halt\", \"hang\", \"if\", \"job\",\"kill\",\"lock\",\"merge\",\"new\",\"open\", \"quit\", \"read\", \"set\", \"tcommit\", \"trollback\", \"tstart\", \"use\", \"view\", \"write\", \"xecute\", \"b\",\"c\",\"d\",\"e\",\"f\",\"g\", \"h\", \"i\", \"j\",\"k\",\"l\",\"m\",\"n\",\"o\", \"q\", \"r\", \"s\", \"tc\", \"tro\", \"ts\", \"u\", \"v\", \"w\", \"x\"];\n    // The following list includes intrinsic functions _and_ special variables\n    var intrinsicFuncsWords = [\"\\\\$ascii\", \"\\\\$char\", \"\\\\$data\", \"\\\\$ecode\", \"\\\\$estack\", \"\\\\$etrap\", \"\\\\$extract\", \"\\\\$find\", \"\\\\$fnumber\", \"\\\\$get\", \"\\\\$horolog\", \"\\\\$io\", \"\\\\$increment\", \"\\\\$job\", \"\\\\$justify\", \"\\\\$length\", \"\\\\$name\", \"\\\\$next\", \"\\\\$order\", \"\\\\$piece\", \"\\\\$qlength\", \"\\\\$qsubscript\", \"\\\\$query\", \"\\\\$quit\", \"\\\\$random\", \"\\\\$reverse\", \"\\\\$select\", \"\\\\$stack\", \"\\\\$test\", \"\\\\$text\", \"\\\\$translate\", \"\\\\$view\", \"\\\\$x\", \"\\\\$y\", \"\\\\$a\", \"\\\\$c\", \"\\\\$d\", \"\\\\$e\", \"\\\\$ec\", \"\\\\$es\", \"\\\\$et\", \"\\\\$f\", \"\\\\$fn\", \"\\\\$g\", \"\\\\$h\", \"\\\\$i\", \"\\\\$j\", \"\\\\$l\", \"\\\\$n\", \"\\\\$na\", \"\\\\$o\", \"\\\\$p\", \"\\\\$q\", \"\\\\$ql\", \"\\\\$qs\", \"\\\\$r\", \"\\\\$re\", \"\\\\$s\", \"\\\\$st\", \"\\\\$t\", \"\\\\$tr\", \"\\\\$v\", \"\\\\$z\"];\n    var intrinsicFuncs = wordRegexp(intrinsicFuncsWords);\n    var command = wordRegexp(commandKeywords);\n\n    function tokenBase(stream, state) {\n      if (stream.sol()) {\n        state.label = true;\n        state.commandMode = 0;\n      }\n\n      // The <space> character has meaning in MUMPS. Ignoring consecutive\n      // spaces would interfere with interpreting whether the next non-space\n      // character belongs to the command or argument context.\n\n      // Examine each character and update a mode variable whose interpretation is:\n      //   >0 => command    0 => argument    <0 => command post-conditional\n      var ch = stream.peek();\n\n      if (ch == \" \" || ch == \"\\t\") { // Pre-process <space>\n        state.label = false;\n        if (state.commandMode == 0)\n          state.commandMode = 1;\n        else if ((state.commandMode < 0) || (state.commandMode == 2))\n          state.commandMode = 0;\n      } else if ((ch != \".\") && (state.commandMode > 0)) {\n        if (ch == \":\")\n          state.commandMode = -1;   // SIS - Command post-conditional\n        else\n          state.commandMode = 2;\n      }\n\n      // Do not color parameter list as line tag\n      if ((ch === \"(\") || (ch === \"\\u0009\"))\n        state.label = false;\n\n      // MUMPS comment starts with \";\"\n      if (ch === \";\") {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n\n      // Number Literals // SIS/RLM - MUMPS permits canonic number followed by concatenate operator\n      if (stream.match(/^[-+]?\\d+(\\.\\d+)?([eE][-+]?\\d+)?/))\n        return \"number\";\n\n      // Handle Strings\n      if (ch == '\"') {\n        if (stream.skipTo('\"')) {\n          stream.next();\n          return \"string\";\n        } else {\n          stream.skipToEnd();\n          return \"error\";\n        }\n      }\n\n      // Handle operators and Delimiters\n      if (stream.match(doubleOperators) || stream.match(singleOperators))\n        return \"operator\";\n\n      // Prevents leading \".\" in DO block from falling through to error\n      if (stream.match(singleDelimiters))\n        return null;\n\n      if (brackets.test(ch)) {\n        stream.next();\n        return \"bracket\";\n      }\n\n      if (state.commandMode > 0 && stream.match(command))\n        return \"variable-2\";\n\n      if (stream.match(intrinsicFuncs))\n        return \"builtin\";\n\n      if (stream.match(identifiers))\n        return \"variable\";\n\n      // Detect dollar-sign when not a documented intrinsic function\n      // \"^\" may introduce a GVN or SSVN - Color same as function\n      if (ch === \"$\" || ch === \"^\") {\n        stream.next();\n        return \"builtin\";\n      }\n\n      // MUMPS Indirection\n      if (ch === \"@\") {\n        stream.next();\n        return \"string-2\";\n      }\n\n      if (/[\\w%]/.test(ch)) {\n        stream.eatWhile(/[\\w%]/);\n        return \"variable\";\n      }\n\n      // Handle non-detected items\n      stream.next();\n      return \"error\";\n    }\n\n    return {\n      startState: function() {\n        return {\n          label: false,\n          commandMode: 0\n        };\n      },\n\n      token: function(stream, state) {\n        var style = tokenBase(stream, state);\n        if (state.label) return \"tag\";\n        return style;\n      }\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-mumps\", \"mumps\");\n});\n"]}}