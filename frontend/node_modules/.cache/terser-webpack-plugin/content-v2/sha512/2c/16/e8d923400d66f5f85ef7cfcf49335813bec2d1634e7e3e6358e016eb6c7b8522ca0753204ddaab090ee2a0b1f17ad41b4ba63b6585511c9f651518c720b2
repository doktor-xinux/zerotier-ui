{"code":"(this.webpackJsonpfrontend=this.webpackJsonpfrontend||[]).push([[72],{349:function(t,r,e){!function(t){\"use strict\";var r={mscgen:{keywords:[\"msc\"],options:[\"hscale\",\"width\",\"arcgradient\",\"wordwraparcs\"],constants:[\"true\",\"false\",\"on\",\"off\"],attributes:[\"label\",\"idurl\",\"id\",\"url\",\"linecolor\",\"linecolour\",\"textcolor\",\"textcolour\",\"textbgcolor\",\"textbgcolour\",\"arclinecolor\",\"arclinecolour\",\"arctextcolor\",\"arctextcolour\",\"arctextbgcolor\",\"arctextbgcolour\",\"arcskip\"],brackets:[\"\\\\{\",\"\\\\}\"],arcsWords:[\"note\",\"abox\",\"rbox\",\"box\"],arcsOthers:[\"\\\\|\\\\|\\\\|\",\"\\\\.\\\\.\\\\.\",\"---\",\"--\",\"<->\",\"==\",\"<<=>>\",\"<=>\",\"\\\\.\\\\.\",\"<<>>\",\"::\",\"<:>\",\"->\",\"=>>\",\"=>\",\">>\",\":>\",\"<-\",\"<<=\",\"<=\",\"<<\",\"<:\",\"x-\",\"-x\"],singlecomment:[\"//\",\"#\"],operators:[\"=\"]},xu:{keywords:[\"msc\",\"xu\"],options:[\"hscale\",\"width\",\"arcgradient\",\"wordwraparcs\",\"wordwrapentities\",\"watermark\"],constants:[\"true\",\"false\",\"on\",\"off\",\"auto\"],attributes:[\"label\",\"idurl\",\"id\",\"url\",\"linecolor\",\"linecolour\",\"textcolor\",\"textcolour\",\"textbgcolor\",\"textbgcolour\",\"arclinecolor\",\"arclinecolour\",\"arctextcolor\",\"arctextcolour\",\"arctextbgcolor\",\"arctextbgcolour\",\"arcskip\",\"title\",\"deactivate\",\"activate\",\"activation\"],brackets:[\"\\\\{\",\"\\\\}\"],arcsWords:[\"note\",\"abox\",\"rbox\",\"box\",\"alt\",\"else\",\"opt\",\"break\",\"par\",\"seq\",\"strict\",\"neg\",\"critical\",\"ignore\",\"consider\",\"assert\",\"loop\",\"ref\",\"exc\"],arcsOthers:[\"\\\\|\\\\|\\\\|\",\"\\\\.\\\\.\\\\.\",\"---\",\"--\",\"<->\",\"==\",\"<<=>>\",\"<=>\",\"\\\\.\\\\.\",\"<<>>\",\"::\",\"<:>\",\"->\",\"=>>\",\"=>\",\">>\",\":>\",\"<-\",\"<<=\",\"<=\",\"<<\",\"<:\",\"x-\",\"-x\"],singlecomment:[\"//\",\"#\"],operators:[\"=\"]},msgenny:{keywords:null,options:[\"hscale\",\"width\",\"arcgradient\",\"wordwraparcs\",\"wordwrapentities\",\"watermark\"],constants:[\"true\",\"false\",\"on\",\"off\",\"auto\"],attributes:null,brackets:[\"\\\\{\",\"\\\\}\"],arcsWords:[\"note\",\"abox\",\"rbox\",\"box\",\"alt\",\"else\",\"opt\",\"break\",\"par\",\"seq\",\"strict\",\"neg\",\"critical\",\"ignore\",\"consider\",\"assert\",\"loop\",\"ref\",\"exc\"],arcsOthers:[\"\\\\|\\\\|\\\\|\",\"\\\\.\\\\.\\\\.\",\"---\",\"--\",\"<->\",\"==\",\"<<=>>\",\"<=>\",\"\\\\.\\\\.\",\"<<>>\",\"::\",\"<:>\",\"->\",\"=>>\",\"=>\",\">>\",\":>\",\"<-\",\"<<=\",\"<=\",\"<<\",\"<:\",\"x-\",\"-x\"],singlecomment:[\"//\",\"#\"],operators:[\"=\"]}};function e(t){return new RegExp(\"^\\\\b(?:\"+t.join(\"|\")+\")\\\\b\",\"i\")}function n(t){return new RegExp(\"^(?:\"+t.join(\"|\")+\")\",\"i\")}function o(){return{inComment:!1,inString:!1,inAttributeList:!1,inScript:!1}}function i(t){return{inComment:t.inComment,inString:t.inString,inAttributeList:t.inAttributeList,inScript:t.inScript}}function c(t){return function(r,o){if(r.match(n(t.brackets),!0,!0))return\"bracket\";if(!o.inComment){if(r.match(/\\/\\*[^\\*\\/]*/,!0,!0))return o.inComment=!0,\"comment\";if(r.match(n(t.singlecomment),!0,!0))return r.skipToEnd(),\"comment\"}if(o.inComment)return r.match(/[^\\*\\/]*\\*\\//,!0,!0)?o.inComment=!1:r.skipToEnd(),\"comment\";if(!o.inString&&r.match(/\\\"(\\\\\\\"|[^\\\"])*/,!0,!0))return o.inString=!0,\"string\";if(o.inString)return r.match(/[^\\\"]*\\\"/,!0,!0)?o.inString=!1:r.skipToEnd(),\"string\";if(t.keywords&&r.match(e(t.keywords),!0,!0))return\"keyword\";if(r.match(e(t.options),!0,!0))return\"keyword\";if(r.match(e(t.arcsWords),!0,!0))return\"keyword\";if(r.match(n(t.arcsOthers),!0,!0))return\"keyword\";if(t.operators&&r.match(n(t.operators),!0,!0))return\"operator\";if(t.constants&&r.match(n(t.constants),!0,!0))return\"variable\";if(!t.inAttributeList&&t.attributes&&r.match(\"[\",!0,!0))return t.inAttributeList=!0,\"bracket\";if(t.inAttributeList){if(null!==t.attributes&&r.match(e(t.attributes),!0,!0))return\"attribute\";if(r.match(\"]\",!0,!0))return t.inAttributeList=!1,\"bracket\"}return r.next(),\"base\"}}t.defineMode(\"mscgen\",(function(t,e){return{startState:o,copyState:i,token:c(r[e&&e.language||\"mscgen\"]),lineComment:\"#\",blockCommentStart:\"/*\",blockCommentEnd:\"*/\"}})),t.defineMIME(\"text/x-mscgen\",\"mscgen\"),t.defineMIME(\"text/x-xu\",{name:\"mscgen\",language:\"xu\"}),t.defineMIME(\"text/x-msgenny\",{name:\"mscgen\",language:\"msgenny\"})}(e(108))}}]);","name":"static/js/72.f8cb2707.chunk.js","map":{"version":3,"sources":["static/js/72.f8cb2707.chunk.js"],"names":["this","push","module","exports","__webpack_require__","CodeMirror","languages","mscgen","keywords","options","constants","attributes","brackets","arcsWords","arcsOthers","singlecomment","operators","xu","msgenny","wordRegexpBoundary","pWords","RegExp","join","wordRegexp","startStateFn","inComment","inString","inAttributeList","inScript","copyStateFn","pState","produceTokenFunction","pConfig","pStream","match","skipToEnd","next","defineMode","_","modeConfig","startState","copyState","token","language","lineComment","blockCommentStart","blockCommentEnd","defineMIME","name","mod"],"mappings":"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"},"input":"(this[\"webpackJsonpfrontend\"] = this[\"webpackJsonpfrontend\"] || []).push([[72],{\n\n/***/ 349:\n/***/ (function(module, exports, __webpack_require__) {\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n// mode(s) for the sequence chart dsl's mscgen, xÃ¹ and msgenny\n// For more information on mscgen, see the site of the original author:\n// http://www.mcternan.me.uk/mscgen\n//\n// This mode for mscgen and the two derivative languages were\n// originally made for use in the mscgen_js interpreter\n// (https://sverweij.github.io/mscgen_js)\n(function (mod) {\n  if (true) // CommonJS\n    mod(__webpack_require__(108));else {}\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var languages = {\n    mscgen: {\n      \"keywords\": [\"msc\"],\n      \"options\": [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\"],\n      \"constants\": [\"true\", \"false\", \"on\", \"off\"],\n      \"attributes\": [\"label\", \"idurl\", \"id\", \"url\", \"linecolor\", \"linecolour\", \"textcolor\", \"textcolour\", \"textbgcolor\", \"textbgcolour\", \"arclinecolor\", \"arclinecolour\", \"arctextcolor\", \"arctextcolour\", \"arctextbgcolor\", \"arctextbgcolour\", \"arcskip\"],\n      \"brackets\": [\"\\\\{\", \"\\\\}\"],\n      // [ and  ] are brackets too, but these get handled in with lists\n      \"arcsWords\": [\"note\", \"abox\", \"rbox\", \"box\"],\n      \"arcsOthers\": [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n      \"singlecomment\": [\"//\", \"#\"],\n      \"operators\": [\"=\"]\n    },\n    xu: {\n      \"keywords\": [\"msc\", \"xu\"],\n      \"options\": [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\", \"wordwrapentities\", \"watermark\"],\n      \"constants\": [\"true\", \"false\", \"on\", \"off\", \"auto\"],\n      \"attributes\": [\"label\", \"idurl\", \"id\", \"url\", \"linecolor\", \"linecolour\", \"textcolor\", \"textcolour\", \"textbgcolor\", \"textbgcolour\", \"arclinecolor\", \"arclinecolour\", \"arctextcolor\", \"arctextcolour\", \"arctextbgcolor\", \"arctextbgcolour\", \"arcskip\", \"title\", \"deactivate\", \"activate\", \"activation\"],\n      \"brackets\": [\"\\\\{\", \"\\\\}\"],\n      // [ and  ] are brackets too, but these get handled in with lists\n      \"arcsWords\": [\"note\", \"abox\", \"rbox\", \"box\", \"alt\", \"else\", \"opt\", \"break\", \"par\", \"seq\", \"strict\", \"neg\", \"critical\", \"ignore\", \"consider\", \"assert\", \"loop\", \"ref\", \"exc\"],\n      \"arcsOthers\": [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n      \"singlecomment\": [\"//\", \"#\"],\n      \"operators\": [\"=\"]\n    },\n    msgenny: {\n      \"keywords\": null,\n      \"options\": [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\", \"wordwrapentities\", \"watermark\"],\n      \"constants\": [\"true\", \"false\", \"on\", \"off\", \"auto\"],\n      \"attributes\": null,\n      \"brackets\": [\"\\\\{\", \"\\\\}\"],\n      \"arcsWords\": [\"note\", \"abox\", \"rbox\", \"box\", \"alt\", \"else\", \"opt\", \"break\", \"par\", \"seq\", \"strict\", \"neg\", \"critical\", \"ignore\", \"consider\", \"assert\", \"loop\", \"ref\", \"exc\"],\n      \"arcsOthers\": [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n      \"singlecomment\": [\"//\", \"#\"],\n      \"operators\": [\"=\"]\n    }\n  };\n  CodeMirror.defineMode(\"mscgen\", function (_, modeConfig) {\n    var language = languages[modeConfig && modeConfig.language || \"mscgen\"];\n    return {\n      startState: startStateFn,\n      copyState: copyStateFn,\n      token: produceTokenFunction(language),\n      lineComment: \"#\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-mscgen\", \"mscgen\");\n  CodeMirror.defineMIME(\"text/x-xu\", {\n    name: \"mscgen\",\n    language: \"xu\"\n  });\n  CodeMirror.defineMIME(\"text/x-msgenny\", {\n    name: \"mscgen\",\n    language: \"msgenny\"\n  });\n\n  function wordRegexpBoundary(pWords) {\n    return new RegExp(\"^\\\\b(?:\" + pWords.join(\"|\") + \")\\\\b\", \"i\");\n  }\n\n  function wordRegexp(pWords) {\n    return new RegExp(\"^(?:\" + pWords.join(\"|\") + \")\", \"i\");\n  }\n\n  function startStateFn() {\n    return {\n      inComment: false,\n      inString: false,\n      inAttributeList: false,\n      inScript: false\n    };\n  }\n\n  function copyStateFn(pState) {\n    return {\n      inComment: pState.inComment,\n      inString: pState.inString,\n      inAttributeList: pState.inAttributeList,\n      inScript: pState.inScript\n    };\n  }\n\n  function produceTokenFunction(pConfig) {\n    return function (pStream, pState) {\n      if (pStream.match(wordRegexp(pConfig.brackets), true, true)) {\n        return \"bracket\";\n      }\n      /* comments */\n\n\n      if (!pState.inComment) {\n        if (pStream.match(/\\/\\*[^\\*\\/]*/, true, true)) {\n          pState.inComment = true;\n          return \"comment\";\n        }\n\n        if (pStream.match(wordRegexp(pConfig.singlecomment), true, true)) {\n          pStream.skipToEnd();\n          return \"comment\";\n        }\n      }\n\n      if (pState.inComment) {\n        if (pStream.match(/[^\\*\\/]*\\*\\//, true, true)) pState.inComment = false;else pStream.skipToEnd();\n        return \"comment\";\n      }\n      /* strings */\n\n\n      if (!pState.inString && pStream.match(/\\\"(\\\\\\\"|[^\\\"])*/, true, true)) {\n        pState.inString = true;\n        return \"string\";\n      }\n\n      if (pState.inString) {\n        if (pStream.match(/[^\\\"]*\\\"/, true, true)) pState.inString = false;else pStream.skipToEnd();\n        return \"string\";\n      }\n      /* keywords & operators */\n\n\n      if (!!pConfig.keywords && pStream.match(wordRegexpBoundary(pConfig.keywords), true, true)) return \"keyword\";\n      if (pStream.match(wordRegexpBoundary(pConfig.options), true, true)) return \"keyword\";\n      if (pStream.match(wordRegexpBoundary(pConfig.arcsWords), true, true)) return \"keyword\";\n      if (pStream.match(wordRegexp(pConfig.arcsOthers), true, true)) return \"keyword\";\n      if (!!pConfig.operators && pStream.match(wordRegexp(pConfig.operators), true, true)) return \"operator\";\n      if (!!pConfig.constants && pStream.match(wordRegexp(pConfig.constants), true, true)) return \"variable\";\n      /* attribute lists */\n\n      if (!pConfig.inAttributeList && !!pConfig.attributes && pStream.match('[', true, true)) {\n        pConfig.inAttributeList = true;\n        return \"bracket\";\n      }\n\n      if (pConfig.inAttributeList) {\n        if (pConfig.attributes !== null && pStream.match(wordRegexpBoundary(pConfig.attributes), true, true)) {\n          return \"attribute\";\n        }\n\n        if (pStream.match(']', true, true)) {\n          pConfig.inAttributeList = false;\n          return \"bracket\";\n        }\n      }\n\n      pStream.next();\n      return \"base\";\n    };\n  }\n});\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/mnt/Datengrab/python/Zero-tier/frontend/node_modules/codemirror/mode/mscgen/mscgen.js"],"names":["mod","require","CodeMirror","languages","mscgen","xu","msgenny","defineMode","_","modeConfig","language","startState","startStateFn","copyState","copyStateFn","token","produceTokenFunction","lineComment","blockCommentStart","blockCommentEnd","defineMIME","name","wordRegexpBoundary","pWords","RegExp","join","wordRegexp","inComment","inString","inAttributeList","inScript","pState","pConfig","pStream","match","brackets","singlecomment","skipToEnd","keywords","options","arcsWords","arcsOthers","operators","constants","attributes","next"],"mappings":"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","file":"x","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// mode(s) for the sequence chart dsl's mscgen, xÃ¹ and msgenny\n// For more information on mscgen, see the site of the original author:\n// http://www.mcternan.me.uk/mscgen\n//\n// This mode for mscgen and the two derivative languages were\n// originally made for use in the mscgen_js interpreter\n// (https://sverweij.github.io/mscgen_js)\n\n(function(mod) {\n  if ( typeof exports == \"object\" && typeof module == \"object\")// CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if ( typeof define == \"function\" && define.amd)// AMD\n    define([\"../../lib/codemirror\"], mod);\n  else// Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var languages = {\n    mscgen: {\n      \"keywords\" : [\"msc\"],\n      \"options\" : [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\"],\n      \"constants\" : [\"true\", \"false\", \"on\", \"off\"],\n      \"attributes\" : [\"label\", \"idurl\", \"id\", \"url\", \"linecolor\", \"linecolour\", \"textcolor\", \"textcolour\", \"textbgcolor\", \"textbgcolour\", \"arclinecolor\", \"arclinecolour\", \"arctextcolor\", \"arctextcolour\", \"arctextbgcolor\", \"arctextbgcolour\", \"arcskip\"],\n      \"brackets\" : [\"\\\\{\", \"\\\\}\"], // [ and  ] are brackets too, but these get handled in with lists\n      \"arcsWords\" : [\"note\", \"abox\", \"rbox\", \"box\"],\n      \"arcsOthers\" : [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n      \"singlecomment\" : [\"//\", \"#\"],\n      \"operators\" : [\"=\"]\n    },\n    xu: {\n      \"keywords\" : [\"msc\", \"xu\"],\n      \"options\" : [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\", \"wordwrapentities\", \"watermark\"],\n      \"constants\" : [\"true\", \"false\", \"on\", \"off\", \"auto\"],\n      \"attributes\" : [\"label\", \"idurl\", \"id\", \"url\", \"linecolor\", \"linecolour\", \"textcolor\", \"textcolour\", \"textbgcolor\", \"textbgcolour\", \"arclinecolor\", \"arclinecolour\", \"arctextcolor\", \"arctextcolour\", \"arctextbgcolor\", \"arctextbgcolour\", \"arcskip\", \"title\", \"deactivate\", \"activate\", \"activation\"],\n      \"brackets\" : [\"\\\\{\", \"\\\\}\"],  // [ and  ] are brackets too, but these get handled in with lists\n      \"arcsWords\" : [\"note\", \"abox\", \"rbox\", \"box\", \"alt\", \"else\", \"opt\", \"break\", \"par\", \"seq\", \"strict\", \"neg\", \"critical\", \"ignore\", \"consider\", \"assert\", \"loop\", \"ref\", \"exc\"],\n      \"arcsOthers\" : [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n      \"singlecomment\" : [\"//\", \"#\"],\n      \"operators\" : [\"=\"]\n    },\n    msgenny: {\n      \"keywords\" : null,\n      \"options\" : [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\", \"wordwrapentities\", \"watermark\"],\n      \"constants\" : [\"true\", \"false\", \"on\", \"off\", \"auto\"],\n      \"attributes\" : null,\n      \"brackets\" : [\"\\\\{\", \"\\\\}\"],\n      \"arcsWords\" : [\"note\", \"abox\", \"rbox\", \"box\", \"alt\", \"else\", \"opt\", \"break\", \"par\", \"seq\", \"strict\", \"neg\", \"critical\", \"ignore\", \"consider\", \"assert\", \"loop\", \"ref\", \"exc\"],\n      \"arcsOthers\" : [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n      \"singlecomment\" : [\"//\", \"#\"],\n      \"operators\" : [\"=\"]\n    }\n  }\n\n  CodeMirror.defineMode(\"mscgen\", function(_, modeConfig) {\n    var language = languages[modeConfig && modeConfig.language || \"mscgen\"]\n    return {\n      startState: startStateFn,\n      copyState: copyStateFn,\n      token: produceTokenFunction(language),\n      lineComment : \"#\",\n      blockCommentStart : \"/*\",\n      blockCommentEnd : \"*/\"\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-mscgen\", \"mscgen\");\n  CodeMirror.defineMIME(\"text/x-xu\", {name: \"mscgen\", language: \"xu\"});\n  CodeMirror.defineMIME(\"text/x-msgenny\", {name: \"mscgen\", language: \"msgenny\"});\n\n  function wordRegexpBoundary(pWords) {\n    return new RegExp(\"^\\\\b(?:\" + pWords.join(\"|\") + \")\\\\b\", \"i\");\n  }\n\n  function wordRegexp(pWords) {\n    return new RegExp(\"^(?:\" + pWords.join(\"|\") + \")\", \"i\");\n  }\n\n  function startStateFn() {\n    return {\n      inComment : false,\n      inString : false,\n      inAttributeList : false,\n      inScript : false\n    };\n  }\n\n  function copyStateFn(pState) {\n    return {\n      inComment : pState.inComment,\n      inString : pState.inString,\n      inAttributeList : pState.inAttributeList,\n      inScript : pState.inScript\n    };\n  }\n\n  function produceTokenFunction(pConfig) {\n\n    return function(pStream, pState) {\n      if (pStream.match(wordRegexp(pConfig.brackets), true, true)) {\n        return \"bracket\";\n      }\n      /* comments */\n      if (!pState.inComment) {\n        if (pStream.match(/\\/\\*[^\\*\\/]*/, true, true)) {\n          pState.inComment = true;\n          return \"comment\";\n        }\n        if (pStream.match(wordRegexp(pConfig.singlecomment), true, true)) {\n          pStream.skipToEnd();\n          return \"comment\";\n        }\n      }\n      if (pState.inComment) {\n        if (pStream.match(/[^\\*\\/]*\\*\\//, true, true))\n          pState.inComment = false;\n        else\n          pStream.skipToEnd();\n        return \"comment\";\n      }\n      /* strings */\n      if (!pState.inString && pStream.match(/\\\"(\\\\\\\"|[^\\\"])*/, true, true)) {\n        pState.inString = true;\n        return \"string\";\n      }\n      if (pState.inString) {\n        if (pStream.match(/[^\\\"]*\\\"/, true, true))\n          pState.inString = false;\n        else\n          pStream.skipToEnd();\n        return \"string\";\n      }\n      /* keywords & operators */\n      if (!!pConfig.keywords && pStream.match(wordRegexpBoundary(pConfig.keywords), true, true))\n        return \"keyword\";\n\n      if (pStream.match(wordRegexpBoundary(pConfig.options), true, true))\n        return \"keyword\";\n\n      if (pStream.match(wordRegexpBoundary(pConfig.arcsWords), true, true))\n        return \"keyword\";\n\n      if (pStream.match(wordRegexp(pConfig.arcsOthers), true, true))\n        return \"keyword\";\n\n      if (!!pConfig.operators && pStream.match(wordRegexp(pConfig.operators), true, true))\n        return \"operator\";\n\n      if (!!pConfig.constants && pStream.match(wordRegexp(pConfig.constants), true, true))\n        return \"variable\";\n\n      /* attribute lists */\n      if (!pConfig.inAttributeList && !!pConfig.attributes && pStream.match('[', true, true)) {\n        pConfig.inAttributeList = true;\n        return \"bracket\";\n      }\n      if (pConfig.inAttributeList) {\n        if (pConfig.attributes !== null && pStream.match(wordRegexpBoundary(pConfig.attributes), true, true)) {\n          return \"attribute\";\n        }\n        if (pStream.match(']', true, true)) {\n          pConfig.inAttributeList = false;\n          return \"bracket\";\n        }\n      }\n\n      pStream.next();\n      return \"base\";\n    };\n  }\n\n});\n"]}}