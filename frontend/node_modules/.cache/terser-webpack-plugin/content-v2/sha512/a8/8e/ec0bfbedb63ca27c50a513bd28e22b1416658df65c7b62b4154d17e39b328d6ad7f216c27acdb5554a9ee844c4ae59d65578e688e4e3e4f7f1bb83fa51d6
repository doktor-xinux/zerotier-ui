{"code":"(this.webpackJsonpfrontend=this.webpackJsonpfrontend||[]).push([[63],{339:function(e,n,t){!function(e){\"use strict\";e.defineMode(\"jinja2\",(function(){var e=[\"and\",\"as\",\"block\",\"endblock\",\"by\",\"cycle\",\"debug\",\"else\",\"elif\",\"extends\",\"filter\",\"endfilter\",\"firstof\",\"for\",\"endfor\",\"if\",\"endif\",\"ifchanged\",\"endifchanged\",\"ifequal\",\"endifequal\",\"ifnotequal\",\"endifnotequal\",\"in\",\"include\",\"load\",\"not\",\"now\",\"or\",\"parsed\",\"regroup\",\"reversed\",\"spaceless\",\"endspaceless\",\"ssi\",\"templatetag\",\"openblock\",\"closeblock\",\"openvariable\",\"closevariable\",\"openbrace\",\"closebrace\",\"opencomment\",\"closecomment\",\"widthratio\",\"url\",\"with\",\"endwith\",\"get_current_language\",\"trans\",\"endtrans\",\"noop\",\"blocktrans\",\"endblocktrans\",\"get_available_languages\",\"get_current_language_bidi\",\"plural\"],n=/^[+\\-*&%=<>!?|~^]/,t=/^[:\\[\\(\\{]/,i=[\"true\",\"false\"],r=/^(\\d[+\\-\\*\\/])?\\d+(\\.\\d+)?/;function a(a,o){var c=a.peek();if(o.incomment)return a.skipTo(\"#}\")?(a.eatWhile(/\\#|}/),o.incomment=!1):a.skipToEnd(),\"comment\";if(o.intag){if(o.operator){if(o.operator=!1,a.match(i))return\"atom\";if(a.match(r))return\"number\"}if(o.sign){if(o.sign=!1,a.match(i))return\"atom\";if(a.match(r))return\"number\"}if(o.instring)return c==o.instring&&(o.instring=!1),a.next(),\"string\";if(\"'\"==c||'\"'==c)return o.instring=c,a.next(),\"string\";if(a.match(o.intag+\"}\")||a.eat(\"-\")&&a.match(o.intag+\"}\"))return o.intag=!1,\"tag\";if(a.match(n))return o.operator=!0,\"operator\";if(a.match(t))o.sign=!0;else if(a.eat(\" \")||a.sol()){if(a.match(e))return\"keyword\";if(a.match(i))return\"atom\";if(a.match(r))return\"number\";a.sol()&&a.next()}else a.next();return\"variable\"}if(a.eat(\"{\")){if(a.eat(\"#\"))return o.incomment=!0,a.skipTo(\"#}\")?(a.eatWhile(/\\#|}/),o.incomment=!1):a.skipToEnd(),\"comment\";if(c=a.eat(/\\{|%/))return o.intag=c,\"{\"==c&&(o.intag=\"}\"),a.eat(\"-\"),\"tag\"}a.next()}return e=new RegExp(\"((\"+e.join(\")|(\")+\"))\\\\b\"),i=new RegExp(\"((\"+i.join(\")|(\")+\"))\\\\b\"),{startState:function(){return{tokenize:a}},token:function(e,n){return n.tokenize(e,n)},blockCommentStart:\"{#\",blockCommentEnd:\"#}\"}})),e.defineMIME(\"text/jinja2\",\"jinja2\")}(t(108))}}]);","name":"static/js/63.00f0a39f.chunk.js","map":{"version":3,"sources":["static/js/63.00f0a39f.chunk.js"],"names":["this","push","module","exports","__webpack_require__","CodeMirror","defineMode","keywords","operator","sign","atom","number","tokenBase","stream","state","ch","peek","incomment","skipTo","eatWhile","skipToEnd","intag","match","instring","next","eat","sol","RegExp","join","startState","tokenize","token","blockCommentStart","blockCommentEnd","defineMIME","mod"],"mappings":"CAACA,KAA2B,qBAAIA,KAA2B,sBAAK,IAAIC,KAAK,CAAC,CAAC,IAAI,CAEzE,IACA,SAAUC,EAAQC,EAASC,IAO9B,SAAUC,GACX,aAEAA,EAAWC,WAAW,UAAU,WAC9B,IAAIC,EAAW,CAAC,MAAO,KAAM,QAAS,WAAY,KAAM,QAAS,QAAS,OAAQ,OAAQ,UAAW,SAAU,YAAa,UAAW,MAAO,SAAU,KAAM,QAAS,YAAa,eAAgB,UAAW,aAAc,aAAc,gBAAiB,KAAM,UAAW,OAAQ,MAAO,MAAO,KAAM,SAAU,UAAW,WAAY,YAAa,eAAgB,MAAO,cAAe,YAAa,aAAc,eAAgB,gBAAiB,YAAa,aAAc,cAAe,eAAgB,aAAc,MAAO,OAAQ,UAAW,uBAAwB,QAAS,WAAY,OAAQ,aAAc,gBAAiB,0BAA2B,4BAA6B,UACnqBC,EAAW,oBACXC,EAAO,aACPC,EAAO,CAAC,OAAQ,SAChBC,EAAS,6BAIb,SAASC,EAAUC,EAAQC,GACzB,IAAIC,EAAKF,EAAOG,OAEhB,GAAIF,EAAMG,UAQR,OAPKJ,EAAOK,OAAO,OAGjBL,EAAOM,SAAS,QAChBL,EAAMG,WAAY,GAHlBJ,EAAOO,YAMF,UACF,GAAIN,EAAMO,MAAO,CAEtB,GAAIP,EAAMN,SAAU,CAGlB,GAFAM,EAAMN,UAAW,EAEbK,EAAOS,MAAMZ,GACf,MAAO,OAGT,GAAIG,EAAOS,MAAMX,GACf,MAAO,SAKX,GAAIG,EAAML,KAAM,CAGd,GAFAK,EAAML,MAAO,EAETI,EAAOS,MAAMZ,GACf,MAAO,OAGT,GAAIG,EAAOS,MAAMX,GACf,MAAO,SAIX,GAAIG,EAAMS,SAMR,OALIR,GAAMD,EAAMS,WACdT,EAAMS,UAAW,GAGnBV,EAAOW,OACA,SACF,GAAU,KAANT,GAAmB,KAANA,EAGtB,OAFAD,EAAMS,SAAWR,EACjBF,EAAOW,OACA,SACF,GAAIX,EAAOS,MAAMR,EAAMO,MAAQ,MAAQR,EAAOY,IAAI,MAAQZ,EAAOS,MAAMR,EAAMO,MAAQ,KAE1F,OADAP,EAAMO,OAAQ,EACP,MACF,GAAIR,EAAOS,MAAMd,GAEtB,OADAM,EAAMN,UAAW,EACV,WACF,GAAIK,EAAOS,MAAMb,GACtBK,EAAML,MAAO,OAEb,GAAII,EAAOY,IAAI,MAAQZ,EAAOa,MAAO,CACnC,GAAIb,EAAOS,MAAMf,GACf,MAAO,UAGT,GAAIM,EAAOS,MAAMZ,GACf,MAAO,OAGT,GAAIG,EAAOS,MAAMX,GACf,MAAO,SAGLE,EAAOa,OACTb,EAAOW,YAGTX,EAAOW,OAIX,MAAO,WACF,GAAIX,EAAOY,IAAI,KAAM,CAC1B,GAAIZ,EAAOY,IAAI,KAUb,OATAX,EAAMG,WAAY,EAEbJ,EAAOK,OAAO,OAGjBL,EAAOM,SAAS,QAChBL,EAAMG,WAAY,GAHlBJ,EAAOO,YAMF,UACF,GAAIL,EAAKF,EAAOY,IAAI,QASzB,OAPAX,EAAMO,MAAQN,EAEJ,KAANA,IACFD,EAAMO,MAAQ,KAGhBR,EAAOY,IAAI,KACJ,MAIXZ,EAAOW,OAIT,OAjHAjB,EAAW,IAAIoB,OAAO,KAAOpB,EAASqB,KAAK,OAAS,SACpDlB,EAAO,IAAIiB,OAAO,KAAOjB,EAAKkB,KAAK,OAAS,SAgHrC,CACLC,WAAY,WACV,MAAO,CACLC,SAAUlB,IAGdmB,MAAO,SAAelB,EAAQC,GAC5B,OAAOA,EAAMgB,SAASjB,EAAQC,IAEhCkB,kBAAmB,KACnBC,gBAAiB,SAGrB5B,EAAW6B,WAAW,cAAe,UAxInCC,CAAI/B,EAAoB"},"input":"(this[\"webpackJsonpfrontend\"] = this[\"webpackJsonpfrontend\"] || []).push([[63],{\n\n/***/ 339:\n/***/ (function(module, exports, __webpack_require__) {\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (true) // CommonJS\n    mod(__webpack_require__(108));else {}\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"jinja2\", function () {\n    var keywords = [\"and\", \"as\", \"block\", \"endblock\", \"by\", \"cycle\", \"debug\", \"else\", \"elif\", \"extends\", \"filter\", \"endfilter\", \"firstof\", \"for\", \"endfor\", \"if\", \"endif\", \"ifchanged\", \"endifchanged\", \"ifequal\", \"endifequal\", \"ifnotequal\", \"endifnotequal\", \"in\", \"include\", \"load\", \"not\", \"now\", \"or\", \"parsed\", \"regroup\", \"reversed\", \"spaceless\", \"endspaceless\", \"ssi\", \"templatetag\", \"openblock\", \"closeblock\", \"openvariable\", \"closevariable\", \"openbrace\", \"closebrace\", \"opencomment\", \"closecomment\", \"widthratio\", \"url\", \"with\", \"endwith\", \"get_current_language\", \"trans\", \"endtrans\", \"noop\", \"blocktrans\", \"endblocktrans\", \"get_available_languages\", \"get_current_language_bidi\", \"plural\"],\n        operator = /^[+\\-*&%=<>!?|~^]/,\n        sign = /^[:\\[\\(\\{]/,\n        atom = [\"true\", \"false\"],\n        number = /^(\\d[+\\-\\*\\/])?\\d+(\\.\\d+)?/;\n    keywords = new RegExp(\"((\" + keywords.join(\")|(\") + \"))\\\\b\");\n    atom = new RegExp(\"((\" + atom.join(\")|(\") + \"))\\\\b\");\n\n    function tokenBase(stream, state) {\n      var ch = stream.peek(); //Comment\n\n      if (state.incomment) {\n        if (!stream.skipTo(\"#}\")) {\n          stream.skipToEnd();\n        } else {\n          stream.eatWhile(/\\#|}/);\n          state.incomment = false;\n        }\n\n        return \"comment\"; //Tag\n      } else if (state.intag) {\n        //After operator\n        if (state.operator) {\n          state.operator = false;\n\n          if (stream.match(atom)) {\n            return \"atom\";\n          }\n\n          if (stream.match(number)) {\n            return \"number\";\n          }\n        } //After sign\n\n\n        if (state.sign) {\n          state.sign = false;\n\n          if (stream.match(atom)) {\n            return \"atom\";\n          }\n\n          if (stream.match(number)) {\n            return \"number\";\n          }\n        }\n\n        if (state.instring) {\n          if (ch == state.instring) {\n            state.instring = false;\n          }\n\n          stream.next();\n          return \"string\";\n        } else if (ch == \"'\" || ch == '\"') {\n          state.instring = ch;\n          stream.next();\n          return \"string\";\n        } else if (stream.match(state.intag + \"}\") || stream.eat(\"-\") && stream.match(state.intag + \"}\")) {\n          state.intag = false;\n          return \"tag\";\n        } else if (stream.match(operator)) {\n          state.operator = true;\n          return \"operator\";\n        } else if (stream.match(sign)) {\n          state.sign = true;\n        } else {\n          if (stream.eat(\" \") || stream.sol()) {\n            if (stream.match(keywords)) {\n              return \"keyword\";\n            }\n\n            if (stream.match(atom)) {\n              return \"atom\";\n            }\n\n            if (stream.match(number)) {\n              return \"number\";\n            }\n\n            if (stream.sol()) {\n              stream.next();\n            }\n          } else {\n            stream.next();\n          }\n        }\n\n        return \"variable\";\n      } else if (stream.eat(\"{\")) {\n        if (stream.eat(\"#\")) {\n          state.incomment = true;\n\n          if (!stream.skipTo(\"#}\")) {\n            stream.skipToEnd();\n          } else {\n            stream.eatWhile(/\\#|}/);\n            state.incomment = false;\n          }\n\n          return \"comment\"; //Open tag\n        } else if (ch = stream.eat(/\\{|%/)) {\n          //Cache close tag\n          state.intag = ch;\n\n          if (ch == \"{\") {\n            state.intag = \"}\";\n          }\n\n          stream.eat(\"-\");\n          return \"tag\";\n        }\n      }\n\n      stream.next();\n    }\n\n    ;\n    return {\n      startState: function startState() {\n        return {\n          tokenize: tokenBase\n        };\n      },\n      token: function token(stream, state) {\n        return state.tokenize(stream, state);\n      },\n      blockCommentStart: \"{#\",\n      blockCommentEnd: \"#}\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/jinja2\", \"jinja2\");\n});\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/mnt/Datengrab/python/Zero-tier/frontend/node_modules/codemirror/mode/jinja2/jinja2.js"],"names":["mod","require","CodeMirror","defineMode","keywords","operator","sign","atom","number","RegExp","join","tokenBase","stream","state","ch","peek","incomment","skipTo","skipToEnd","eatWhile","intag","match","instring","next","eat","sol","startState","tokenize","token","blockCommentStart","blockCommentEnd","defineMIME"],"mappings":"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","file":"x","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"jinja2\", function() {\n    var keywords = [\"and\", \"as\", \"block\", \"endblock\", \"by\", \"cycle\", \"debug\", \"else\", \"elif\",\n      \"extends\", \"filter\", \"endfilter\", \"firstof\", \"for\",\n      \"endfor\", \"if\", \"endif\", \"ifchanged\", \"endifchanged\",\n      \"ifequal\", \"endifequal\", \"ifnotequal\",\n      \"endifnotequal\", \"in\", \"include\", \"load\", \"not\", \"now\", \"or\",\n      \"parsed\", \"regroup\", \"reversed\", \"spaceless\",\n      \"endspaceless\", \"ssi\", \"templatetag\", \"openblock\",\n      \"closeblock\", \"openvariable\", \"closevariable\",\n      \"openbrace\", \"closebrace\", \"opencomment\",\n      \"closecomment\", \"widthratio\", \"url\", \"with\", \"endwith\",\n      \"get_current_language\", \"trans\", \"endtrans\", \"noop\", \"blocktrans\",\n      \"endblocktrans\", \"get_available_languages\",\n      \"get_current_language_bidi\", \"plural\"],\n    operator = /^[+\\-*&%=<>!?|~^]/,\n    sign = /^[:\\[\\(\\{]/,\n    atom = [\"true\", \"false\"],\n    number = /^(\\d[+\\-\\*\\/])?\\d+(\\.\\d+)?/;\n\n    keywords = new RegExp(\"((\" + keywords.join(\")|(\") + \"))\\\\b\");\n    atom = new RegExp(\"((\" + atom.join(\")|(\") + \"))\\\\b\");\n\n    function tokenBase (stream, state) {\n      var ch = stream.peek();\n\n      //Comment\n      if (state.incomment) {\n        if(!stream.skipTo(\"#}\")) {\n          stream.skipToEnd();\n        } else {\n          stream.eatWhile(/\\#|}/);\n          state.incomment = false;\n        }\n        return \"comment\";\n      //Tag\n      } else if (state.intag) {\n        //After operator\n        if(state.operator) {\n          state.operator = false;\n          if(stream.match(atom)) {\n            return \"atom\";\n          }\n          if(stream.match(number)) {\n            return \"number\";\n          }\n        }\n        //After sign\n        if(state.sign) {\n          state.sign = false;\n          if(stream.match(atom)) {\n            return \"atom\";\n          }\n          if(stream.match(number)) {\n            return \"number\";\n          }\n        }\n\n        if(state.instring) {\n          if(ch == state.instring) {\n            state.instring = false;\n          }\n          stream.next();\n          return \"string\";\n        } else if(ch == \"'\" || ch == '\"') {\n          state.instring = ch;\n          stream.next();\n          return \"string\";\n        } else if(stream.match(state.intag + \"}\") || stream.eat(\"-\") && stream.match(state.intag + \"}\")) {\n          state.intag = false;\n          return \"tag\";\n        } else if(stream.match(operator)) {\n          state.operator = true;\n          return \"operator\";\n        } else if(stream.match(sign)) {\n          state.sign = true;\n        } else {\n          if(stream.eat(\" \") || stream.sol()) {\n            if(stream.match(keywords)) {\n              return \"keyword\";\n            }\n            if(stream.match(atom)) {\n              return \"atom\";\n            }\n            if(stream.match(number)) {\n              return \"number\";\n            }\n            if(stream.sol()) {\n              stream.next();\n            }\n          } else {\n            stream.next();\n          }\n\n        }\n        return \"variable\";\n      } else if (stream.eat(\"{\")) {\n        if (stream.eat(\"#\")) {\n          state.incomment = true;\n          if(!stream.skipTo(\"#}\")) {\n            stream.skipToEnd();\n          } else {\n            stream.eatWhile(/\\#|}/);\n            state.incomment = false;\n          }\n          return \"comment\";\n        //Open tag\n        } else if (ch = stream.eat(/\\{|%/)) {\n          //Cache close tag\n          state.intag = ch;\n          if(ch == \"{\") {\n            state.intag = \"}\";\n          }\n          stream.eat(\"-\");\n          return \"tag\";\n        }\n      }\n      stream.next();\n    };\n\n    return {\n      startState: function () {\n        return {tokenize: tokenBase};\n      },\n      token: function (stream, state) {\n        return state.tokenize(stream, state);\n      },\n      blockCommentStart: \"{#\",\n      blockCommentEnd: \"#}\"\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/jinja2\", \"jinja2\");\n});\n"]}}