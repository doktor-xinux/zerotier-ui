{"code":"(this.webpackJsonpfrontend=this.webpackJsonpfrontend||[]).push([[96],{375:function(t,e,n){!function(t){\"use strict\";t.defineMode(\"smalltalk\",(function(t){var e=/[+\\-\\/\\\\*~<>=@%|&?!.,:;^]/,n=/true|false|nil|self|super|thisContext/,a=function(t,e){this.next=t,this.parent=e},i=function(t,e,n){this.name=t,this.context=e,this.eos=n},r=function(){this.context=new a(o,null),this.expectVariable=!0,this.indentation=0,this.userIndentationDelta=0};r.prototype.userIndent=function(e){this.userIndentationDelta=e>0?e/t.indentUnit-this.indentation:0};var o=function(t,r,o){var h=new i(null,r,!1),x=t.next();return'\"'===x?h=s(t,new a(s,r)):\"'\"===x?h=u(t,new a(u,r)):\"#\"===x?\"'\"===t.peek()?(t.next(),h=c(t,new a(c,r))):t.eatWhile(/[^\\s.{}\\[\\]()]/)?h.name=\"string-2\":h.name=\"meta\":\"$\"===x?(\"<\"===t.next()&&(t.eatWhile(/[^\\s>]/),t.next()),h.name=\"string-2\"):\"|\"===x&&o.expectVariable?h.context=new a(l,r):/[\\[\\]{}()]/.test(x)?(h.name=\"bracket\",h.eos=/[\\[{(]/.test(x),\"[\"===x?o.indentation++:\"]\"===x&&(o.indentation=Math.max(0,o.indentation-1))):e.test(x)?(t.eatWhile(e),h.name=\"operator\",h.eos=\";\"!==x):/\\d/.test(x)?(t.eatWhile(/[\\w\\d]/),h.name=\"number\"):/[\\w_]/.test(x)?(t.eatWhile(/[\\w\\d_]/),h.name=o.expectVariable?n.test(t.current())?\"keyword\":\"variable\":null):h.eos=o.expectVariable,h},s=function(t,e){return t.eatWhile(/[^\"]/),new i(\"comment\",t.eat('\"')?e.parent:e,!0)},u=function(t,e){return t.eatWhile(/[^']/),new i(\"string\",t.eat(\"'\")?e.parent:e,!1)},c=function(t,e){return t.eatWhile(/[^']/),new i(\"string-2\",t.eat(\"'\")?e.parent:e,!1)},l=function(t,e){var n=new i(null,e,!1);return\"|\"===t.next()?(n.context=e.parent,n.eos=!0):(t.eatWhile(/[^|]/),n.name=\"variable\"),n};return{startState:function(){return new r},token:function(t,e){if(e.userIndent(t.indentation()),t.eatSpace())return null;var n=e.context.next(t,e.context,e);return e.context=n.context,e.expectVariable=n.eos,n.name},blankLine:function(t){t.userIndent(0)},indent:function(e,n){var a=e.context.next===o&&n&&\"]\"===n.charAt(0)?-1:e.userIndentationDelta;return(e.indentation+a)*t.indentUnit},electricChars:\"]\"}})),t.defineMIME(\"text/x-stsrc\",{name:\"smalltalk\"})}(n(108))}}]);","name":"static/js/96.56ec4602.chunk.js","map":{"version":3,"sources":["static/js/96.56ec4602.chunk.js"],"names":["this","push","module","exports","__webpack_require__","CodeMirror","defineMode","config","specialChars","keywords","Context","tokenizer","parent","next","Token","name","context","eos","State","expectVariable","indentation","userIndentationDelta","prototype","userIndent","indentUnit","stream","state","token","aChar","nextComment","nextString","peek","nextSymbol","eatWhile","nextTemporaries","test","Math","max","current","eat","startState","eatSpace","blankLine","indent","textAfter","i","charAt","electricChars","defineMIME","mod"],"mappings":"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"},"input":"(this[\"webpackJsonpfrontend\"] = this[\"webpackJsonpfrontend\"] || []).push([[96],{\n\n/***/ 375:\n/***/ (function(module, exports, __webpack_require__) {\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (true) // CommonJS\n    mod(__webpack_require__(108));else {}\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode('smalltalk', function (config) {\n    var specialChars = /[+\\-\\/\\\\*~<>=@%|&?!.,:;^]/;\n    var keywords = /true|false|nil|self|super|thisContext/;\n\n    var Context = function Context(tokenizer, parent) {\n      this.next = tokenizer;\n      this.parent = parent;\n    };\n\n    var Token = function Token(name, context, eos) {\n      this.name = name;\n      this.context = context;\n      this.eos = eos;\n    };\n\n    var State = function State() {\n      this.context = new Context(next, null);\n      this.expectVariable = true;\n      this.indentation = 0;\n      this.userIndentationDelta = 0;\n    };\n\n    State.prototype.userIndent = function (indentation) {\n      this.userIndentationDelta = indentation > 0 ? indentation / config.indentUnit - this.indentation : 0;\n    };\n\n    var next = function next(stream, context, state) {\n      var token = new Token(null, context, false);\n      var aChar = stream.next();\n\n      if (aChar === '\"') {\n        token = nextComment(stream, new Context(nextComment, context));\n      } else if (aChar === '\\'') {\n        token = nextString(stream, new Context(nextString, context));\n      } else if (aChar === '#') {\n        if (stream.peek() === '\\'') {\n          stream.next();\n          token = nextSymbol(stream, new Context(nextSymbol, context));\n        } else {\n          if (stream.eatWhile(/[^\\s.{}\\[\\]()]/)) token.name = 'string-2';else token.name = 'meta';\n        }\n      } else if (aChar === '$') {\n        if (stream.next() === '<') {\n          stream.eatWhile(/[^\\s>]/);\n          stream.next();\n        }\n\n        token.name = 'string-2';\n      } else if (aChar === '|' && state.expectVariable) {\n        token.context = new Context(nextTemporaries, context);\n      } else if (/[\\[\\]{}()]/.test(aChar)) {\n        token.name = 'bracket';\n        token.eos = /[\\[{(]/.test(aChar);\n\n        if (aChar === '[') {\n          state.indentation++;\n        } else if (aChar === ']') {\n          state.indentation = Math.max(0, state.indentation - 1);\n        }\n      } else if (specialChars.test(aChar)) {\n        stream.eatWhile(specialChars);\n        token.name = 'operator';\n        token.eos = aChar !== ';'; // ; cascaded message expression\n      } else if (/\\d/.test(aChar)) {\n        stream.eatWhile(/[\\w\\d]/);\n        token.name = 'number';\n      } else if (/[\\w_]/.test(aChar)) {\n        stream.eatWhile(/[\\w\\d_]/);\n        token.name = state.expectVariable ? keywords.test(stream.current()) ? 'keyword' : 'variable' : null;\n      } else {\n        token.eos = state.expectVariable;\n      }\n\n      return token;\n    };\n\n    var nextComment = function nextComment(stream, context) {\n      stream.eatWhile(/[^\"]/);\n      return new Token('comment', stream.eat('\"') ? context.parent : context, true);\n    };\n\n    var nextString = function nextString(stream, context) {\n      stream.eatWhile(/[^']/);\n      return new Token('string', stream.eat('\\'') ? context.parent : context, false);\n    };\n\n    var nextSymbol = function nextSymbol(stream, context) {\n      stream.eatWhile(/[^']/);\n      return new Token('string-2', stream.eat('\\'') ? context.parent : context, false);\n    };\n\n    var nextTemporaries = function nextTemporaries(stream, context) {\n      var token = new Token(null, context, false);\n      var aChar = stream.next();\n\n      if (aChar === '|') {\n        token.context = context.parent;\n        token.eos = true;\n      } else {\n        stream.eatWhile(/[^|]/);\n        token.name = 'variable';\n      }\n\n      return token;\n    };\n\n    return {\n      startState: function startState() {\n        return new State();\n      },\n      token: function token(stream, state) {\n        state.userIndent(stream.indentation());\n\n        if (stream.eatSpace()) {\n          return null;\n        }\n\n        var token = state.context.next(stream, state.context, state);\n        state.context = token.context;\n        state.expectVariable = token.eos;\n        return token.name;\n      },\n      blankLine: function blankLine(state) {\n        state.userIndent(0);\n      },\n      indent: function indent(state, textAfter) {\n        var i = state.context.next === next && textAfter && textAfter.charAt(0) === ']' ? -1 : state.userIndentationDelta;\n        return (state.indentation + i) * config.indentUnit;\n      },\n      electricChars: ']'\n    };\n  });\n  CodeMirror.defineMIME('text/x-stsrc', {\n    name: 'smalltalk'\n  });\n});\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/mnt/Datengrab/python/Zero-tier/frontend/node_modules/codemirror/mode/smalltalk/smalltalk.js"],"names":["mod","require","CodeMirror","defineMode","config","specialChars","keywords","Context","tokenizer","parent","next","Token","name","context","eos","State","expectVariable","indentation","userIndentationDelta","prototype","userIndent","indentUnit","stream","state","token","aChar","nextComment","nextString","peek","nextSymbol","eatWhile","nextTemporaries","test","Math","max","current","eat","startState","eatSpace","blankLine","indent","textAfter","i","charAt","electricChars","defineMIME"],"mappings":"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","file":"x","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode('smalltalk', function(config) {\n\n  var specialChars = /[+\\-\\/\\\\*~<>=@%|&?!.,:;^]/;\n  var keywords = /true|false|nil|self|super|thisContext/;\n\n  var Context = function(tokenizer, parent) {\n    this.next = tokenizer;\n    this.parent = parent;\n  };\n\n  var Token = function(name, context, eos) {\n    this.name = name;\n    this.context = context;\n    this.eos = eos;\n  };\n\n  var State = function() {\n    this.context = new Context(next, null);\n    this.expectVariable = true;\n    this.indentation = 0;\n    this.userIndentationDelta = 0;\n  };\n\n  State.prototype.userIndent = function(indentation) {\n    this.userIndentationDelta = indentation > 0 ? (indentation / config.indentUnit - this.indentation) : 0;\n  };\n\n  var next = function(stream, context, state) {\n    var token = new Token(null, context, false);\n    var aChar = stream.next();\n\n    if (aChar === '\"') {\n      token = nextComment(stream, new Context(nextComment, context));\n\n    } else if (aChar === '\\'') {\n      token = nextString(stream, new Context(nextString, context));\n\n    } else if (aChar === '#') {\n      if (stream.peek() === '\\'') {\n        stream.next();\n        token = nextSymbol(stream, new Context(nextSymbol, context));\n      } else {\n        if (stream.eatWhile(/[^\\s.{}\\[\\]()]/))\n          token.name = 'string-2';\n        else\n          token.name = 'meta';\n      }\n\n    } else if (aChar === '$') {\n      if (stream.next() === '<') {\n        stream.eatWhile(/[^\\s>]/);\n        stream.next();\n      }\n      token.name = 'string-2';\n\n    } else if (aChar === '|' && state.expectVariable) {\n      token.context = new Context(nextTemporaries, context);\n\n    } else if (/[\\[\\]{}()]/.test(aChar)) {\n      token.name = 'bracket';\n      token.eos = /[\\[{(]/.test(aChar);\n\n      if (aChar === '[') {\n        state.indentation++;\n      } else if (aChar === ']') {\n        state.indentation = Math.max(0, state.indentation - 1);\n      }\n\n    } else if (specialChars.test(aChar)) {\n      stream.eatWhile(specialChars);\n      token.name = 'operator';\n      token.eos = aChar !== ';'; // ; cascaded message expression\n\n    } else if (/\\d/.test(aChar)) {\n      stream.eatWhile(/[\\w\\d]/);\n      token.name = 'number';\n\n    } else if (/[\\w_]/.test(aChar)) {\n      stream.eatWhile(/[\\w\\d_]/);\n      token.name = state.expectVariable ? (keywords.test(stream.current()) ? 'keyword' : 'variable') : null;\n\n    } else {\n      token.eos = state.expectVariable;\n    }\n\n    return token;\n  };\n\n  var nextComment = function(stream, context) {\n    stream.eatWhile(/[^\"]/);\n    return new Token('comment', stream.eat('\"') ? context.parent : context, true);\n  };\n\n  var nextString = function(stream, context) {\n    stream.eatWhile(/[^']/);\n    return new Token('string', stream.eat('\\'') ? context.parent : context, false);\n  };\n\n  var nextSymbol = function(stream, context) {\n    stream.eatWhile(/[^']/);\n    return new Token('string-2', stream.eat('\\'') ? context.parent : context, false);\n  };\n\n  var nextTemporaries = function(stream, context) {\n    var token = new Token(null, context, false);\n    var aChar = stream.next();\n\n    if (aChar === '|') {\n      token.context = context.parent;\n      token.eos = true;\n\n    } else {\n      stream.eatWhile(/[^|]/);\n      token.name = 'variable';\n    }\n\n    return token;\n  };\n\n  return {\n    startState: function() {\n      return new State;\n    },\n\n    token: function(stream, state) {\n      state.userIndent(stream.indentation());\n\n      if (stream.eatSpace()) {\n        return null;\n      }\n\n      var token = state.context.next(stream, state.context, state);\n      state.context = token.context;\n      state.expectVariable = token.eos;\n\n      return token.name;\n    },\n\n    blankLine: function(state) {\n      state.userIndent(0);\n    },\n\n    indent: function(state, textAfter) {\n      var i = state.context.next === next && textAfter && textAfter.charAt(0) === ']' ? -1 : state.userIndentationDelta;\n      return (state.indentation + i) * config.indentUnit;\n    },\n\n    electricChars: ']'\n  };\n\n});\n\nCodeMirror.defineMIME('text/x-stsrc', {name: 'smalltalk'});\n\n});\n"]}}