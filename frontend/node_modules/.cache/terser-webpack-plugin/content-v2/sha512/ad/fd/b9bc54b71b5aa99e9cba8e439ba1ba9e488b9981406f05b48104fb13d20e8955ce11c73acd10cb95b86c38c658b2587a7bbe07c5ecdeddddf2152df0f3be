{"code":"(this.webpackJsonpfrontend=this.webpackJsonpfrontend||[]).push([[67],{344:function(e,t,a){!function(e){\"use strict\";e.defineMode(\"mathematica\",(function(e,t){var a=\"[a-zA-Z\\\\$][a-zA-Z0-9\\\\$]*\",n=\"(?:\\\\.\\\\d+|\\\\d+\\\\.\\\\d*|\\\\d+)\",m=\"(?:`(?:`?\"+n+\")?)\",c=new RegExp(\"(?:(?:\\\\d+)(?:\\\\^\\\\^(?:\\\\.\\\\w+|\\\\w+\\\\.\\\\w*|\\\\w+)\"+m+\"?(?:\\\\*\\\\^[+-]?\\\\d+)?))\"),o=new RegExp(\"(?:\"+n+m+\"?(?:\\\\*\\\\^[+-]?\\\\d+)?)\"),r=new RegExp(\"(?:`?)(?:\"+a+\")(?:`(?:\"+a+\"))*(?:`?)\");function z(e,t){var a;return'\"'===(a=e.next())?(t.tokenize=i,t.tokenize(e,t)):\"(\"===a&&e.eat(\"*\")?(t.commentLevel++,t.tokenize=A,t.tokenize(e,t)):(e.backUp(1),e.match(c,!0,!1)||e.match(o,!0,!1)?\"number\":e.match(/(?:In|Out)\\[[0-9]*\\]/,!0,!1)?\"atom\":e.match(/([a-zA-Z\\$][a-zA-Z0-9\\$]*(?:`[a-zA-Z0-9\\$]+)*::usage)/,!0,!1)?\"meta\":e.match(/([a-zA-Z\\$][a-zA-Z0-9\\$]*(?:`[a-zA-Z0-9\\$]+)*::[a-zA-Z\\$][a-zA-Z0-9\\$]*):?/,!0,!1)?\"string-2\":e.match(/([a-zA-Z\\$][a-zA-Z0-9\\$]*\\s*:)(?:(?:[a-zA-Z\\$][a-zA-Z0-9\\$]*)|(?:[^:=>~@\\^\\&\\*\\)\\[\\]'\\?,\\|])).*/,!0,!1)||e.match(/[a-zA-Z\\$][a-zA-Z0-9\\$]*_+[a-zA-Z\\$][a-zA-Z0-9\\$]*/,!0,!1)||e.match(/[a-zA-Z\\$][a-zA-Z0-9\\$]*_+/,!0,!1)||e.match(/_+[a-zA-Z\\$][a-zA-Z0-9\\$]*/,!0,!1)?\"variable-2\":e.match(/\\\\\\[[a-zA-Z\\$][a-zA-Z0-9\\$]*\\]/,!0,!1)?\"variable-3\":e.match(/(?:\\[|\\]|{|}|\\(|\\))/,!0,!1)?\"bracket\":e.match(/(?:#[a-zA-Z\\$][a-zA-Z0-9\\$]*|#+[0-9]?)/,!0,!1)?\"variable-2\":e.match(r,!0,!1)?\"keyword\":e.match(/(?:\\\\|\\+|\\-|\\*|\\/|,|;|\\.|:|@|~|=|>|<|&|\\||_|`|'|\\^|\\?|!|%)/,!0,!1)?\"operator\":(e.next(),\"error\"))}function i(e,t){for(var a,n=!1,m=!1;null!=(a=e.next());){if('\"'===a&&!m){n=!0;break}m=!m&&\"\\\\\"===a}return n&&!m&&(t.tokenize=z),\"string\"}function A(e,t){for(var a,n;t.commentLevel>0&&null!=(n=e.next());)\"(\"===a&&\"*\"===n&&t.commentLevel++,\"*\"===a&&\")\"===n&&t.commentLevel--,a=n;return t.commentLevel<=0&&(t.tokenize=z),\"comment\"}return{startState:function(){return{tokenize:z,commentLevel:0}},token:function(e,t){return e.eatSpace()?null:t.tokenize(e,t)},blockCommentStart:\"(*\",blockCommentEnd:\"*)\"}})),e.defineMIME(\"text/x-mathematica\",{name:\"mathematica\"})}(a(108))}}]);","name":"static/js/67.cc12ad21.chunk.js","map":{"version":3,"sources":["static/js/67.cc12ad21.chunk.js"],"names":["this","push","module","exports","__webpack_require__","CodeMirror","defineMode","_config","_parserConfig","Identifier","pFloat","pPrecision","reBaseForm","RegExp","reFloatForm","reIdInContext","tokenBase","stream","state","ch","next","tokenize","tokenString","eat","commentLevel","tokenComment","backUp","match","end","escaped","prev","startState","token","eatSpace","blockCommentStart","blockCommentEnd","defineMIME","name","mod"],"mappings":"CAACA,KAA2B,qBAAIA,KAA2B,sBAAK,IAAIC,KAAK,CAAC,CAAC,IAAI,CAEzE,IACA,SAAUC,EAAQC,EAASC,IAU9B,SAAUC,GACX,aAEAA,EAAWC,WAAW,eAAe,SAAUC,EAASC,GAEtD,IAAIC,EAAa,6BAEbC,EAAS,+BAETC,EAAa,YAAcD,EAAS,MAEpCE,EAAa,IAAIC,OAAO,mDAA2CF,EAAa,2BAChFG,EAAc,IAAID,OAAO,MAAQH,EAASC,EAAa,0BACvDI,EAAgB,IAAIF,OAAO,YAAcJ,EAAa,WAAaA,EAAa,aAEpF,SAASO,EAAUC,EAAQC,GACzB,IAAIC,EAIJ,MAAW,OAFXA,EAAKF,EAAOG,SAGVF,EAAMG,SAAWC,EACVJ,EAAMG,SAASJ,EAAQC,IAIrB,MAAPC,GACEF,EAAOM,IAAI,MACbL,EAAMM,eACNN,EAAMG,SAAWI,EACVP,EAAMG,SAASJ,EAAQC,KAKlCD,EAAOS,OAAO,GAGVT,EAAOU,MAAMf,GAAY,GAAM,IAM/BK,EAAOU,MAAMb,GAAa,GAAM,GAL3B,SAWLG,EAAOU,MAAM,wBAAwB,GAAM,GACtC,OAILV,EAAOU,MAAM,yDAAyD,GAAM,GACvE,OAILV,EAAOU,MAAM,8EAA8E,GAAM,GAC5F,WAKLV,EAAOU,MAAM,mGAAmG,GAAM,IAOtHV,EAAOU,MAAM,sDAAsD,GAAM,IAIzEV,EAAOU,MAAM,8BAA8B,GAAM,IAIjDV,EAAOU,MAAM,8BAA8B,GAAM,GAd5C,aAmBLV,EAAOU,MAAM,kCAAkC,GAAM,GAChD,aAILV,EAAOU,MAAM,uBAAuB,GAAM,GACrC,UAKLV,EAAOU,MAAM,0CAA0C,GAAM,GACxD,aAILV,EAAOU,MAAMZ,GAAe,GAAM,GAC7B,UAILE,EAAOU,MAAM,8DAA8D,GAAM,GAC5E,YAITV,EAAOG,OAEA,UAGT,SAASE,EAAYL,EAAQC,GAK3B,IAJA,IAAIE,EACAQ,GAAM,EACNC,GAAU,EAEmB,OAAzBT,EAAOH,EAAOG,SAAiB,CACrC,GAAa,MAATA,IAAiBS,EAAS,CAC5BD,GAAM,EACN,MAGFC,GAAWA,GAAoB,OAATT,EAOxB,OAJIQ,IAAQC,IACVX,EAAMG,SAAWL,GAGZ,SAKT,SAASS,EAAaR,EAAQC,GAG5B,IAFA,IAAIY,EAAMV,EAEHF,EAAMM,aAAe,GAA+B,OAAzBJ,EAAOH,EAAOG,SACjC,MAATU,GAAyB,MAATV,GAAcF,EAAMM,eAC3B,MAATM,GAAyB,MAATV,GAAcF,EAAMM,eACxCM,EAAOV,EAOT,OAJIF,EAAMM,cAAgB,IACxBN,EAAMG,SAAWL,GAGZ,UAGT,MAAO,CACLe,WAAY,WACV,MAAO,CACLV,SAAUL,EACVQ,aAAc,IAGlBQ,MAAO,SAAef,EAAQC,GAC5B,OAAID,EAAOgB,WAAmB,KACvBf,EAAMG,SAASJ,EAAQC,IAEhCgB,kBAAmB,KACnBC,gBAAiB,SAGrB9B,EAAW+B,WAAW,qBAAsB,CAC1CC,KAAM,gBA7KNC,CAAIlC,EAAoB"},"input":"(this[\"webpackJsonpfrontend\"] = this[\"webpackJsonpfrontend\"] || []).push([[67],{\n\n/***/ 344:\n/***/ (function(module, exports, __webpack_require__) {\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n// Mathematica mode copyright (c) 2015 by Calin Barbat\n// Based on code by Patrick Scheibe (halirutan)\n// See: https://github.com/halirutan/Mathematica-Source-Highlighting/tree/master/src/lang-mma.js\n(function (mod) {\n  if (true) // CommonJS\n    mod(__webpack_require__(108));else {}\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode('mathematica', function (_config, _parserConfig) {\n    // used pattern building blocks\n    var Identifier = '[a-zA-Z\\\\$][a-zA-Z0-9\\\\$]*';\n    var pBase = \"(?:\\\\d+)\";\n    var pFloat = \"(?:\\\\.\\\\d+|\\\\d+\\\\.\\\\d*|\\\\d+)\";\n    var pFloatBase = \"(?:\\\\.\\\\w+|\\\\w+\\\\.\\\\w*|\\\\w+)\";\n    var pPrecision = \"(?:`(?:`?\" + pFloat + \")?)\"; // regular expressions\n\n    var reBaseForm = new RegExp('(?:' + pBase + '(?:\\\\^\\\\^' + pFloatBase + pPrecision + '?(?:\\\\*\\\\^[+-]?\\\\d+)?))');\n    var reFloatForm = new RegExp('(?:' + pFloat + pPrecision + '?(?:\\\\*\\\\^[+-]?\\\\d+)?)');\n    var reIdInContext = new RegExp('(?:`?)(?:' + Identifier + ')(?:`(?:' + Identifier + '))*(?:`?)');\n\n    function tokenBase(stream, state) {\n      var ch; // get next character\n\n      ch = stream.next(); // string\n\n      if (ch === '\"') {\n        state.tokenize = tokenString;\n        return state.tokenize(stream, state);\n      } // comment\n\n\n      if (ch === '(') {\n        if (stream.eat('*')) {\n          state.commentLevel++;\n          state.tokenize = tokenComment;\n          return state.tokenize(stream, state);\n        }\n      } // go back one character\n\n\n      stream.backUp(1); // look for numbers\n      // Numbers in a baseform\n\n      if (stream.match(reBaseForm, true, false)) {\n        return 'number';\n      } // Mathematica numbers. Floats (1.2, .2, 1.) can have optionally a precision (`float) or an accuracy definition\n      // (``float). Note: while 1.2` is possible 1.2`` is not. At the end an exponent (float*^+12) can follow.\n\n\n      if (stream.match(reFloatForm, true, false)) {\n        return 'number';\n      }\n      /* In[23] and Out[34] */\n\n\n      if (stream.match(/(?:In|Out)\\[[0-9]*\\]/, true, false)) {\n        return 'atom';\n      } // usage\n\n\n      if (stream.match(/([a-zA-Z\\$][a-zA-Z0-9\\$]*(?:`[a-zA-Z0-9\\$]+)*::usage)/, true, false)) {\n        return 'meta';\n      } // message\n\n\n      if (stream.match(/([a-zA-Z\\$][a-zA-Z0-9\\$]*(?:`[a-zA-Z0-9\\$]+)*::[a-zA-Z\\$][a-zA-Z0-9\\$]*):?/, true, false)) {\n        return 'string-2';\n      } // this makes a look-ahead match for something like variable:{_Integer}\n      // the match is then forwarded to the mma-patterns tokenizer.\n\n\n      if (stream.match(/([a-zA-Z\\$][a-zA-Z0-9\\$]*\\s*:)(?:(?:[a-zA-Z\\$][a-zA-Z0-9\\$]*)|(?:[^:=>~@\\^\\&\\*\\)\\[\\]'\\?,\\|])).*/, true, false)) {\n        return 'variable-2';\n      } // catch variables which are used together with Blank (_), BlankSequence (__) or BlankNullSequence (___)\n      // Cannot start with a number, but can have numbers at any other position. Examples\n      // blub__Integer, a1_, b34_Integer32\n\n\n      if (stream.match(/[a-zA-Z\\$][a-zA-Z0-9\\$]*_+[a-zA-Z\\$][a-zA-Z0-9\\$]*/, true, false)) {\n        return 'variable-2';\n      }\n\n      if (stream.match(/[a-zA-Z\\$][a-zA-Z0-9\\$]*_+/, true, false)) {\n        return 'variable-2';\n      }\n\n      if (stream.match(/_+[a-zA-Z\\$][a-zA-Z0-9\\$]*/, true, false)) {\n        return 'variable-2';\n      } // Named characters in Mathematica, like \\[Gamma].\n\n\n      if (stream.match(/\\\\\\[[a-zA-Z\\$][a-zA-Z0-9\\$]*\\]/, true, false)) {\n        return 'variable-3';\n      } // Match all braces separately\n\n\n      if (stream.match(/(?:\\[|\\]|{|}|\\(|\\))/, true, false)) {\n        return 'bracket';\n      } // Catch Slots (#, ##, #3, ##9 and the V10 named slots #name). I have never seen someone using more than one digit after #, so we match\n      // only one.\n\n\n      if (stream.match(/(?:#[a-zA-Z\\$][a-zA-Z0-9\\$]*|#+[0-9]?)/, true, false)) {\n        return 'variable-2';\n      } // Literals like variables, keywords, functions\n\n\n      if (stream.match(reIdInContext, true, false)) {\n        return 'keyword';\n      } // operators. Note that operators like @@ or /; are matched separately for each symbol.\n\n\n      if (stream.match(/(?:\\\\|\\+|\\-|\\*|\\/|,|;|\\.|:|@|~|=|>|<|&|\\||_|`|'|\\^|\\?|!|%)/, true, false)) {\n        return 'operator';\n      } // everything else is an error\n\n\n      stream.next(); // advance the stream.\n\n      return 'error';\n    }\n\n    function tokenString(stream, state) {\n      var next,\n          end = false,\n          escaped = false;\n\n      while ((next = stream.next()) != null) {\n        if (next === '\"' && !escaped) {\n          end = true;\n          break;\n        }\n\n        escaped = !escaped && next === '\\\\';\n      }\n\n      if (end && !escaped) {\n        state.tokenize = tokenBase;\n      }\n\n      return 'string';\n    }\n\n    ;\n\n    function tokenComment(stream, state) {\n      var prev, next;\n\n      while (state.commentLevel > 0 && (next = stream.next()) != null) {\n        if (prev === '(' && next === '*') state.commentLevel++;\n        if (prev === '*' && next === ')') state.commentLevel--;\n        prev = next;\n      }\n\n      if (state.commentLevel <= 0) {\n        state.tokenize = tokenBase;\n      }\n\n      return 'comment';\n    }\n\n    return {\n      startState: function startState() {\n        return {\n          tokenize: tokenBase,\n          commentLevel: 0\n        };\n      },\n      token: function token(stream, state) {\n        if (stream.eatSpace()) return null;\n        return state.tokenize(stream, state);\n      },\n      blockCommentStart: \"(*\",\n      blockCommentEnd: \"*)\"\n    };\n  });\n  CodeMirror.defineMIME('text/x-mathematica', {\n    name: 'mathematica'\n  });\n});\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/mnt/Datengrab/python/Zero-tier/frontend/node_modules/codemirror/mode/mathematica/mathematica.js"],"names":["mod","require","CodeMirror","defineMode","_config","_parserConfig","Identifier","pBase","pFloat","pFloatBase","pPrecision","reBaseForm","RegExp","reFloatForm","reIdInContext","tokenBase","stream","state","ch","next","tokenize","tokenString","eat","commentLevel","tokenComment","backUp","match","end","escaped","prev","startState","token","eatSpace","blockCommentStart","blockCommentEnd","defineMIME","name"],"mappings":"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","file":"x","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Mathematica mode copyright (c) 2015 by Calin Barbat\n// Based on code by Patrick Scheibe (halirutan)\n// See: https://github.com/halirutan/Mathematica-Source-Highlighting/tree/master/src/lang-mma.js\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode('mathematica', function(_config, _parserConfig) {\n\n  // used pattern building blocks\n  var Identifier = '[a-zA-Z\\\\$][a-zA-Z0-9\\\\$]*';\n  var pBase      = \"(?:\\\\d+)\";\n  var pFloat     = \"(?:\\\\.\\\\d+|\\\\d+\\\\.\\\\d*|\\\\d+)\";\n  var pFloatBase = \"(?:\\\\.\\\\w+|\\\\w+\\\\.\\\\w*|\\\\w+)\";\n  var pPrecision = \"(?:`(?:`?\"+pFloat+\")?)\";\n\n  // regular expressions\n  var reBaseForm        = new RegExp('(?:'+pBase+'(?:\\\\^\\\\^'+pFloatBase+pPrecision+'?(?:\\\\*\\\\^[+-]?\\\\d+)?))');\n  var reFloatForm       = new RegExp('(?:' + pFloat + pPrecision + '?(?:\\\\*\\\\^[+-]?\\\\d+)?)');\n  var reIdInContext     = new RegExp('(?:`?)(?:' + Identifier + ')(?:`(?:' + Identifier + '))*(?:`?)');\n\n  function tokenBase(stream, state) {\n    var ch;\n\n    // get next character\n    ch = stream.next();\n\n    // string\n    if (ch === '\"') {\n      state.tokenize = tokenString;\n      return state.tokenize(stream, state);\n    }\n\n    // comment\n    if (ch === '(') {\n      if (stream.eat('*')) {\n        state.commentLevel++;\n        state.tokenize = tokenComment;\n        return state.tokenize(stream, state);\n      }\n    }\n\n    // go back one character\n    stream.backUp(1);\n\n    // look for numbers\n    // Numbers in a baseform\n    if (stream.match(reBaseForm, true, false)) {\n      return 'number';\n    }\n\n    // Mathematica numbers. Floats (1.2, .2, 1.) can have optionally a precision (`float) or an accuracy definition\n    // (``float). Note: while 1.2` is possible 1.2`` is not. At the end an exponent (float*^+12) can follow.\n    if (stream.match(reFloatForm, true, false)) {\n      return 'number';\n    }\n\n    /* In[23] and Out[34] */\n    if (stream.match(/(?:In|Out)\\[[0-9]*\\]/, true, false)) {\n      return 'atom';\n    }\n\n    // usage\n    if (stream.match(/([a-zA-Z\\$][a-zA-Z0-9\\$]*(?:`[a-zA-Z0-9\\$]+)*::usage)/, true, false)) {\n      return 'meta';\n    }\n\n    // message\n    if (stream.match(/([a-zA-Z\\$][a-zA-Z0-9\\$]*(?:`[a-zA-Z0-9\\$]+)*::[a-zA-Z\\$][a-zA-Z0-9\\$]*):?/, true, false)) {\n      return 'string-2';\n    }\n\n    // this makes a look-ahead match for something like variable:{_Integer}\n    // the match is then forwarded to the mma-patterns tokenizer.\n    if (stream.match(/([a-zA-Z\\$][a-zA-Z0-9\\$]*\\s*:)(?:(?:[a-zA-Z\\$][a-zA-Z0-9\\$]*)|(?:[^:=>~@\\^\\&\\*\\)\\[\\]'\\?,\\|])).*/, true, false)) {\n      return 'variable-2';\n    }\n\n    // catch variables which are used together with Blank (_), BlankSequence (__) or BlankNullSequence (___)\n    // Cannot start with a number, but can have numbers at any other position. Examples\n    // blub__Integer, a1_, b34_Integer32\n    if (stream.match(/[a-zA-Z\\$][a-zA-Z0-9\\$]*_+[a-zA-Z\\$][a-zA-Z0-9\\$]*/, true, false)) {\n      return 'variable-2';\n    }\n    if (stream.match(/[a-zA-Z\\$][a-zA-Z0-9\\$]*_+/, true, false)) {\n      return 'variable-2';\n    }\n    if (stream.match(/_+[a-zA-Z\\$][a-zA-Z0-9\\$]*/, true, false)) {\n      return 'variable-2';\n    }\n\n    // Named characters in Mathematica, like \\[Gamma].\n    if (stream.match(/\\\\\\[[a-zA-Z\\$][a-zA-Z0-9\\$]*\\]/, true, false)) {\n      return 'variable-3';\n    }\n\n    // Match all braces separately\n    if (stream.match(/(?:\\[|\\]|{|}|\\(|\\))/, true, false)) {\n      return 'bracket';\n    }\n\n    // Catch Slots (#, ##, #3, ##9 and the V10 named slots #name). I have never seen someone using more than one digit after #, so we match\n    // only one.\n    if (stream.match(/(?:#[a-zA-Z\\$][a-zA-Z0-9\\$]*|#+[0-9]?)/, true, false)) {\n      return 'variable-2';\n    }\n\n    // Literals like variables, keywords, functions\n    if (stream.match(reIdInContext, true, false)) {\n      return 'keyword';\n    }\n\n    // operators. Note that operators like @@ or /; are matched separately for each symbol.\n    if (stream.match(/(?:\\\\|\\+|\\-|\\*|\\/|,|;|\\.|:|@|~|=|>|<|&|\\||_|`|'|\\^|\\?|!|%)/, true, false)) {\n      return 'operator';\n    }\n\n    // everything else is an error\n    stream.next(); // advance the stream.\n    return 'error';\n  }\n\n  function tokenString(stream, state) {\n    var next, end = false, escaped = false;\n    while ((next = stream.next()) != null) {\n      if (next === '\"' && !escaped) {\n        end = true;\n        break;\n      }\n      escaped = !escaped && next === '\\\\';\n    }\n    if (end && !escaped) {\n      state.tokenize = tokenBase;\n    }\n    return 'string';\n  };\n\n  function tokenComment(stream, state) {\n    var prev, next;\n    while(state.commentLevel > 0 && (next = stream.next()) != null) {\n      if (prev === '(' && next === '*') state.commentLevel++;\n      if (prev === '*' && next === ')') state.commentLevel--;\n      prev = next;\n    }\n    if (state.commentLevel <= 0) {\n      state.tokenize = tokenBase;\n    }\n    return 'comment';\n  }\n\n  return {\n    startState: function() {return {tokenize: tokenBase, commentLevel: 0};},\n    token: function(stream, state) {\n      if (stream.eatSpace()) return null;\n      return state.tokenize(stream, state);\n    },\n    blockCommentStart: \"(*\",\n    blockCommentEnd: \"*)\"\n  };\n});\n\nCodeMirror.defineMIME('text/x-mathematica', {\n  name: 'mathematica'\n});\n\n});\n"]}}