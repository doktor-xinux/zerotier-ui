{"code":"(this.webpackJsonpfrontend=this.webpackJsonpfrontend||[]).push([[42],{312:function(e,t,n){!function(e){\"use strict\";function t(e){for(var t={},n=e.split(\" \"),r=0;r<n.length;++r)t[n[r]]=!0;return t}e.defineMode(\"d\",(function(t,n){var r,i=t.indentUnit,o=n.statementIndentUnit||i,a=n.keywords||{},u=n.builtin||{},l=n.blockKeywords||{},s=n.atoms||{},c=n.hooks||{},f=n.multiLineStrings,d=/[+\\-*&%=<>!?|\\/]/;function m(e,t){var n=e.next();if(c[n]){var i=c[n](e,t);if(!1!==i)return i}if('\"'==n||\"'\"==n||\"`\"==n)return t.tokenize=p(n),t.tokenize(e,t);if(/[\\[\\]{}\\(\\),;\\:\\.]/.test(n))return r=n,null;if(/\\d/.test(n))return e.eatWhile(/[\\w\\.]/),\"number\";if(\"/\"==n){if(e.eat(\"+\"))return t.tokenize=y,y(e,t);if(e.eat(\"*\"))return t.tokenize=h,h(e,t);if(e.eat(\"/\"))return e.skipToEnd(),\"comment\"}if(d.test(n))return e.eatWhile(d),\"operator\";e.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);var o=e.current();return a.propertyIsEnumerable(o)?(l.propertyIsEnumerable(o)&&(r=\"newstatement\"),\"keyword\"):u.propertyIsEnumerable(o)?(l.propertyIsEnumerable(o)&&(r=\"newstatement\"),\"builtin\"):s.propertyIsEnumerable(o)?\"atom\":\"variable\"}function p(e){return function(t,n){for(var r,i=!1,o=!1;null!=(r=t.next());){if(r==e&&!i){o=!0;break}i=!i&&\"\\\\\"==r}return(o||!i&&!f)&&(n.tokenize=null),\"string\"}}function h(e,t){for(var n,r=!1;n=e.next();){if(\"/\"==n&&r){t.tokenize=null;break}r=\"*\"==n}return\"comment\"}function y(e,t){for(var n,r=!1;n=e.next();){if(\"/\"==n&&r){t.tokenize=null;break}r=\"+\"==n}return\"comment\"}function b(e,t,n,r,i){this.indented=e,this.column=t,this.type=n,this.align=r,this.prev=i}function k(e,t,n){var r=e.indented;return e.context&&\"statement\"==e.context.type&&(r=e.context.indented),e.context=new b(r,t,n,null,e.context)}function v(e){var t=e.context.type;return\")\"!=t&&\"]\"!=t&&\"}\"!=t||(e.indented=e.context.indented),e.context=e.context.prev}return{startState:function(e){return{tokenize:null,context:new b((e||0)-i,0,\"top\",!1),indented:0,startOfLine:!0}},token:function(e,t){var n=t.context;if(e.sol()&&(null==n.align&&(n.align=!1),t.indented=e.indentation(),t.startOfLine=!0),e.eatSpace())return null;r=null;var i=(t.tokenize||m)(e,t);if(\"comment\"==i||\"meta\"==i)return i;if(null==n.align&&(n.align=!0),\";\"!=r&&\":\"!=r&&\",\"!=r||\"statement\"!=n.type)if(\"{\"==r)k(t,e.column(),\"}\");else if(\"[\"==r)k(t,e.column(),\"]\");else if(\"(\"==r)k(t,e.column(),\")\");else if(\"}\"==r){for(;\"statement\"==n.type;)n=v(t);for(\"}\"==n.type&&(n=v(t));\"statement\"==n.type;)n=v(t)}else r==n.type?v(t):((\"}\"==n.type||\"top\"==n.type)&&\";\"!=r||\"statement\"==n.type&&\"newstatement\"==r)&&k(t,e.column(),\"statement\");else v(t);return t.startOfLine=!1,i},indent:function(t,n){if(t.tokenize!=m&&null!=t.tokenize)return e.Pass;var r=t.context,a=n&&n.charAt(0);\"statement\"==r.type&&\"}\"==a&&(r=r.prev);var u=a==r.type;return\"statement\"==r.type?r.indented+(\"{\"==a?0:o):r.align?r.column+(u?0:1):r.indented+(u?0:i)},electricChars:\"{}\",blockCommentStart:\"/*\",blockCommentEnd:\"*/\",blockCommentContinue:\" * \",lineComment:\"//\",fold:\"brace\"}}));var n=\"body catch class do else enum for foreach foreach_reverse if in interface mixin out scope struct switch try union unittest version while with\";e.defineMIME(\"text/x-d\",{name:\"d\",keywords:t(\"abstract alias align asm assert auto break case cast cdouble cent cfloat const continue debug default delegate delete deprecated export extern final finally function goto immutable import inout invariant is lazy macro module new nothrow override package pragma private protected public pure ref return shared short static super synchronized template this throw typedef typeid typeof volatile __FILE__ __LINE__ __gshared __traits __vector __parameters \"+n),blockKeywords:t(n),builtin:t(\"bool byte char creal dchar double float idouble ifloat int ireal long real short ubyte ucent uint ulong ushort wchar wstring void size_t sizediff_t\"),atoms:t(\"exit failure success true false null\"),hooks:{\"@\":function(e,t){return e.eatWhile(/[\\w\\$_]/),\"meta\"}}})}(n(108))}}]);","name":"static/js/42.fa6e09c5.chunk.js","map":{"version":3,"sources":["static/js/42.fa6e09c5.chunk.js"],"names":["this","push","module","exports","__webpack_require__","CodeMirror","words","str","obj","split","i","length","defineMode","config","parserConfig","curPunc","indentUnit","statementIndentUnit","keywords","builtin","blockKeywords","atoms","hooks","multiLineStrings","isOperatorChar","tokenBase","stream","state","ch","next","result","tokenize","tokenString","test","eatWhile","eat","tokenNestedComment","tokenComment","skipToEnd","cur","current","propertyIsEnumerable","quote","escaped","end","maybeEnd","Context","indented","column","type","align","prev","pushContext","col","indent","context","popContext","t","startState","basecolumn","startOfLine","token","ctx","sol","indentation","eatSpace","style","textAfter","Pass","firstChar","charAt","closing","electricChars","blockCommentStart","blockCommentEnd","blockCommentContinue","lineComment","fold","defineMIME","name","_state","mod"],"mappings":"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"},"input":"(this[\"webpackJsonpfrontend\"] = this[\"webpackJsonpfrontend\"] || []).push([[42],{\n\n/***/ 312:\n/***/ (function(module, exports, __webpack_require__) {\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (true) // CommonJS\n    mod(__webpack_require__(108));else {}\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"d\", function (config, parserConfig) {\n    var indentUnit = config.indentUnit,\n        statementIndentUnit = parserConfig.statementIndentUnit || indentUnit,\n        keywords = parserConfig.keywords || {},\n        builtin = parserConfig.builtin || {},\n        blockKeywords = parserConfig.blockKeywords || {},\n        atoms = parserConfig.atoms || {},\n        hooks = parserConfig.hooks || {},\n        multiLineStrings = parserConfig.multiLineStrings;\n    var isOperatorChar = /[+\\-*&%=<>!?|\\/]/;\n    var curPunc;\n\n    function tokenBase(stream, state) {\n      var ch = stream.next();\n\n      if (hooks[ch]) {\n        var result = hooks[ch](stream, state);\n        if (result !== false) return result;\n      }\n\n      if (ch == '\"' || ch == \"'\" || ch == \"`\") {\n        state.tokenize = tokenString(ch);\n        return state.tokenize(stream, state);\n      }\n\n      if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n        curPunc = ch;\n        return null;\n      }\n\n      if (/\\d/.test(ch)) {\n        stream.eatWhile(/[\\w\\.]/);\n        return \"number\";\n      }\n\n      if (ch == \"/\") {\n        if (stream.eat(\"+\")) {\n          state.tokenize = tokenNestedComment;\n          return tokenNestedComment(stream, state);\n        }\n\n        if (stream.eat(\"*\")) {\n          state.tokenize = tokenComment;\n          return tokenComment(stream, state);\n        }\n\n        if (stream.eat(\"/\")) {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n      }\n\n      if (isOperatorChar.test(ch)) {\n        stream.eatWhile(isOperatorChar);\n        return \"operator\";\n      }\n\n      stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n      var cur = stream.current();\n\n      if (keywords.propertyIsEnumerable(cur)) {\n        if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n        return \"keyword\";\n      }\n\n      if (builtin.propertyIsEnumerable(cur)) {\n        if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n        return \"builtin\";\n      }\n\n      if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n      return \"variable\";\n    }\n\n    function tokenString(quote) {\n      return function (stream, state) {\n        var escaped = false,\n            next,\n            end = false;\n\n        while ((next = stream.next()) != null) {\n          if (next == quote && !escaped) {\n            end = true;\n            break;\n          }\n\n          escaped = !escaped && next == \"\\\\\";\n        }\n\n        if (end || !(escaped || multiLineStrings)) state.tokenize = null;\n        return \"string\";\n      };\n    }\n\n    function tokenComment(stream, state) {\n      var maybeEnd = false,\n          ch;\n\n      while (ch = stream.next()) {\n        if (ch == \"/\" && maybeEnd) {\n          state.tokenize = null;\n          break;\n        }\n\n        maybeEnd = ch == \"*\";\n      }\n\n      return \"comment\";\n    }\n\n    function tokenNestedComment(stream, state) {\n      var maybeEnd = false,\n          ch;\n\n      while (ch = stream.next()) {\n        if (ch == \"/\" && maybeEnd) {\n          state.tokenize = null;\n          break;\n        }\n\n        maybeEnd = ch == \"+\";\n      }\n\n      return \"comment\";\n    }\n\n    function Context(indented, column, type, align, prev) {\n      this.indented = indented;\n      this.column = column;\n      this.type = type;\n      this.align = align;\n      this.prev = prev;\n    }\n\n    function pushContext(state, col, type) {\n      var indent = state.indented;\n      if (state.context && state.context.type == \"statement\") indent = state.context.indented;\n      return state.context = new Context(indent, col, type, null, state.context);\n    }\n\n    function popContext(state) {\n      var t = state.context.type;\n      if (t == \")\" || t == \"]\" || t == \"}\") state.indented = state.context.indented;\n      return state.context = state.context.prev;\n    } // Interface\n\n\n    return {\n      startState: function startState(basecolumn) {\n        return {\n          tokenize: null,\n          context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", false),\n          indented: 0,\n          startOfLine: true\n        };\n      },\n      token: function token(stream, state) {\n        var ctx = state.context;\n\n        if (stream.sol()) {\n          if (ctx.align == null) ctx.align = false;\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n        }\n\n        if (stream.eatSpace()) return null;\n        curPunc = null;\n        var style = (state.tokenize || tokenBase)(stream, state);\n        if (style == \"comment\" || style == \"meta\") return style;\n        if (ctx.align == null) ctx.align = true;\n        if ((curPunc == \";\" || curPunc == \":\" || curPunc == \",\") && ctx.type == \"statement\") popContext(state);else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");else if (curPunc == \"}\") {\n          while (ctx.type == \"statement\") {\n            ctx = popContext(state);\n          }\n\n          if (ctx.type == \"}\") ctx = popContext(state);\n\n          while (ctx.type == \"statement\") {\n            ctx = popContext(state);\n          }\n        } else if (curPunc == ctx.type) popContext(state);else if ((ctx.type == \"}\" || ctx.type == \"top\") && curPunc != ';' || ctx.type == \"statement\" && curPunc == \"newstatement\") pushContext(state, stream.column(), \"statement\");\n        state.startOfLine = false;\n        return style;\n      },\n      indent: function indent(state, textAfter) {\n        if (state.tokenize != tokenBase && state.tokenize != null) return CodeMirror.Pass;\n        var ctx = state.context,\n            firstChar = textAfter && textAfter.charAt(0);\n        if (ctx.type == \"statement\" && firstChar == \"}\") ctx = ctx.prev;\n        var closing = firstChar == ctx.type;\n        if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : statementIndentUnit);else if (ctx.align) return ctx.column + (closing ? 0 : 1);else return ctx.indented + (closing ? 0 : indentUnit);\n      },\n      electricChars: \"{}\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      blockCommentContinue: \" * \",\n      lineComment: \"//\",\n      fold: \"brace\"\n    };\n  });\n\n  function words(str) {\n    var obj = {},\n        words = str.split(\" \");\n\n    for (var i = 0; i < words.length; ++i) {\n      obj[words[i]] = true;\n    }\n\n    return obj;\n  }\n\n  var blockKeywords = \"body catch class do else enum for foreach foreach_reverse if in interface mixin \" + \"out scope struct switch try union unittest version while with\";\n  CodeMirror.defineMIME(\"text/x-d\", {\n    name: \"d\",\n    keywords: words(\"abstract alias align asm assert auto break case cast cdouble cent cfloat const continue \" + \"debug default delegate delete deprecated export extern final finally function goto immutable \" + \"import inout invariant is lazy macro module new nothrow override package pragma private \" + \"protected public pure ref return shared short static super synchronized template this \" + \"throw typedef typeid typeof volatile __FILE__ __LINE__ __gshared __traits __vector __parameters \" + blockKeywords),\n    blockKeywords: words(blockKeywords),\n    builtin: words(\"bool byte char creal dchar double float idouble ifloat int ireal long real short ubyte \" + \"ucent uint ulong ushort wchar wstring void size_t sizediff_t\"),\n    atoms: words(\"exit failure success true false null\"),\n    hooks: {\n      \"@\": function _(stream, _state) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      }\n    }\n  });\n});\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/mnt/Datengrab/python/Zero-tier/frontend/node_modules/codemirror/mode/d/d.js"],"names":["mod","require","CodeMirror","defineMode","config","parserConfig","indentUnit","statementIndentUnit","keywords","builtin","blockKeywords","atoms","hooks","multiLineStrings","isOperatorChar","curPunc","tokenBase","stream","state","ch","next","result","tokenize","tokenString","test","eatWhile","eat","tokenNestedComment","tokenComment","skipToEnd","cur","current","propertyIsEnumerable","quote","escaped","end","maybeEnd","Context","indented","column","type","align","prev","pushContext","col","indent","context","popContext","t","startState","basecolumn","startOfLine","token","ctx","sol","indentation","eatSpace","style","textAfter","Pass","firstChar","charAt","closing","electricChars","blockCommentStart","blockCommentEnd","blockCommentContinue","lineComment","fold","words","str","obj","split","i","length","defineMIME","name","_state"],"mappings":";;;;;AAAA;AACA;AAEA,CAAC,UAASA,GAAT,EAAc;EACb,IAAI,IAAJ,EAA6D;IAC3DA,GAAG,CAACC,mBAAO,CAAC,GAAD,CAAR,CAAH,CADF,KAEK,EAGH;AACH,CAPD,EAOG,UAASC,UAAT,EAAqB;EACxB;;EAEAA,UAAU,CAACC,UAAX,CAAsB,GAAtB,EAA2B,UAASC,MAAT,EAAiBC,YAAjB,EAA+B;IACxD,IAAIC,UAAU,GAAGF,MAAM,CAACE,UAAxB;IAAA,IACIC,mBAAmB,GAAGF,YAAY,CAACE,mBAAb,IAAoCD,UAD9D;IAAA,IAEIE,QAAQ,GAAGH,YAAY,CAACG,QAAb,IAAyB,EAFxC;IAAA,IAGIC,OAAO,GAAGJ,YAAY,CAACI,OAAb,IAAwB,EAHtC;IAAA,IAIIC,aAAa,GAAGL,YAAY,CAACK,aAAb,IAA8B,EAJlD;IAAA,IAKIC,KAAK,GAAGN,YAAY,CAACM,KAAb,IAAsB,EALlC;IAAA,IAMIC,KAAK,GAAGP,YAAY,CAACO,KAAb,IAAsB,EANlC;IAAA,IAOIC,gBAAgB,GAAGR,YAAY,CAACQ,gBAPpC;IAQA,IAAIC,cAAc,GAAG,kBAArB;IAEA,IAAIC,OAAJ;;IAEA,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,KAA3B,EAAkC;MAChC,IAAIC,EAAE,GAAGF,MAAM,CAACG,IAAP,EAAT;;MACA,IAAIR,KAAK,CAACO,EAAD,CAAT,EAAe;QACb,IAAIE,MAAM,GAAGT,KAAK,CAACO,EAAD,CAAL,CAAUF,MAAV,EAAkBC,KAAlB,CAAb;QACA,IAAIG,MAAM,KAAK,KAAf,EAAsB,OAAOA,MAAP;MACvB;;MACD,IAAIF,EAAE,IAAI,GAAN,IAAaA,EAAE,IAAI,GAAnB,IAA0BA,EAAE,IAAI,GAApC,EAAyC;QACvCD,KAAK,CAACI,QAAN,GAAiBC,WAAW,CAACJ,EAAD,CAA5B;QACA,OAAOD,KAAK,CAACI,QAAN,CAAeL,MAAf,EAAuBC,KAAvB,CAAP;MACD;;MACD,IAAI,qBAAqBM,IAArB,CAA0BL,EAA1B,CAAJ,EAAmC;QACjCJ,OAAO,GAAGI,EAAV;QACA,OAAO,IAAP;MACD;;MACD,IAAI,KAAKK,IAAL,CAAUL,EAAV,CAAJ,EAAmB;QACjBF,MAAM,CAACQ,QAAP,CAAgB,QAAhB;QACA,OAAO,QAAP;MACD;;MACD,IAAIN,EAAE,IAAI,GAAV,EAAe;QACb,IAAIF,MAAM,CAACS,GAAP,CAAW,GAAX,CAAJ,EAAqB;UACnBR,KAAK,CAACI,QAAN,GAAiBK,kBAAjB;UACA,OAAOA,kBAAkB,CAACV,MAAD,EAASC,KAAT,CAAzB;QACD;;QACD,IAAID,MAAM,CAACS,GAAP,CAAW,GAAX,CAAJ,EAAqB;UACnBR,KAAK,CAACI,QAAN,GAAiBM,YAAjB;UACA,OAAOA,YAAY,CAACX,MAAD,EAASC,KAAT,CAAnB;QACD;;QACD,IAAID,MAAM,CAACS,GAAP,CAAW,GAAX,CAAJ,EAAqB;UACnBT,MAAM,CAACY,SAAP;UACA,OAAO,SAAP;QACD;MACF;;MACD,IAAIf,cAAc,CAACU,IAAf,CAAoBL,EAApB,CAAJ,EAA6B;QAC3BF,MAAM,CAACQ,QAAP,CAAgBX,cAAhB;QACA,OAAO,UAAP;MACD;;MACDG,MAAM,CAACQ,QAAP,CAAgB,oBAAhB;MACA,IAAIK,GAAG,GAAGb,MAAM,CAACc,OAAP,EAAV;;MACA,IAAIvB,QAAQ,CAACwB,oBAAT,CAA8BF,GAA9B,CAAJ,EAAwC;QACtC,IAAIpB,aAAa,CAACsB,oBAAd,CAAmCF,GAAnC,CAAJ,EAA6Cf,OAAO,GAAG,cAAV;QAC7C,OAAO,SAAP;MACD;;MACD,IAAIN,OAAO,CAACuB,oBAAR,CAA6BF,GAA7B,CAAJ,EAAuC;QACrC,IAAIpB,aAAa,CAACsB,oBAAd,CAAmCF,GAAnC,CAAJ,EAA6Cf,OAAO,GAAG,cAAV;QAC7C,OAAO,SAAP;MACD;;MACD,IAAIJ,KAAK,CAACqB,oBAAN,CAA2BF,GAA3B,CAAJ,EAAqC,OAAO,MAAP;MACrC,OAAO,UAAP;IACD;;IAED,SAASP,WAAT,CAAqBU,KAArB,EAA4B;MAC1B,OAAO,UAAShB,MAAT,EAAiBC,KAAjB,EAAwB;QAC7B,IAAIgB,OAAO,GAAG,KAAd;QAAA,IAAqBd,IAArB;QAAA,IAA2Be,GAAG,GAAG,KAAjC;;QACA,OAAO,CAACf,IAAI,GAAGH,MAAM,CAACG,IAAP,EAAR,KAA0B,IAAjC,EAAuC;UACrC,IAAIA,IAAI,IAAIa,KAAR,IAAiB,CAACC,OAAtB,EAA+B;YAACC,GAAG,GAAG,IAAN;YAAY;UAAO;;UACnDD,OAAO,GAAG,CAACA,OAAD,IAAYd,IAAI,IAAI,IAA9B;QACD;;QACD,IAAIe,GAAG,IAAI,EAAED,OAAO,IAAIrB,gBAAb,CAAX,EACEK,KAAK,CAACI,QAAN,GAAiB,IAAjB;QACF,OAAO,QAAP;MACD,CATD;IAUD;;IAED,SAASM,YAAT,CAAsBX,MAAtB,EAA8BC,KAA9B,EAAqC;MACnC,IAAIkB,QAAQ,GAAG,KAAf;MAAA,IAAsBjB,EAAtB;;MACA,OAAOA,EAAE,GAAGF,MAAM,CAACG,IAAP,EAAZ,EAA2B;QACzB,IAAID,EAAE,IAAI,GAAN,IAAaiB,QAAjB,EAA2B;UACzBlB,KAAK,CAACI,QAAN,GAAiB,IAAjB;UACA;QACD;;QACDc,QAAQ,GAAIjB,EAAE,IAAI,GAAlB;MACD;;MACD,OAAO,SAAP;IACD;;IAED,SAASQ,kBAAT,CAA4BV,MAA5B,EAAoCC,KAApC,EAA2C;MACzC,IAAIkB,QAAQ,GAAG,KAAf;MAAA,IAAsBjB,EAAtB;;MACA,OAAOA,EAAE,GAAGF,MAAM,CAACG,IAAP,EAAZ,EAA2B;QACzB,IAAID,EAAE,IAAI,GAAN,IAAaiB,QAAjB,EAA2B;UACzBlB,KAAK,CAACI,QAAN,GAAiB,IAAjB;UACA;QACD;;QACDc,QAAQ,GAAIjB,EAAE,IAAI,GAAlB;MACD;;MACD,OAAO,SAAP;IACD;;IAED,SAASkB,OAAT,CAAiBC,QAAjB,EAA2BC,MAA3B,EAAmCC,IAAnC,EAAyCC,KAAzC,EAAgDC,IAAhD,EAAsD;MACpD,KAAKJ,QAAL,GAAgBA,QAAhB;MACA,KAAKC,MAAL,GAAcA,MAAd;MACA,KAAKC,IAAL,GAAYA,IAAZ;MACA,KAAKC,KAAL,GAAaA,KAAb;MACA,KAAKC,IAAL,GAAYA,IAAZ;IACD;;IACD,SAASC,WAAT,CAAqBzB,KAArB,EAA4B0B,GAA5B,EAAiCJ,IAAjC,EAAuC;MACrC,IAAIK,MAAM,GAAG3B,KAAK,CAACoB,QAAnB;MACA,IAAIpB,KAAK,CAAC4B,OAAN,IAAiB5B,KAAK,CAAC4B,OAAN,CAAcN,IAAd,IAAsB,WAA3C,EACEK,MAAM,GAAG3B,KAAK,CAAC4B,OAAN,CAAcR,QAAvB;MACF,OAAOpB,KAAK,CAAC4B,OAAN,GAAgB,IAAIT,OAAJ,CAAYQ,MAAZ,EAAoBD,GAApB,EAAyBJ,IAAzB,EAA+B,IAA/B,EAAqCtB,KAAK,CAAC4B,OAA3C,CAAvB;IACD;;IACD,SAASC,UAAT,CAAoB7B,KAApB,EAA2B;MACzB,IAAI8B,CAAC,GAAG9B,KAAK,CAAC4B,OAAN,CAAcN,IAAtB;MACA,IAAIQ,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAAjB,IAAwBA,CAAC,IAAI,GAAjC,EACE9B,KAAK,CAACoB,QAAN,GAAiBpB,KAAK,CAAC4B,OAAN,CAAcR,QAA/B;MACF,OAAOpB,KAAK,CAAC4B,OAAN,GAAgB5B,KAAK,CAAC4B,OAAN,CAAcJ,IAArC;IACD,CAtHuD,CAwHxD;;;IAEA,OAAO;MACLO,UAAU,EAAE,oBAASC,UAAT,EAAqB;QAC/B,OAAO;UACL5B,QAAQ,EAAE,IADL;UAELwB,OAAO,EAAE,IAAIT,OAAJ,CAAY,CAACa,UAAU,IAAI,CAAf,IAAoB5C,UAAhC,EAA4C,CAA5C,EAA+C,KAA/C,EAAsD,KAAtD,CAFJ;UAGLgC,QAAQ,EAAE,CAHL;UAILa,WAAW,EAAE;QAJR,CAAP;MAMD,CARI;MAULC,KAAK,EAAE,eAASnC,MAAT,EAAiBC,KAAjB,EAAwB;QAC7B,IAAImC,GAAG,GAAGnC,KAAK,CAAC4B,OAAhB;;QACA,IAAI7B,MAAM,CAACqC,GAAP,EAAJ,EAAkB;UAChB,IAAID,GAAG,CAACZ,KAAJ,IAAa,IAAjB,EAAuBY,GAAG,CAACZ,KAAJ,GAAY,KAAZ;UACvBvB,KAAK,CAACoB,QAAN,GAAiBrB,MAAM,CAACsC,WAAP,EAAjB;UACArC,KAAK,CAACiC,WAAN,GAAoB,IAApB;QACD;;QACD,IAAIlC,MAAM,CAACuC,QAAP,EAAJ,EAAuB,OAAO,IAAP;QACvBzC,OAAO,GAAG,IAAV;QACA,IAAI0C,KAAK,GAAG,CAACvC,KAAK,CAACI,QAAN,IAAkBN,SAAnB,EAA8BC,MAA9B,EAAsCC,KAAtC,CAAZ;QACA,IAAIuC,KAAK,IAAI,SAAT,IAAsBA,KAAK,IAAI,MAAnC,EAA2C,OAAOA,KAAP;QAC3C,IAAIJ,GAAG,CAACZ,KAAJ,IAAa,IAAjB,EAAuBY,GAAG,CAACZ,KAAJ,GAAY,IAAZ;QAEvB,IAAI,CAAC1B,OAAO,IAAI,GAAX,IAAkBA,OAAO,IAAI,GAA7B,IAAoCA,OAAO,IAAI,GAAhD,KAAwDsC,GAAG,CAACb,IAAJ,IAAY,WAAxE,EAAqFO,UAAU,CAAC7B,KAAD,CAAV,CAArF,KACK,IAAIH,OAAO,IAAI,GAAf,EAAoB4B,WAAW,CAACzB,KAAD,EAAQD,MAAM,CAACsB,MAAP,EAAR,EAAyB,GAAzB,CAAX,CAApB,KACA,IAAIxB,OAAO,IAAI,GAAf,EAAoB4B,WAAW,CAACzB,KAAD,EAAQD,MAAM,CAACsB,MAAP,EAAR,EAAyB,GAAzB,CAAX,CAApB,KACA,IAAIxB,OAAO,IAAI,GAAf,EAAoB4B,WAAW,CAACzB,KAAD,EAAQD,MAAM,CAACsB,MAAP,EAAR,EAAyB,GAAzB,CAAX,CAApB,KACA,IAAIxB,OAAO,IAAI,GAAf,EAAoB;UACvB,OAAOsC,GAAG,CAACb,IAAJ,IAAY,WAAnB;YAAgCa,GAAG,GAAGN,UAAU,CAAC7B,KAAD,CAAhB;UAAhC;;UACA,IAAImC,GAAG,CAACb,IAAJ,IAAY,GAAhB,EAAqBa,GAAG,GAAGN,UAAU,CAAC7B,KAAD,CAAhB;;UACrB,OAAOmC,GAAG,CAACb,IAAJ,IAAY,WAAnB;YAAgCa,GAAG,GAAGN,UAAU,CAAC7B,KAAD,CAAhB;UAAhC;QACD,CAJI,MAKA,IAAIH,OAAO,IAAIsC,GAAG,CAACb,IAAnB,EAAyBO,UAAU,CAAC7B,KAAD,CAAV,CAAzB,KACA,IAAK,CAACmC,GAAG,CAACb,IAAJ,IAAY,GAAZ,IAAmBa,GAAG,CAACb,IAAJ,IAAY,KAAhC,KAA0CzB,OAAO,IAAI,GAAtD,IAA+DsC,GAAG,CAACb,IAAJ,IAAY,WAAZ,IAA2BzB,OAAO,IAAI,cAAzG,EACH4B,WAAW,CAACzB,KAAD,EAAQD,MAAM,CAACsB,MAAP,EAAR,EAAyB,WAAzB,CAAX;QACFrB,KAAK,CAACiC,WAAN,GAAoB,KAApB;QACA,OAAOM,KAAP;MACD,CArCI;MAuCLZ,MAAM,EAAE,gBAAS3B,KAAT,EAAgBwC,SAAhB,EAA2B;QACjC,IAAIxC,KAAK,CAACI,QAAN,IAAkBN,SAAlB,IAA+BE,KAAK,CAACI,QAAN,IAAkB,IAArD,EAA2D,OAAOpB,UAAU,CAACyD,IAAlB;QAC3D,IAAIN,GAAG,GAAGnC,KAAK,CAAC4B,OAAhB;QAAA,IAAyBc,SAAS,GAAGF,SAAS,IAAIA,SAAS,CAACG,MAAV,CAAiB,CAAjB,CAAlD;QACA,IAAIR,GAAG,CAACb,IAAJ,IAAY,WAAZ,IAA2BoB,SAAS,IAAI,GAA5C,EAAiDP,GAAG,GAAGA,GAAG,CAACX,IAAV;QACjD,IAAIoB,OAAO,GAAGF,SAAS,IAAIP,GAAG,CAACb,IAA/B;QACA,IAAIa,GAAG,CAACb,IAAJ,IAAY,WAAhB,EAA6B,OAAOa,GAAG,CAACf,QAAJ,IAAgBsB,SAAS,IAAI,GAAb,GAAmB,CAAnB,GAAuBrD,mBAAvC,CAAP,CAA7B,KACK,IAAI8C,GAAG,CAACZ,KAAR,EAAe,OAAOY,GAAG,CAACd,MAAJ,IAAcuB,OAAO,GAAG,CAAH,GAAO,CAA5B,CAAP,CAAf,KACA,OAAOT,GAAG,CAACf,QAAJ,IAAgBwB,OAAO,GAAG,CAAH,GAAOxD,UAA9B,CAAP;MACN,CA/CI;MAiDLyD,aAAa,EAAE,IAjDV;MAkDLC,iBAAiB,EAAE,IAlDd;MAmDLC,eAAe,EAAE,IAnDZ;MAoDLC,oBAAoB,EAAE,KApDjB;MAqDLC,WAAW,EAAE,IArDR;MAsDLC,IAAI,EAAE;IAtDD,CAAP;EAwDD,CAlLD;;EAoLE,SAASC,KAAT,CAAeC,GAAf,EAAoB;IAClB,IAAIC,GAAG,GAAG,EAAV;IAAA,IAAcF,KAAK,GAAGC,GAAG,CAACE,KAAJ,CAAU,GAAV,CAAtB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACK,MAA1B,EAAkC,EAAED,CAApC;MAAuCF,GAAG,CAACF,KAAK,CAACI,CAAD,CAAN,CAAH,GAAgB,IAAhB;IAAvC;;IACA,OAAOF,GAAP;EACD;;EAED,IAAI7D,aAAa,GAAG,qFACA,+DADpB;EAGAR,UAAU,CAACyE,UAAX,CAAsB,UAAtB,EAAkC;IAChCC,IAAI,EAAE,GAD0B;IAEhCpE,QAAQ,EAAE6D,KAAK,CAAC,6FACA,+FADA,GAEA,0FAFA,GAGA,wFAHA,GAIA,kGAJA,GAKA3D,aALD,CAFiB;IAQhCA,aAAa,EAAE2D,KAAK,CAAC3D,aAAD,CARY;IAShCD,OAAO,EAAE4D,KAAK,CAAC,4FACA,8DADD,CATkB;IAWhC1D,KAAK,EAAE0D,KAAK,CAAC,sCAAD,CAXoB;IAYhCzD,KAAK,EAAE;MACL,KAAK,WAASK,MAAT,EAAiB4D,MAAjB,EAAyB;QAC5B5D,MAAM,CAACQ,QAAP,CAAgB,SAAhB;QACA,OAAO,MAAP;MACD;IAJI;EAZyB,CAAlC;AAoBD,CA3ND,E","file":"x","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"d\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit,\n      statementIndentUnit = parserConfig.statementIndentUnit || indentUnit,\n      keywords = parserConfig.keywords || {},\n      builtin = parserConfig.builtin || {},\n      blockKeywords = parserConfig.blockKeywords || {},\n      atoms = parserConfig.atoms || {},\n      hooks = parserConfig.hooks || {},\n      multiLineStrings = parserConfig.multiLineStrings;\n  var isOperatorChar = /[+\\-*&%=<>!?|\\/]/;\n\n  var curPunc;\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (hooks[ch]) {\n      var result = hooks[ch](stream, state);\n      if (result !== false) return result;\n    }\n    if (ch == '\"' || ch == \"'\" || ch == \"`\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    }\n    if (/\\d/.test(ch)) {\n      stream.eatWhile(/[\\w\\.]/);\n      return \"number\";\n    }\n    if (ch == \"/\") {\n      if (stream.eat(\"+\")) {\n        state.tokenize = tokenNestedComment;\n        return tokenNestedComment(stream, state);\n      }\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      }\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (isOperatorChar.test(ch)) {\n      stream.eatWhile(isOperatorChar);\n      return \"operator\";\n    }\n    stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n    var cur = stream.current();\n    if (keywords.propertyIsEnumerable(cur)) {\n      if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n      return \"keyword\";\n    }\n    if (builtin.propertyIsEnumerable(cur)) {\n      if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n      return \"builtin\";\n    }\n    if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n    return \"variable\";\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (end || !(escaped || multiLineStrings))\n        state.tokenize = null;\n      return \"string\";\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = null;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return \"comment\";\n  }\n\n  function tokenNestedComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = null;\n        break;\n      }\n      maybeEnd = (ch == \"+\");\n    }\n    return \"comment\";\n  }\n\n  function Context(indented, column, type, align, prev) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.align = align;\n    this.prev = prev;\n  }\n  function pushContext(state, col, type) {\n    var indent = state.indented;\n    if (state.context && state.context.type == \"statement\")\n      indent = state.context.indented;\n    return state.context = new Context(indent, col, type, null, state.context);\n  }\n  function popContext(state) {\n    var t = state.context.type;\n    if (t == \")\" || t == \"]\" || t == \"}\")\n      state.indented = state.context.indented;\n    return state.context = state.context.prev;\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n      return {\n        tokenize: null,\n        context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", false),\n        indented: 0,\n        startOfLine: true\n      };\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n      }\n      if (stream.eatSpace()) return null;\n      curPunc = null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\" || style == \"meta\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if ((curPunc == \";\" || curPunc == \":\" || curPunc == \",\") && ctx.type == \"statement\") popContext(state);\n      else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n      else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n      else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n      else if (curPunc == \"}\") {\n        while (ctx.type == \"statement\") ctx = popContext(state);\n        if (ctx.type == \"}\") ctx = popContext(state);\n        while (ctx.type == \"statement\") ctx = popContext(state);\n      }\n      else if (curPunc == ctx.type) popContext(state);\n      else if (((ctx.type == \"}\" || ctx.type == \"top\") && curPunc != ';') || (ctx.type == \"statement\" && curPunc == \"newstatement\"))\n        pushContext(state, stream.column(), \"statement\");\n      state.startOfLine = false;\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase && state.tokenize != null) return CodeMirror.Pass;\n      var ctx = state.context, firstChar = textAfter && textAfter.charAt(0);\n      if (ctx.type == \"statement\" && firstChar == \"}\") ctx = ctx.prev;\n      var closing = firstChar == ctx.type;\n      if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : statementIndentUnit);\n      else if (ctx.align) return ctx.column + (closing ? 0 : 1);\n      else return ctx.indented + (closing ? 0 : indentUnit);\n    },\n\n    electricChars: \"{}\",\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    blockCommentContinue: \" * \",\n    lineComment: \"//\",\n    fold: \"brace\"\n  };\n});\n\n  function words(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n\n  var blockKeywords = \"body catch class do else enum for foreach foreach_reverse if in interface mixin \" +\n                      \"out scope struct switch try union unittest version while with\";\n\n  CodeMirror.defineMIME(\"text/x-d\", {\n    name: \"d\",\n    keywords: words(\"abstract alias align asm assert auto break case cast cdouble cent cfloat const continue \" +\n                    \"debug default delegate delete deprecated export extern final finally function goto immutable \" +\n                    \"import inout invariant is lazy macro module new nothrow override package pragma private \" +\n                    \"protected public pure ref return shared short static super synchronized template this \" +\n                    \"throw typedef typeid typeof volatile __FILE__ __LINE__ __gshared __traits __vector __parameters \" +\n                    blockKeywords),\n    blockKeywords: words(blockKeywords),\n    builtin: words(\"bool byte char creal dchar double float idouble ifloat int ireal long real short ubyte \" +\n                   \"ucent uint ulong ushort wchar wstring void size_t sizediff_t\"),\n    atoms: words(\"exit failure success true false null\"),\n    hooks: {\n      \"@\": function(stream, _state) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      }\n    }\n  });\n\n});\n"]}}