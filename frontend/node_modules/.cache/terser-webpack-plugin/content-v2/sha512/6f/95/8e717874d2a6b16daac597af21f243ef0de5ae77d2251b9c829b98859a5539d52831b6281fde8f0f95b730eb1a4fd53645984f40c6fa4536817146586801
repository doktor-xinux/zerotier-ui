{"code":"(this.webpackJsonpfrontend=this.webpackJsonpfrontend||[]).push([[89],{367:function(r,e,t){!function(r){\"use strict\";r.defineMode(\"rpm-changes\",(function(){var r=/^-+$/,e=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)  ?\\d{1,2} \\d{2}:\\d{2}(:\\d{2})? [A-Z]{3,4} \\d{4} - /,t=/^[\\w+.-]+@[\\w.-]+/;return{token:function(n){if(n.sol()){if(n.match(r))return\"tag\";if(n.match(e))return\"tag\"}return n.match(t)?\"string\":(n.next(),null)}}})),r.defineMIME(\"text/x-rpm-changes\",\"rpm-changes\"),r.defineMode(\"rpm-spec\",(function(){var r=/^(i386|i586|i686|x86_64|ppc64le|ppc64|ppc|ia64|s390x|s390|sparc64|sparcv9|sparc|noarch|alphaev6|alpha|hppa|mipsel)/,e=/^[a-zA-Z0-9()]+:/,t=/^%(debug_package|package|description|prep|build|install|files|clean|changelog|preinstall|preun|postinstall|postun|pretrans|posttrans|pre|post|triggerin|triggerun|verifyscript|check|triggerpostun|triggerprein|trigger)/,n=/^%(ifnarch|ifarch|if)/,a=/^%(else|endif)/,c=/^(\\!|\\?|\\<\\=|\\<|\\>\\=|\\>|\\=\\=|\\&\\&|\\|\\|)/;return{startState:function(){return{controlFlow:!1,macroParameters:!1,section:!1}},token:function(i,o){if(\"#\"==i.peek())return i.skipToEnd(),\"comment\";if(i.sol()){if(i.match(e))return\"header\";if(i.match(t))return\"atom\"}if(i.match(/^\\$\\w+/))return\"def\";if(i.match(/^\\$\\{\\w+\\}/))return\"def\";if(i.match(a))return\"keyword\";if(i.match(n))return o.controlFlow=!0,\"keyword\";if(o.controlFlow){if(i.match(c))return\"operator\";if(i.match(/^(\\d+)/))return\"number\";i.eol()&&(o.controlFlow=!1)}if(i.match(r))return i.eol()&&(o.controlFlow=!1),\"number\";if(i.match(/^%[\\w]+/))return i.match(\"(\")&&(o.macroParameters=!0),\"keyword\";if(o.macroParameters){if(i.match(/^\\d+/))return\"number\";if(i.match(\")\"))return o.macroParameters=!1,\"keyword\"}return i.match(/^%\\{\\??[\\w \\-\\:\\!]+\\}/)?(i.eol()&&(o.controlFlow=!1),\"def\"):(i.next(),null)}}})),r.defineMIME(\"text/x-rpm-spec\",\"rpm-spec\")}(t(108))}}]);","name":"static/js/89.e157e00c.chunk.js","map":{"version":3,"sources":["static/js/89.e157e00c.chunk.js"],"names":["this","push","module","exports","__webpack_require__","CodeMirror","defineMode","headerSeparator","headerLine","simpleEmail","token","stream","sol","match","next","defineMIME","arch","preamble","section","control_flow_complex","control_flow_simple","operators","startState","controlFlow","macroParameters","state","peek","skipToEnd","eol","mod"],"mappings":"CAACA,KAA2B,qBAAIA,KAA2B,sBAAK,IAAIC,KAAK,CAAC,CAAC,IAAI,CAEzE,IACA,SAAUC,EAAQC,EAASC,IAO9B,SAAUC,GACX,aAEAA,EAAWC,WAAW,eAAe,WACnC,IAAIC,EAAkB,OAClBC,EAAa,sIACbC,EAAc,oBAClB,MAAO,CACLC,MAAO,SAAeC,GACpB,GAAIA,EAAOC,MAAO,CAChB,GAAID,EAAOE,MAAMN,GACf,MAAO,MAGT,GAAII,EAAOE,MAAML,GACf,MAAO,MAIX,OAAIG,EAAOE,MAAMJ,GACR,UAGTE,EAAOG,OACA,WAIbT,EAAWU,WAAW,qBAAsB,eAE5CV,EAAWC,WAAW,YAAY,WAChC,IAAIU,EAAO,qHACPC,EAAW,mBACXC,EAAU,2NACVC,EAAuB,wBAEvBC,EAAsB,iBAEtBC,EAAY,0CAEhB,MAAO,CACLC,WAAY,WACV,MAAO,CACLC,aAAa,EACbC,iBAAiB,EACjBN,SAAS,IAGbR,MAAO,SAAeC,EAAQc,GAG5B,GAAU,KAFDd,EAAOe,OAId,OADAf,EAAOgB,YACA,UAGT,GAAIhB,EAAOC,MAAO,CAChB,GAAID,EAAOE,MAAMI,GACf,MAAO,SAGT,GAAIN,EAAOE,MAAMK,GACf,MAAO,OAIX,GAAIP,EAAOE,MAAM,UACf,MAAO,MAIT,GAAIF,EAAOE,MAAM,cACf,MAAO,MAIT,GAAIF,EAAOE,MAAMO,GACf,MAAO,UAGT,GAAIT,EAAOE,MAAMM,GAEf,OADAM,EAAMF,aAAc,EACb,UAGT,GAAIE,EAAMF,YAAa,CACrB,GAAIZ,EAAOE,MAAMQ,GACf,MAAO,WAGT,GAAIV,EAAOE,MAAM,UACf,MAAO,SAGLF,EAAOiB,QACTH,EAAMF,aAAc,GAIxB,GAAIZ,EAAOE,MAAMG,GAKf,OAJIL,EAAOiB,QACTH,EAAMF,aAAc,GAGf,SAIT,GAAIZ,EAAOE,MAAM,WAKf,OAJIF,EAAOE,MAAM,OACfY,EAAMD,iBAAkB,GAGnB,UAGT,GAAIC,EAAMD,gBAAiB,CACzB,GAAIb,EAAOE,MAAM,QACf,MAAO,SAGT,GAAIF,EAAOE,MAAM,KAEf,OADAY,EAAMD,iBAAkB,EACjB,UAKX,OAAIb,EAAOE,MAAM,0BACXF,EAAOiB,QACTH,EAAMF,aAAc,GAGf,QAITZ,EAAOG,OACA,WAIbT,EAAWU,WAAW,kBAAmB,YA/IvCc,CAAIzB,EAAoB"},"input":"(this[\"webpackJsonpfrontend\"] = this[\"webpackJsonpfrontend\"] || []).push([[89],{\n\n/***/ 367:\n/***/ (function(module, exports, __webpack_require__) {\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (true) // CommonJS\n    mod(__webpack_require__(108));else {}\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"rpm-changes\", function () {\n    var headerSeparator = /^-+$/;\n    var headerLine = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)  ?\\d{1,2} \\d{2}:\\d{2}(:\\d{2})? [A-Z]{3,4} \\d{4} - /;\n    var simpleEmail = /^[\\w+.-]+@[\\w.-]+/;\n    return {\n      token: function token(stream) {\n        if (stream.sol()) {\n          if (stream.match(headerSeparator)) {\n            return 'tag';\n          }\n\n          if (stream.match(headerLine)) {\n            return 'tag';\n          }\n        }\n\n        if (stream.match(simpleEmail)) {\n          return 'string';\n        }\n\n        stream.next();\n        return null;\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-rpm-changes\", \"rpm-changes\"); // Quick and dirty spec file highlighting\n\n  CodeMirror.defineMode(\"rpm-spec\", function () {\n    var arch = /^(i386|i586|i686|x86_64|ppc64le|ppc64|ppc|ia64|s390x|s390|sparc64|sparcv9|sparc|noarch|alphaev6|alpha|hppa|mipsel)/;\n    var preamble = /^[a-zA-Z0-9()]+:/;\n    var section = /^%(debug_package|package|description|prep|build|install|files|clean|changelog|preinstall|preun|postinstall|postun|pretrans|posttrans|pre|post|triggerin|triggerun|verifyscript|check|triggerpostun|triggerprein|trigger)/;\n    var control_flow_complex = /^%(ifnarch|ifarch|if)/; // rpm control flow macros\n\n    var control_flow_simple = /^%(else|endif)/; // rpm control flow macros\n\n    var operators = /^(\\!|\\?|\\<\\=|\\<|\\>\\=|\\>|\\=\\=|\\&\\&|\\|\\|)/; // operators in control flow macros\n\n    return {\n      startState: function startState() {\n        return {\n          controlFlow: false,\n          macroParameters: false,\n          section: false\n        };\n      },\n      token: function token(stream, state) {\n        var ch = stream.peek();\n\n        if (ch == \"#\") {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n\n        if (stream.sol()) {\n          if (stream.match(preamble)) {\n            return \"header\";\n          }\n\n          if (stream.match(section)) {\n            return \"atom\";\n          }\n        }\n\n        if (stream.match(/^\\$\\w+/)) {\n          return \"def\";\n        } // Variables like '$RPM_BUILD_ROOT'\n\n\n        if (stream.match(/^\\$\\{\\w+\\}/)) {\n          return \"def\";\n        } // Variables like '${RPM_BUILD_ROOT}'\n\n\n        if (stream.match(control_flow_simple)) {\n          return \"keyword\";\n        }\n\n        if (stream.match(control_flow_complex)) {\n          state.controlFlow = true;\n          return \"keyword\";\n        }\n\n        if (state.controlFlow) {\n          if (stream.match(operators)) {\n            return \"operator\";\n          }\n\n          if (stream.match(/^(\\d+)/)) {\n            return \"number\";\n          }\n\n          if (stream.eol()) {\n            state.controlFlow = false;\n          }\n        }\n\n        if (stream.match(arch)) {\n          if (stream.eol()) {\n            state.controlFlow = false;\n          }\n\n          return \"number\";\n        } // Macros like '%make_install' or '%attr(0775,root,root)'\n\n\n        if (stream.match(/^%[\\w]+/)) {\n          if (stream.match('(')) {\n            state.macroParameters = true;\n          }\n\n          return \"keyword\";\n        }\n\n        if (state.macroParameters) {\n          if (stream.match(/^\\d+/)) {\n            return \"number\";\n          }\n\n          if (stream.match(')')) {\n            state.macroParameters = false;\n            return \"keyword\";\n          }\n        } // Macros like '%{defined fedora}'\n\n\n        if (stream.match(/^%\\{\\??[\\w \\-\\:\\!]+\\}/)) {\n          if (stream.eol()) {\n            state.controlFlow = false;\n          }\n\n          return \"def\";\n        } //TODO: Include bash script sub-parser (CodeMirror supports that)\n\n\n        stream.next();\n        return null;\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-rpm-spec\", \"rpm-spec\");\n});\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/mnt/Datengrab/python/Zero-tier/frontend/node_modules/codemirror/mode/rpm/rpm.js"],"names":["mod","require","CodeMirror","defineMode","headerSeparator","headerLine","simpleEmail","token","stream","sol","match","next","defineMIME","arch","preamble","section","control_flow_complex","control_flow_simple","operators","startState","controlFlow","macroParameters","state","ch","peek","skipToEnd","eol"],"mappings":"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","file":"x","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"rpm-changes\", function() {\n  var headerSeparator = /^-+$/;\n  var headerLine = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)  ?\\d{1,2} \\d{2}:\\d{2}(:\\d{2})? [A-Z]{3,4} \\d{4} - /;\n  var simpleEmail = /^[\\w+.-]+@[\\w.-]+/;\n\n  return {\n    token: function(stream) {\n      if (stream.sol()) {\n        if (stream.match(headerSeparator)) { return 'tag'; }\n        if (stream.match(headerLine)) { return 'tag'; }\n      }\n      if (stream.match(simpleEmail)) { return 'string'; }\n      stream.next();\n      return null;\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-rpm-changes\", \"rpm-changes\");\n\n// Quick and dirty spec file highlighting\n\nCodeMirror.defineMode(\"rpm-spec\", function() {\n  var arch = /^(i386|i586|i686|x86_64|ppc64le|ppc64|ppc|ia64|s390x|s390|sparc64|sparcv9|sparc|noarch|alphaev6|alpha|hppa|mipsel)/;\n\n  var preamble = /^[a-zA-Z0-9()]+:/;\n  var section = /^%(debug_package|package|description|prep|build|install|files|clean|changelog|preinstall|preun|postinstall|postun|pretrans|posttrans|pre|post|triggerin|triggerun|verifyscript|check|triggerpostun|triggerprein|trigger)/;\n  var control_flow_complex = /^%(ifnarch|ifarch|if)/; // rpm control flow macros\n  var control_flow_simple = /^%(else|endif)/; // rpm control flow macros\n  var operators = /^(\\!|\\?|\\<\\=|\\<|\\>\\=|\\>|\\=\\=|\\&\\&|\\|\\|)/; // operators in control flow macros\n\n  return {\n    startState: function () {\n        return {\n          controlFlow: false,\n          macroParameters: false,\n          section: false\n        };\n    },\n    token: function (stream, state) {\n      var ch = stream.peek();\n      if (ch == \"#\") { stream.skipToEnd(); return \"comment\"; }\n\n      if (stream.sol()) {\n        if (stream.match(preamble)) { return \"header\"; }\n        if (stream.match(section)) { return \"atom\"; }\n      }\n\n      if (stream.match(/^\\$\\w+/)) { return \"def\"; } // Variables like '$RPM_BUILD_ROOT'\n      if (stream.match(/^\\$\\{\\w+\\}/)) { return \"def\"; } // Variables like '${RPM_BUILD_ROOT}'\n\n      if (stream.match(control_flow_simple)) { return \"keyword\"; }\n      if (stream.match(control_flow_complex)) {\n        state.controlFlow = true;\n        return \"keyword\";\n      }\n      if (state.controlFlow) {\n        if (stream.match(operators)) { return \"operator\"; }\n        if (stream.match(/^(\\d+)/)) { return \"number\"; }\n        if (stream.eol()) { state.controlFlow = false; }\n      }\n\n      if (stream.match(arch)) {\n        if (stream.eol()) { state.controlFlow = false; }\n        return \"number\";\n      }\n\n      // Macros like '%make_install' or '%attr(0775,root,root)'\n      if (stream.match(/^%[\\w]+/)) {\n        if (stream.match('(')) { state.macroParameters = true; }\n        return \"keyword\";\n      }\n      if (state.macroParameters) {\n        if (stream.match(/^\\d+/)) { return \"number\";}\n        if (stream.match(')')) {\n          state.macroParameters = false;\n          return \"keyword\";\n        }\n      }\n\n      // Macros like '%{defined fedora}'\n      if (stream.match(/^%\\{\\??[\\w \\-\\:\\!]+\\}/)) {\n        if (stream.eol()) { state.controlFlow = false; }\n        return \"def\";\n      }\n\n      //TODO: Include bash script sub-parser (CodeMirror supports that)\n      stream.next();\n      return null;\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-rpm-spec\", \"rpm-spec\");\n\n});\n"]}}