{"code":"(this.webpackJsonpfrontend=this.webpackJsonpfrontend||[]).push([[38],{291:function(e,t,n){!function(e){\"use strict\";e.defineMode(\"coffeescript\",(function(e,t){var n=\"error\";function r(e){return new RegExp(\"^((\"+e.join(\")|(\")+\"))\\\\b\")}var o=/^(?:->|=>|\\+[+=]?|-[\\-=]?|\\*[\\*=]?|\\/[\\/=]?|[=!]=|<[><]?=?|>>?=?|%=?|&=?|\\|=?|\\^=?|\\~|!|\\?|(or|and|\\|\\||&&|\\?)=)/,i=/^(?:[()\\[\\]{},:`=;]|\\.\\.?\\.?)/,c=/^[_A-Za-z$][_A-Za-z$0-9]*/,f=/^@[_A-Za-z$][_A-Za-z$0-9]*/,p=r([\"and\",\"or\",\"not\",\"is\",\"isnt\",\"in\",\"instanceof\",\"typeof\"]),a=[\"for\",\"while\",\"loop\",\"if\",\"unless\",\"else\",\"switch\",\"try\",\"catch\",\"finally\",\"class\"],s=[\"break\",\"by\",\"continue\",\"debugger\",\"delete\",\"do\",\"in\",\"of\",\"new\",\"return\",\"then\",\"this\",\"@\",\"throw\",\"when\",\"until\",\"extends\"],u=r(a.concat(s));a=r(a);var l=/^('{3}|\\\"{3}|['\\\"])/,d=/^(\\/{3}|\\/)/,h=r([\"Infinity\",\"NaN\",\"undefined\",\"null\",\"true\",\"false\",\"on\",\"off\",\"yes\",\"no\"]);function m(e,t){if(e.sol()){null===t.scope.align&&(t.scope.align=!1);var r=t.scope.offset;if(e.eatSpace()){var a=e.indentation();return a>r&&\"coffee\"==t.scope.type?\"indent\":a<r?\"dedent\":null}r>0&&y(e,t)}if(e.eatSpace())return null;var s=e.peek();if(e.match(\"####\"))return e.skipToEnd(),\"comment\";if(e.match(\"###\"))return t.tokenize=k,t.tokenize(e,t);if(\"#\"===s)return e.skipToEnd(),\"comment\";if(e.match(/^-?[0-9\\.]/,!1)){var m=!1;if(e.match(/^-?\\d*\\.\\d+(e[\\+\\-]?\\d+)?/i)&&(m=!0),e.match(/^-?\\d+\\.\\d*/)&&(m=!0),e.match(/^-?\\.\\d+/)&&(m=!0),m)return\".\"==e.peek()&&e.backUp(1),\"number\";var g=!1;if(e.match(/^-?0x[0-9a-f]+/i)&&(g=!0),e.match(/^-?[1-9]\\d*(e[\\+\\-]?\\d+)?/)&&(g=!0),e.match(/^-?0(?![\\dx])/i)&&(g=!0),g)return\"number\"}if(e.match(l))return t.tokenize=v(e.current(),!1,\"string\"),t.tokenize(e,t);if(e.match(d)){if(\"/\"!=e.current()||e.match(/^.*\\//,!1))return t.tokenize=v(e.current(),!0,\"string-2\"),t.tokenize(e,t);e.backUp(1)}return e.match(o)||e.match(p)?\"operator\":e.match(i)?\"punctuation\":e.match(h)?\"atom\":e.match(f)||t.prop&&e.match(c)?\"property\":e.match(u)?\"keyword\":e.match(c)?\"variable\":(e.next(),n)}function v(e,r,o){return function(i,c){for(;!i.eol();)if(i.eatWhile(/[^'\"\\/\\\\]/),i.eat(\"\\\\\")){if(i.next(),r&&i.eol())return o}else{if(i.match(e))return c.tokenize=m,o;i.eat(/['\"\\/]/)}return r&&(t.singleLineStringErrors?o=n:c.tokenize=m),o}}function k(e,t){for(;!e.eol();){if(e.eatWhile(/[^#]/),e.match(\"###\")){t.tokenize=m;break}e.eatWhile(\"#\")}return\"comment\"}function g(t,n,r){r=r||\"coffee\";for(var o=0,i=!1,c=null,f=n.scope;f;f=f.prev)if(\"coffee\"===f.type||\"}\"==f.type){o=f.offset+e.indentUnit;break}\"coffee\"!==r?(i=null,c=t.column()+t.current().length):n.scope.align&&(n.scope.align=!1),n.scope={offset:o,type:r,prev:n.scope,align:i,alignOffset:c}}function y(e,t){if(t.scope.prev){if(\"coffee\"===t.scope.type){for(var n=e.indentation(),r=!1,o=t.scope;o;o=o.prev)if(n===o.offset){r=!0;break}if(!r)return!0;for(;t.scope.prev&&t.scope.offset!==n;)t.scope=t.scope.prev;return!1}return t.scope=t.scope.prev,!1}}function z(e,t){var r=t.tokenize(e,t),o=e.current();\"return\"===o&&(t.dedent=!0),((\"->\"===o||\"=>\"===o)&&e.eol()||\"indent\"===r)&&g(e,t);var i=\"[({\".indexOf(o);if(-1!==i&&g(e,t,\"])}\".slice(i,i+1)),a.exec(o)&&g(e,t),\"then\"==o&&y(e,t),\"dedent\"===r&&y(e,t))return n;if(-1!==(i=\"])}\".indexOf(o))){for(;\"coffee\"==t.scope.type&&t.scope.prev;)t.scope=t.scope.prev;t.scope.type==o&&(t.scope=t.scope.prev)}return t.dedent&&e.eol()&&(\"coffee\"==t.scope.type&&t.scope.prev&&(t.scope=t.scope.prev),t.dedent=!1),r}return{startState:function(e){return{tokenize:m,scope:{offset:e||0,type:\"coffee\",prev:null,align:!1},prop:!1,dedent:0}},token:function(e,t){var n=null===t.scope.align&&t.scope;n&&e.sol()&&(n.align=!1);var r=z(e,t);return r&&\"comment\"!=r&&(n&&(n.align=!0),t.prop=\"punctuation\"==r&&\".\"==e.current()),r},indent:function(e,t){if(e.tokenize!=m)return 0;var n=e.scope,r=t&&\"])}\".indexOf(t.charAt(0))>-1;if(r)for(;\"coffee\"==n.type&&n.prev;)n=n.prev;var o=r&&n.type===t.charAt(0);return n.align?n.alignOffset-(o?1:0):(o?n.prev:n).offset},lineComment:\"#\",fold:\"indent\"}})),e.defineMIME(\"application/vnd.coffeescript\",\"coffeescript\"),e.defineMIME(\"text/x-coffeescript\",\"coffeescript\"),e.defineMIME(\"text/coffeescript\",\"coffeescript\")}(n(108))}}]);","name":"static/js/38.3581417a.chunk.js","map":{"version":3,"sources":["static/js/38.3581417a.chunk.js"],"names":["this","push","module","exports","__webpack_require__","CodeMirror","defineMode","conf","parserConf","ERRORCLASS","wordRegexp","words","RegExp","join","operators","delimiters","identifiers","atProp","wordOperators","indentKeywords","commonKeywords","keywords","concat","stringPrefixes","regexPrefixes","constants","tokenBase","stream","state","sol","scope","align","scopeOffset","offset","eatSpace","lineOffset","indentation","type","dedent","ch","peek","match","skipToEnd","tokenize","longComment","floatLiteral","backUp","intLiteral","tokenFactory","current","prop","next","delimiter","singleline","outclass","eol","eatWhile","eat","singleLineStringErrors","indent","alignOffset","prev","indentUnit","column","length","_indent","matched","tokenLexer","style","delimiter_index","indexOf","slice","exec","startState","basecolumn","token","fillAlign","text","closer","charAt","closes","lineComment","fold","defineMIME","mod"],"mappings":"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"},"input":"(this[\"webpackJsonpfrontend\"] = this[\"webpackJsonpfrontend\"] || []).push([[38],{\n\n/***/ 291:\n/***/ (function(module, exports, __webpack_require__) {\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/**\n * Link to the project's GitHub page:\n * https://github.com/pickhardt/coffeescript-codemirror-mode\n */\n(function (mod) {\n  if (true) // CommonJS\n    mod(__webpack_require__(108));else {}\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"coffeescript\", function (conf, parserConf) {\n    var ERRORCLASS = \"error\";\n\n    function wordRegexp(words) {\n      return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n    }\n\n    var operators = /^(?:->|=>|\\+[+=]?|-[\\-=]?|\\*[\\*=]?|\\/[\\/=]?|[=!]=|<[><]?=?|>>?=?|%=?|&=?|\\|=?|\\^=?|\\~|!|\\?|(or|and|\\|\\||&&|\\?)=)/;\n    var delimiters = /^(?:[()\\[\\]{},:`=;]|\\.\\.?\\.?)/;\n    var identifiers = /^[_A-Za-z$][_A-Za-z$0-9]*/;\n    var atProp = /^@[_A-Za-z$][_A-Za-z$0-9]*/;\n    var wordOperators = wordRegexp([\"and\", \"or\", \"not\", \"is\", \"isnt\", \"in\", \"instanceof\", \"typeof\"]);\n    var indentKeywords = [\"for\", \"while\", \"loop\", \"if\", \"unless\", \"else\", \"switch\", \"try\", \"catch\", \"finally\", \"class\"];\n    var commonKeywords = [\"break\", \"by\", \"continue\", \"debugger\", \"delete\", \"do\", \"in\", \"of\", \"new\", \"return\", \"then\", \"this\", \"@\", \"throw\", \"when\", \"until\", \"extends\"];\n    var keywords = wordRegexp(indentKeywords.concat(commonKeywords));\n    indentKeywords = wordRegexp(indentKeywords);\n    var stringPrefixes = /^('{3}|\\\"{3}|['\\\"])/;\n    var regexPrefixes = /^(\\/{3}|\\/)/;\n    var commonConstants = [\"Infinity\", \"NaN\", \"undefined\", \"null\", \"true\", \"false\", \"on\", \"off\", \"yes\", \"no\"];\n    var constants = wordRegexp(commonConstants); // Tokenizers\n\n    function tokenBase(stream, state) {\n      // Handle scope changes\n      if (stream.sol()) {\n        if (state.scope.align === null) state.scope.align = false;\n        var scopeOffset = state.scope.offset;\n\n        if (stream.eatSpace()) {\n          var lineOffset = stream.indentation();\n\n          if (lineOffset > scopeOffset && state.scope.type == \"coffee\") {\n            return \"indent\";\n          } else if (lineOffset < scopeOffset) {\n            return \"dedent\";\n          }\n\n          return null;\n        } else {\n          if (scopeOffset > 0) {\n            dedent(stream, state);\n          }\n        }\n      }\n\n      if (stream.eatSpace()) {\n        return null;\n      }\n\n      var ch = stream.peek(); // Handle docco title comment (single line)\n\n      if (stream.match(\"####\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      } // Handle multi line comments\n\n\n      if (stream.match(\"###\")) {\n        state.tokenize = longComment;\n        return state.tokenize(stream, state);\n      } // Single line comment\n\n\n      if (ch === \"#\") {\n        stream.skipToEnd();\n        return \"comment\";\n      } // Handle number literals\n\n\n      if (stream.match(/^-?[0-9\\.]/, false)) {\n        var floatLiteral = false; // Floats\n\n        if (stream.match(/^-?\\d*\\.\\d+(e[\\+\\-]?\\d+)?/i)) {\n          floatLiteral = true;\n        }\n\n        if (stream.match(/^-?\\d+\\.\\d*/)) {\n          floatLiteral = true;\n        }\n\n        if (stream.match(/^-?\\.\\d+/)) {\n          floatLiteral = true;\n        }\n\n        if (floatLiteral) {\n          // prevent from getting extra . on 1..\n          if (stream.peek() == \".\") {\n            stream.backUp(1);\n          }\n\n          return \"number\";\n        } // Integers\n\n\n        var intLiteral = false; // Hex\n\n        if (stream.match(/^-?0x[0-9a-f]+/i)) {\n          intLiteral = true;\n        } // Decimal\n\n\n        if (stream.match(/^-?[1-9]\\d*(e[\\+\\-]?\\d+)?/)) {\n          intLiteral = true;\n        } // Zero by itself with no other piece of number.\n\n\n        if (stream.match(/^-?0(?![\\dx])/i)) {\n          intLiteral = true;\n        }\n\n        if (intLiteral) {\n          return \"number\";\n        }\n      } // Handle strings\n\n\n      if (stream.match(stringPrefixes)) {\n        state.tokenize = tokenFactory(stream.current(), false, \"string\");\n        return state.tokenize(stream, state);\n      } // Handle regex literals\n\n\n      if (stream.match(regexPrefixes)) {\n        if (stream.current() != \"/\" || stream.match(/^.*\\//, false)) {\n          // prevent highlight of division\n          state.tokenize = tokenFactory(stream.current(), true, \"string-2\");\n          return state.tokenize(stream, state);\n        } else {\n          stream.backUp(1);\n        }\n      } // Handle operators and delimiters\n\n\n      if (stream.match(operators) || stream.match(wordOperators)) {\n        return \"operator\";\n      }\n\n      if (stream.match(delimiters)) {\n        return \"punctuation\";\n      }\n\n      if (stream.match(constants)) {\n        return \"atom\";\n      }\n\n      if (stream.match(atProp) || state.prop && stream.match(identifiers)) {\n        return \"property\";\n      }\n\n      if (stream.match(keywords)) {\n        return \"keyword\";\n      }\n\n      if (stream.match(identifiers)) {\n        return \"variable\";\n      } // Handle non-detected items\n\n\n      stream.next();\n      return ERRORCLASS;\n    }\n\n    function tokenFactory(delimiter, singleline, outclass) {\n      return function (stream, state) {\n        while (!stream.eol()) {\n          stream.eatWhile(/[^'\"\\/\\\\]/);\n\n          if (stream.eat(\"\\\\\")) {\n            stream.next();\n\n            if (singleline && stream.eol()) {\n              return outclass;\n            }\n          } else if (stream.match(delimiter)) {\n            state.tokenize = tokenBase;\n            return outclass;\n          } else {\n            stream.eat(/['\"\\/]/);\n          }\n        }\n\n        if (singleline) {\n          if (parserConf.singleLineStringErrors) {\n            outclass = ERRORCLASS;\n          } else {\n            state.tokenize = tokenBase;\n          }\n        }\n\n        return outclass;\n      };\n    }\n\n    function longComment(stream, state) {\n      while (!stream.eol()) {\n        stream.eatWhile(/[^#]/);\n\n        if (stream.match(\"###\")) {\n          state.tokenize = tokenBase;\n          break;\n        }\n\n        stream.eatWhile(\"#\");\n      }\n\n      return \"comment\";\n    }\n\n    function indent(stream, state, type) {\n      type = type || \"coffee\";\n      var offset = 0,\n          align = false,\n          alignOffset = null;\n\n      for (var scope = state.scope; scope; scope = scope.prev) {\n        if (scope.type === \"coffee\" || scope.type == \"}\") {\n          offset = scope.offset + conf.indentUnit;\n          break;\n        }\n      }\n\n      if (type !== \"coffee\") {\n        align = null;\n        alignOffset = stream.column() + stream.current().length;\n      } else if (state.scope.align) {\n        state.scope.align = false;\n      }\n\n      state.scope = {\n        offset: offset,\n        type: type,\n        prev: state.scope,\n        align: align,\n        alignOffset: alignOffset\n      };\n    }\n\n    function dedent(stream, state) {\n      if (!state.scope.prev) return;\n\n      if (state.scope.type === \"coffee\") {\n        var _indent = stream.indentation();\n\n        var matched = false;\n\n        for (var scope = state.scope; scope; scope = scope.prev) {\n          if (_indent === scope.offset) {\n            matched = true;\n            break;\n          }\n        }\n\n        if (!matched) {\n          return true;\n        }\n\n        while (state.scope.prev && state.scope.offset !== _indent) {\n          state.scope = state.scope.prev;\n        }\n\n        return false;\n      } else {\n        state.scope = state.scope.prev;\n        return false;\n      }\n    }\n\n    function tokenLexer(stream, state) {\n      var style = state.tokenize(stream, state);\n      var current = stream.current(); // Handle scope changes.\n\n      if (current === \"return\") {\n        state.dedent = true;\n      }\n\n      if ((current === \"->\" || current === \"=>\") && stream.eol() || style === \"indent\") {\n        indent(stream, state);\n      }\n\n      var delimiter_index = \"[({\".indexOf(current);\n\n      if (delimiter_index !== -1) {\n        indent(stream, state, \"])}\".slice(delimiter_index, delimiter_index + 1));\n      }\n\n      if (indentKeywords.exec(current)) {\n        indent(stream, state);\n      }\n\n      if (current == \"then\") {\n        dedent(stream, state);\n      }\n\n      if (style === \"dedent\") {\n        if (dedent(stream, state)) {\n          return ERRORCLASS;\n        }\n      }\n\n      delimiter_index = \"])}\".indexOf(current);\n\n      if (delimiter_index !== -1) {\n        while (state.scope.type == \"coffee\" && state.scope.prev) {\n          state.scope = state.scope.prev;\n        }\n\n        if (state.scope.type == current) state.scope = state.scope.prev;\n      }\n\n      if (state.dedent && stream.eol()) {\n        if (state.scope.type == \"coffee\" && state.scope.prev) state.scope = state.scope.prev;\n        state.dedent = false;\n      }\n\n      return style;\n    }\n\n    var external = {\n      startState: function startState(basecolumn) {\n        return {\n          tokenize: tokenBase,\n          scope: {\n            offset: basecolumn || 0,\n            type: \"coffee\",\n            prev: null,\n            align: false\n          },\n          prop: false,\n          dedent: 0\n        };\n      },\n      token: function token(stream, state) {\n        var fillAlign = state.scope.align === null && state.scope;\n        if (fillAlign && stream.sol()) fillAlign.align = false;\n        var style = tokenLexer(stream, state);\n\n        if (style && style != \"comment\") {\n          if (fillAlign) fillAlign.align = true;\n          state.prop = style == \"punctuation\" && stream.current() == \".\";\n        }\n\n        return style;\n      },\n      indent: function indent(state, text) {\n        if (state.tokenize != tokenBase) return 0;\n        var scope = state.scope;\n        var closer = text && \"])}\".indexOf(text.charAt(0)) > -1;\n        if (closer) while (scope.type == \"coffee\" && scope.prev) {\n          scope = scope.prev;\n        }\n        var closes = closer && scope.type === text.charAt(0);\n        if (scope.align) return scope.alignOffset - (closes ? 1 : 0);else return (closes ? scope.prev : scope).offset;\n      },\n      lineComment: \"#\",\n      fold: \"indent\"\n    };\n    return external;\n  }); // IANA registered media type\n  // https://www.iana.org/assignments/media-types/\n\n  CodeMirror.defineMIME(\"application/vnd.coffeescript\", \"coffeescript\");\n  CodeMirror.defineMIME(\"text/x-coffeescript\", \"coffeescript\");\n  CodeMirror.defineMIME(\"text/coffeescript\", \"coffeescript\");\n});\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/mnt/Datengrab/python/Zero-tier/frontend/node_modules/codemirror/mode/coffeescript/coffeescript.js"],"names":["mod","require","CodeMirror","defineMode","conf","parserConf","ERRORCLASS","wordRegexp","words","RegExp","join","operators","delimiters","identifiers","atProp","wordOperators","indentKeywords","commonKeywords","keywords","concat","stringPrefixes","regexPrefixes","commonConstants","constants","tokenBase","stream","state","sol","scope","align","scopeOffset","offset","eatSpace","lineOffset","indentation","type","dedent","ch","peek","match","skipToEnd","tokenize","longComment","floatLiteral","backUp","intLiteral","tokenFactory","current","prop","next","delimiter","singleline","outclass","eol","eatWhile","eat","singleLineStringErrors","indent","alignOffset","prev","indentUnit","column","length","_indent","matched","tokenLexer","style","delimiter_index","indexOf","slice","exec","external","startState","basecolumn","token","fillAlign","text","closer","charAt","closes","lineComment","fold","defineMIME"],"mappings":"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","file":"x","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/**\n * Link to the project's GitHub page:\n * https://github.com/pickhardt/coffeescript-codemirror-mode\n */\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"coffeescript\", function(conf, parserConf) {\n  var ERRORCLASS = \"error\";\n\n  function wordRegexp(words) {\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n  }\n\n  var operators = /^(?:->|=>|\\+[+=]?|-[\\-=]?|\\*[\\*=]?|\\/[\\/=]?|[=!]=|<[><]?=?|>>?=?|%=?|&=?|\\|=?|\\^=?|\\~|!|\\?|(or|and|\\|\\||&&|\\?)=)/;\n  var delimiters = /^(?:[()\\[\\]{},:`=;]|\\.\\.?\\.?)/;\n  var identifiers = /^[_A-Za-z$][_A-Za-z$0-9]*/;\n  var atProp = /^@[_A-Za-z$][_A-Za-z$0-9]*/;\n\n  var wordOperators = wordRegexp([\"and\", \"or\", \"not\",\n                                  \"is\", \"isnt\", \"in\",\n                                  \"instanceof\", \"typeof\"]);\n  var indentKeywords = [\"for\", \"while\", \"loop\", \"if\", \"unless\", \"else\",\n                        \"switch\", \"try\", \"catch\", \"finally\", \"class\"];\n  var commonKeywords = [\"break\", \"by\", \"continue\", \"debugger\", \"delete\",\n                        \"do\", \"in\", \"of\", \"new\", \"return\", \"then\",\n                        \"this\", \"@\", \"throw\", \"when\", \"until\", \"extends\"];\n\n  var keywords = wordRegexp(indentKeywords.concat(commonKeywords));\n\n  indentKeywords = wordRegexp(indentKeywords);\n\n\n  var stringPrefixes = /^('{3}|\\\"{3}|['\\\"])/;\n  var regexPrefixes = /^(\\/{3}|\\/)/;\n  var commonConstants = [\"Infinity\", \"NaN\", \"undefined\", \"null\", \"true\", \"false\", \"on\", \"off\", \"yes\", \"no\"];\n  var constants = wordRegexp(commonConstants);\n\n  // Tokenizers\n  function tokenBase(stream, state) {\n    // Handle scope changes\n    if (stream.sol()) {\n      if (state.scope.align === null) state.scope.align = false;\n      var scopeOffset = state.scope.offset;\n      if (stream.eatSpace()) {\n        var lineOffset = stream.indentation();\n        if (lineOffset > scopeOffset && state.scope.type == \"coffee\") {\n          return \"indent\";\n        } else if (lineOffset < scopeOffset) {\n          return \"dedent\";\n        }\n        return null;\n      } else {\n        if (scopeOffset > 0) {\n          dedent(stream, state);\n        }\n      }\n    }\n    if (stream.eatSpace()) {\n      return null;\n    }\n\n    var ch = stream.peek();\n\n    // Handle docco title comment (single line)\n    if (stream.match(\"####\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    // Handle multi line comments\n    if (stream.match(\"###\")) {\n      state.tokenize = longComment;\n      return state.tokenize(stream, state);\n    }\n\n    // Single line comment\n    if (ch === \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    // Handle number literals\n    if (stream.match(/^-?[0-9\\.]/, false)) {\n      var floatLiteral = false;\n      // Floats\n      if (stream.match(/^-?\\d*\\.\\d+(e[\\+\\-]?\\d+)?/i)) {\n        floatLiteral = true;\n      }\n      if (stream.match(/^-?\\d+\\.\\d*/)) {\n        floatLiteral = true;\n      }\n      if (stream.match(/^-?\\.\\d+/)) {\n        floatLiteral = true;\n      }\n\n      if (floatLiteral) {\n        // prevent from getting extra . on 1..\n        if (stream.peek() == \".\"){\n          stream.backUp(1);\n        }\n        return \"number\";\n      }\n      // Integers\n      var intLiteral = false;\n      // Hex\n      if (stream.match(/^-?0x[0-9a-f]+/i)) {\n        intLiteral = true;\n      }\n      // Decimal\n      if (stream.match(/^-?[1-9]\\d*(e[\\+\\-]?\\d+)?/)) {\n        intLiteral = true;\n      }\n      // Zero by itself with no other piece of number.\n      if (stream.match(/^-?0(?![\\dx])/i)) {\n        intLiteral = true;\n      }\n      if (intLiteral) {\n        return \"number\";\n      }\n    }\n\n    // Handle strings\n    if (stream.match(stringPrefixes)) {\n      state.tokenize = tokenFactory(stream.current(), false, \"string\");\n      return state.tokenize(stream, state);\n    }\n    // Handle regex literals\n    if (stream.match(regexPrefixes)) {\n      if (stream.current() != \"/\" || stream.match(/^.*\\//, false)) { // prevent highlight of division\n        state.tokenize = tokenFactory(stream.current(), true, \"string-2\");\n        return state.tokenize(stream, state);\n      } else {\n        stream.backUp(1);\n      }\n    }\n\n\n\n    // Handle operators and delimiters\n    if (stream.match(operators) || stream.match(wordOperators)) {\n      return \"operator\";\n    }\n    if (stream.match(delimiters)) {\n      return \"punctuation\";\n    }\n\n    if (stream.match(constants)) {\n      return \"atom\";\n    }\n\n    if (stream.match(atProp) || state.prop && stream.match(identifiers)) {\n      return \"property\";\n    }\n\n    if (stream.match(keywords)) {\n      return \"keyword\";\n    }\n\n    if (stream.match(identifiers)) {\n      return \"variable\";\n    }\n\n    // Handle non-detected items\n    stream.next();\n    return ERRORCLASS;\n  }\n\n  function tokenFactory(delimiter, singleline, outclass) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        stream.eatWhile(/[^'\"\\/\\\\]/);\n        if (stream.eat(\"\\\\\")) {\n          stream.next();\n          if (singleline && stream.eol()) {\n            return outclass;\n          }\n        } else if (stream.match(delimiter)) {\n          state.tokenize = tokenBase;\n          return outclass;\n        } else {\n          stream.eat(/['\"\\/]/);\n        }\n      }\n      if (singleline) {\n        if (parserConf.singleLineStringErrors) {\n          outclass = ERRORCLASS;\n        } else {\n          state.tokenize = tokenBase;\n        }\n      }\n      return outclass;\n    };\n  }\n\n  function longComment(stream, state) {\n    while (!stream.eol()) {\n      stream.eatWhile(/[^#]/);\n      if (stream.match(\"###\")) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      stream.eatWhile(\"#\");\n    }\n    return \"comment\";\n  }\n\n  function indent(stream, state, type) {\n    type = type || \"coffee\";\n    var offset = 0, align = false, alignOffset = null;\n    for (var scope = state.scope; scope; scope = scope.prev) {\n      if (scope.type === \"coffee\" || scope.type == \"}\") {\n        offset = scope.offset + conf.indentUnit;\n        break;\n      }\n    }\n    if (type !== \"coffee\") {\n      align = null;\n      alignOffset = stream.column() + stream.current().length;\n    } else if (state.scope.align) {\n      state.scope.align = false;\n    }\n    state.scope = {\n      offset: offset,\n      type: type,\n      prev: state.scope,\n      align: align,\n      alignOffset: alignOffset\n    };\n  }\n\n  function dedent(stream, state) {\n    if (!state.scope.prev) return;\n    if (state.scope.type === \"coffee\") {\n      var _indent = stream.indentation();\n      var matched = false;\n      for (var scope = state.scope; scope; scope = scope.prev) {\n        if (_indent === scope.offset) {\n          matched = true;\n          break;\n        }\n      }\n      if (!matched) {\n        return true;\n      }\n      while (state.scope.prev && state.scope.offset !== _indent) {\n        state.scope = state.scope.prev;\n      }\n      return false;\n    } else {\n      state.scope = state.scope.prev;\n      return false;\n    }\n  }\n\n  function tokenLexer(stream, state) {\n    var style = state.tokenize(stream, state);\n    var current = stream.current();\n\n    // Handle scope changes.\n    if (current === \"return\") {\n      state.dedent = true;\n    }\n    if (((current === \"->\" || current === \"=>\") && stream.eol())\n        || style === \"indent\") {\n      indent(stream, state);\n    }\n    var delimiter_index = \"[({\".indexOf(current);\n    if (delimiter_index !== -1) {\n      indent(stream, state, \"])}\".slice(delimiter_index, delimiter_index+1));\n    }\n    if (indentKeywords.exec(current)){\n      indent(stream, state);\n    }\n    if (current == \"then\"){\n      dedent(stream, state);\n    }\n\n\n    if (style === \"dedent\") {\n      if (dedent(stream, state)) {\n        return ERRORCLASS;\n      }\n    }\n    delimiter_index = \"])}\".indexOf(current);\n    if (delimiter_index !== -1) {\n      while (state.scope.type == \"coffee\" && state.scope.prev)\n        state.scope = state.scope.prev;\n      if (state.scope.type == current)\n        state.scope = state.scope.prev;\n    }\n    if (state.dedent && stream.eol()) {\n      if (state.scope.type == \"coffee\" && state.scope.prev)\n        state.scope = state.scope.prev;\n      state.dedent = false;\n    }\n\n    return style;\n  }\n\n  var external = {\n    startState: function(basecolumn) {\n      return {\n        tokenize: tokenBase,\n        scope: {offset:basecolumn || 0, type:\"coffee\", prev: null, align: false},\n        prop: false,\n        dedent: 0\n      };\n    },\n\n    token: function(stream, state) {\n      var fillAlign = state.scope.align === null && state.scope;\n      if (fillAlign && stream.sol()) fillAlign.align = false;\n\n      var style = tokenLexer(stream, state);\n      if (style && style != \"comment\") {\n        if (fillAlign) fillAlign.align = true;\n        state.prop = style == \"punctuation\" && stream.current() == \".\"\n      }\n\n      return style;\n    },\n\n    indent: function(state, text) {\n      if (state.tokenize != tokenBase) return 0;\n      var scope = state.scope;\n      var closer = text && \"])}\".indexOf(text.charAt(0)) > -1;\n      if (closer) while (scope.type == \"coffee\" && scope.prev) scope = scope.prev;\n      var closes = closer && scope.type === text.charAt(0);\n      if (scope.align)\n        return scope.alignOffset - (closes ? 1 : 0);\n      else\n        return (closes ? scope.prev : scope).offset;\n    },\n\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n  return external;\n});\n\n// IANA registered media type\n// https://www.iana.org/assignments/media-types/\nCodeMirror.defineMIME(\"application/vnd.coffeescript\", \"coffeescript\");\n\nCodeMirror.defineMIME(\"text/x-coffeescript\", \"coffeescript\");\nCodeMirror.defineMIME(\"text/coffeescript\", \"coffeescript\");\n\n});\n"]}}