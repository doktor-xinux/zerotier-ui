{"code":"(this.webpackJsonpfrontend=this.webpackJsonpfrontend||[]).push([[90],{289:function(e,t,n){!function(e){\"use strict\";function t(e){for(var t={},n=0,r=e.length;n<r;++n)t[e[n]]=!0;return t}var n=[\"alias\",\"and\",\"BEGIN\",\"begin\",\"break\",\"case\",\"class\",\"def\",\"defined?\",\"do\",\"else\",\"elsif\",\"END\",\"end\",\"ensure\",\"false\",\"for\",\"if\",\"in\",\"module\",\"next\",\"not\",\"or\",\"redo\",\"rescue\",\"retry\",\"return\",\"self\",\"super\",\"then\",\"true\",\"undef\",\"unless\",\"until\",\"when\",\"while\",\"yield\",\"nil\",\"raise\",\"throw\",\"catch\",\"fail\",\"loop\",\"callcc\",\"caller\",\"lambda\",\"proc\",\"public\",\"protected\",\"private\",\"require\",\"load\",\"require_relative\",\"extend\",\"autoload\",\"__END__\",\"__FILE__\",\"__LINE__\",\"__dir__\"],r=t(n),i=t([\"def\",\"class\",\"case\",\"for\",\"while\",\"until\",\"module\",\"then\",\"catch\",\"loop\",\"proc\",\"begin\"]),o=t([\"end\",\"until\"]),a={\"[\":\"]\",\"{\":\"}\",\"(\":\")\"},u={\"]\":\"[\",\"}\":\"{\",\")\":\"(\"};e.defineMode(\"ruby\",(function(t){var n;function f(e,t,n){return n.tokenize.push(e),e(t,n)}function l(e,t){if(e.sol()&&e.match(\"=begin\")&&e.eol())return t.tokenize.push(h),\"comment\";if(e.eatSpace())return null;var r,i=e.next();if(\"`\"==i||\"'\"==i||'\"'==i)return f(p(i,\"string\",'\"'==i||\"`\"==i),e,t);if(\"/\"==i)return s(e)?f(p(i,\"string-2\",!0),e,t):\"operator\";if(\"%\"==i){var o=\"string\",u=!0;e.eat(\"s\")?o=\"atom\":e.eat(/[WQ]/)?o=\"string\":e.eat(/[r]/)?o=\"string-2\":e.eat(/[wxq]/)&&(o=\"string\",u=!1);var l=e.eat(/[^\\w\\s=]/);return l?(a.propertyIsEnumerable(l)&&(l=a[l]),f(p(l,o,u,!0),e,t)):\"operator\"}if(\"#\"==i)return e.skipToEnd(),\"comment\";if(\"<\"==i&&(r=e.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/)))return f(k(r[2],r[1]),e,t);if(\"0\"==i)return e.eat(\"x\")?e.eatWhile(/[\\da-fA-F]/):e.eat(\"b\")?e.eatWhile(/[01]/):e.eatWhile(/[0-7]/),\"number\";if(/\\d/.test(i))return e.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/),\"number\";if(\"?\"==i){for(;e.match(/^\\\\[CM]-/););return e.eat(\"\\\\\")?e.eatWhile(/\\w/):e.next(),\"string\"}if(\":\"==i)return e.eat(\"'\")?f(p(\"'\",\"atom\",!1),e,t):e.eat('\"')?f(p('\"',\"atom\",!0),e,t):e.eat(/[\\<\\>]/)?(e.eat(/[\\<\\>]/),\"atom\"):e.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)?\"atom\":e.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)?(e.eatWhile(/[\\w$\\xa1-\\uffff]/),e.eat(/[\\?\\!\\=]/),\"atom\"):\"operator\";if(\"@\"==i&&e.match(/^@?[a-zA-Z_\\xa1-\\uffff]/))return e.eat(\"@\"),e.eatWhile(/[\\w\\xa1-\\uffff]/),\"variable-2\";if(\"$\"==i)return e.eat(/[a-zA-Z_]/)?e.eatWhile(/[\\w]/):e.eat(/\\d/)?e.eat(/\\d/):e.next(),\"variable-3\";if(/[a-zA-Z_\\xa1-\\uffff]/.test(i))return e.eatWhile(/[\\w\\xa1-\\uffff]/),e.eat(/[\\?\\!]/),e.eat(\":\")?\"atom\":\"ident\";if(\"|\"!=i||!t.varList&&\"{\"!=t.lastTok&&\"do\"!=t.lastTok){if(/[\\(\\)\\[\\]{}\\\\;]/.test(i))return n=i,null;if(\"-\"==i&&e.eat(\">\"))return\"arrow\";if(/[=+\\-\\/*:\\.^%<>~|]/.test(i)){var d=e.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);return\".\"!=i||d||(n=\".\"),\"operator\"}return null}return n=\"|\",null}function s(e){for(var t,n=e.pos,r=0,i=!1,o=!1;null!=(t=e.next());)if(o)o=!1;else{if(\"[{(\".indexOf(t)>-1)r++;else if(\"]})\".indexOf(t)>-1){if(--r<0)break}else if(\"/\"==t&&0==r){i=!0;break}o=\"\\\\\"==t}return e.backUp(e.pos-n),i}function d(e){return e||(e=1),function(t,n){if(\"}\"==t.peek()){if(1==e)return n.tokenize.pop(),n.tokenize[n.tokenize.length-1](t,n);n.tokenize[n.tokenize.length-1]=d(e-1)}else\"{\"==t.peek()&&(n.tokenize[n.tokenize.length-1]=d(e+1));return l(t,n)}}function c(){var e=!1;return function(t,n){return e?(n.tokenize.pop(),n.tokenize[n.tokenize.length-1](t,n)):(e=!0,l(t,n))}}function p(e,t,n,r){return function(i,o){var a,u=!1;for(\"read-quoted-paused\"===o.context.type&&(o.context=o.context.prev,i.eat(\"}\"));null!=(a=i.next());){if(a==e&&(r||!u)){o.tokenize.pop();break}if(n&&\"#\"==a&&!u){if(i.eat(\"{\")){\"}\"==e&&(o.context={prev:o.context,type:\"read-quoted-paused\"}),o.tokenize.push(d());break}if(/[@\\$]/.test(i.peek())){o.tokenize.push(c());break}}u=!u&&\"\\\\\"==a}return t}}function k(e,t){return function(n,r){return t&&n.eatSpace(),n.match(e)?r.tokenize.pop():n.skipToEnd(),\"string\"}}function h(e,t){return e.sol()&&e.match(\"=end\")&&e.eol()&&t.tokenize.pop(),e.skipToEnd(),\"comment\"}return{startState:function(){return{tokenize:[l],indented:0,context:{type:\"top\",indented:-t.indentUnit},continuedLine:!1,lastTok:null,varList:!1}},token:function(e,t){n=null,e.sol()&&(t.indented=e.indentation());var a,u=t.tokenize[t.tokenize.length-1](e,t),f=n;if(\"ident\"==u){var l=e.current();\"keyword\"==(u=\".\"==t.lastTok?\"property\":r.propertyIsEnumerable(e.current())?\"keyword\":/^[A-Z]/.test(l)?\"tag\":\"def\"==t.lastTok||\"class\"==t.lastTok||t.varList?\"def\":\"variable\")&&(f=l,i.propertyIsEnumerable(l)?a=\"indent\":o.propertyIsEnumerable(l)?a=\"dedent\":\"if\"!=l&&\"unless\"!=l||e.column()!=e.indentation()?\"do\"==l&&t.context.indented<t.indented&&(a=\"indent\"):a=\"indent\")}return(n||u&&\"comment\"!=u)&&(t.lastTok=f),\"|\"==n&&(t.varList=!t.varList),\"indent\"==a||/[\\(\\[\\{]/.test(n)?t.context={prev:t.context,type:n||u,indented:t.indented}:(\"dedent\"==a||/[\\)\\]\\}]/.test(n))&&t.context.prev&&(t.context=t.context.prev),e.eol()&&(t.continuedLine=\"\\\\\"==n||\"operator\"==u),u},indent:function(n,r){if(n.tokenize[n.tokenize.length-1]!=l)return e.Pass;var i=r&&r.charAt(0),o=n.context,a=o.type==u[i]||\"keyword\"==o.type&&/^(?:end|until|else|elsif|when|rescue)\\b/.test(r);return o.indented+(a?0:t.indentUnit)+(n.continuedLine?t.indentUnit:0)},electricInput:/^\\s*(?:end|rescue|elsif|else|\\})$/,lineComment:\"#\",fold:\"indent\"}})),e.defineMIME(\"text/x-ruby\",\"ruby\"),e.registerHelper(\"hintWords\",\"ruby\",n)}(n(108))}}]);","name":"static/js/90.ff178ede.chunk.js","map":{"version":3,"sources":["static/js/90.ff178ede.chunk.js"],"names":["this","push","module","exports","__webpack_require__","CodeMirror","wordObj","words","o","i","e","length","keywordList","keywords","indentWords","dedentWords","opening","closing","defineMode","config","curPunc","chain","newtok","stream","state","tokenize","tokenBase","sol","match","eol","readBlockComment","eatSpace","m","ch","next","readQuoted","regexpAhead","style","embed","eat","delim","propertyIsEnumerable","skipToEnd","readHereDoc","eatWhile","test","varList","lastTok","more","start","pos","depth","found","escaped","indexOf","backUp","tokenBaseUntilBrace","peek","pop","tokenBaseOnce","alreadyCalled","quote","unescaped","context","type","prev","phrase","mayIndent","startState","indented","indentUnit","continuedLine","token","indentation","kwtype","thisTok","word","current","column","indent","textAfter","Pass","firstChar","charAt","ct","closed","electricInput","lineComment","fold","defineMIME","registerHelper","mod"],"mappings":"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"},"input":"(this[\"webpackJsonpfrontend\"] = this[\"webpackJsonpfrontend\"] || []).push([[90],{\n\n/***/ 289:\n/***/ (function(module, exports, __webpack_require__) {\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (true) // CommonJS\n    mod(__webpack_require__(108));else {}\n})(function (CodeMirror) {\n  \"use strict\";\n\n  function wordObj(words) {\n    var o = {};\n\n    for (var i = 0, e = words.length; i < e; ++i) {\n      o[words[i]] = true;\n    }\n\n    return o;\n  }\n\n  var keywordList = [\"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\", \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\", \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\", \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\", \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\", \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"],\n      keywords = wordObj(keywordList);\n  var indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\", \"then\", \"catch\", \"loop\", \"proc\", \"begin\"]);\n  var dedentWords = wordObj([\"end\", \"until\"]);\n  var opening = {\n    \"[\": \"]\",\n    \"{\": \"}\",\n    \"(\": \")\"\n  };\n  var closing = {\n    \"]\": \"[\",\n    \"}\": \"{\",\n    \")\": \"(\"\n  };\n  CodeMirror.defineMode(\"ruby\", function (config) {\n    var curPunc;\n\n    function chain(newtok, stream, state) {\n      state.tokenize.push(newtok);\n      return newtok(stream, state);\n    }\n\n    function tokenBase(stream, state) {\n      if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n        state.tokenize.push(readBlockComment);\n        return \"comment\";\n      }\n\n      if (stream.eatSpace()) return null;\n      var ch = stream.next(),\n          m;\n\n      if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n        return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n      } else if (ch == \"/\") {\n        if (regexpAhead(stream)) return chain(readQuoted(ch, \"string-2\", true), stream, state);else return \"operator\";\n      } else if (ch == \"%\") {\n        var style = \"string\",\n            embed = true;\n        if (stream.eat(\"s\")) style = \"atom\";else if (stream.eat(/[WQ]/)) style = \"string\";else if (stream.eat(/[r]/)) style = \"string-2\";else if (stream.eat(/[wxq]/)) {\n          style = \"string\";\n          embed = false;\n        }\n        var delim = stream.eat(/[^\\w\\s=]/);\n        if (!delim) return \"operator\";\n        if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\n        return chain(readQuoted(delim, style, embed, true), stream, state);\n      } else if (ch == \"#\") {\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n        return chain(readHereDoc(m[2], m[1]), stream, state);\n      } else if (ch == \"0\") {\n        if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);else stream.eatWhile(/[0-7]/);\n        return \"number\";\n      } else if (/\\d/.test(ch)) {\n        stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n        return \"number\";\n      } else if (ch == \"?\") {\n        while (stream.match(/^\\\\[CM]-/)) {}\n\n        if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);else stream.next();\n        return \"string\";\n      } else if (ch == \":\") {\n        if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n        if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state); // :> :>> :< :<< are valid symbols\n\n        if (stream.eat(/[\\<\\>]/)) {\n          stream.eat(/[\\<\\>]/);\n          return \"atom\";\n        } // :+ :- :/ :* :| :& :! are valid symbols\n\n\n        if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n          return \"atom\";\n        } // Symbols can't start by a digit\n\n\n        if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n          stream.eatWhile(/[\\w$\\xa1-\\uffff]/); // Only one ? ! = is allowed and only as the last character\n\n          stream.eat(/[\\?\\!\\=]/);\n          return \"atom\";\n        }\n\n        return \"operator\";\n      } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n        stream.eat(\"@\");\n        stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n        return \"variable-2\";\n      } else if (ch == \"$\") {\n        if (stream.eat(/[a-zA-Z_]/)) {\n          stream.eatWhile(/[\\w]/);\n        } else if (stream.eat(/\\d/)) {\n          stream.eat(/\\d/);\n        } else {\n          stream.next(); // Must be a special global like $: or $!\n        }\n\n        return \"variable-3\";\n      } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n        stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n        stream.eat(/[\\?\\!]/);\n        if (stream.eat(\":\")) return \"atom\";\n        return \"ident\";\n      } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n        curPunc = \"|\";\n        return null;\n      } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n        curPunc = ch;\n        return null;\n      } else if (ch == \"-\" && stream.eat(\">\")) {\n        return \"arrow\";\n      } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n        var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n        if (ch == \".\" && !more) curPunc = \".\";\n        return \"operator\";\n      } else {\n        return null;\n      }\n    }\n\n    function regexpAhead(stream) {\n      var start = stream.pos,\n          depth = 0,\n          next,\n          found = false,\n          escaped = false;\n\n      while ((next = stream.next()) != null) {\n        if (!escaped) {\n          if (\"[{(\".indexOf(next) > -1) {\n            depth++;\n          } else if (\"]})\".indexOf(next) > -1) {\n            depth--;\n            if (depth < 0) break;\n          } else if (next == \"/\" && depth == 0) {\n            found = true;\n            break;\n          }\n\n          escaped = next == \"\\\\\";\n        } else {\n          escaped = false;\n        }\n      }\n\n      stream.backUp(stream.pos - start);\n      return found;\n    }\n\n    function tokenBaseUntilBrace(depth) {\n      if (!depth) depth = 1;\n      return function (stream, state) {\n        if (stream.peek() == \"}\") {\n          if (depth == 1) {\n            state.tokenize.pop();\n            return state.tokenize[state.tokenize.length - 1](stream, state);\n          } else {\n            state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n          }\n        } else if (stream.peek() == \"{\") {\n          state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n        }\n\n        return tokenBase(stream, state);\n      };\n    }\n\n    function tokenBaseOnce() {\n      var alreadyCalled = false;\n      return function (stream, state) {\n        if (alreadyCalled) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length - 1](stream, state);\n        }\n\n        alreadyCalled = true;\n        return tokenBase(stream, state);\n      };\n    }\n\n    function readQuoted(quote, style, embed, unescaped) {\n      return function (stream, state) {\n        var escaped = false,\n            ch;\n\n        if (state.context.type === 'read-quoted-paused') {\n          state.context = state.context.prev;\n          stream.eat(\"}\");\n        }\n\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && (unescaped || !escaped)) {\n            state.tokenize.pop();\n            break;\n          }\n\n          if (embed && ch == \"#\" && !escaped) {\n            if (stream.eat(\"{\")) {\n              if (quote == \"}\") {\n                state.context = {\n                  prev: state.context,\n                  type: 'read-quoted-paused'\n                };\n              }\n\n              state.tokenize.push(tokenBaseUntilBrace());\n              break;\n            } else if (/[@\\$]/.test(stream.peek())) {\n              state.tokenize.push(tokenBaseOnce());\n              break;\n            }\n          }\n\n          escaped = !escaped && ch == \"\\\\\";\n        }\n\n        return style;\n      };\n    }\n\n    function readHereDoc(phrase, mayIndent) {\n      return function (stream, state) {\n        if (mayIndent) stream.eatSpace();\n        if (stream.match(phrase)) state.tokenize.pop();else stream.skipToEnd();\n        return \"string\";\n      };\n    }\n\n    function readBlockComment(stream, state) {\n      if (stream.sol() && stream.match(\"=end\") && stream.eol()) state.tokenize.pop();\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    return {\n      startState: function startState() {\n        return {\n          tokenize: [tokenBase],\n          indented: 0,\n          context: {\n            type: \"top\",\n            indented: -config.indentUnit\n          },\n          continuedLine: false,\n          lastTok: null,\n          varList: false\n        };\n      },\n      token: function token(stream, state) {\n        curPunc = null;\n        if (stream.sol()) state.indented = stream.indentation();\n        var style = state.tokenize[state.tokenize.length - 1](stream, state),\n            kwtype;\n        var thisTok = curPunc;\n\n        if (style == \"ident\") {\n          var word = stream.current();\n          style = state.lastTok == \".\" ? \"property\" : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\" : /^[A-Z]/.test(word) ? \"tag\" : state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList ? \"def\" : \"variable\";\n\n          if (style == \"keyword\") {\n            thisTok = word;\n            if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation()) kwtype = \"indent\";else if (word == \"do\" && state.context.indented < state.indented) kwtype = \"indent\";\n          }\n        }\n\n        if (curPunc || style && style != \"comment\") state.lastTok = thisTok;\n        if (curPunc == \"|\") state.varList = !state.varList;\n        if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc)) state.context = {\n          prev: state.context,\n          type: curPunc || style,\n          indented: state.indented\n        };else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev) state.context = state.context.prev;\n        if (stream.eol()) state.continuedLine = curPunc == \"\\\\\" || style == \"operator\";\n        return style;\n      },\n      indent: function indent(state, textAfter) {\n        if (state.tokenize[state.tokenize.length - 1] != tokenBase) return CodeMirror.Pass;\n        var firstChar = textAfter && textAfter.charAt(0);\n        var ct = state.context;\n        var closed = ct.type == closing[firstChar] || ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n        return ct.indented + (closed ? 0 : config.indentUnit) + (state.continuedLine ? config.indentUnit : 0);\n      },\n      electricInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n      lineComment: \"#\",\n      fold: \"indent\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-ruby\", \"ruby\");\n  CodeMirror.registerHelper(\"hintWords\", \"ruby\", keywordList);\n});\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/mnt/Datengrab/python/Zero-tier/frontend/node_modules/codemirror/mode/ruby/ruby.js"],"names":["mod","require","CodeMirror","wordObj","words","o","i","e","length","keywordList","keywords","indentWords","dedentWords","opening","closing","defineMode","config","curPunc","chain","newtok","stream","state","tokenize","push","tokenBase","sol","match","eol","readBlockComment","eatSpace","ch","next","m","readQuoted","regexpAhead","style","embed","eat","delim","propertyIsEnumerable","skipToEnd","readHereDoc","eatWhile","test","varList","lastTok","more","start","pos","depth","found","escaped","indexOf","backUp","tokenBaseUntilBrace","peek","pop","tokenBaseOnce","alreadyCalled","quote","unescaped","context","type","prev","phrase","mayIndent","startState","indented","indentUnit","continuedLine","token","indentation","kwtype","thisTok","word","current","column","indent","textAfter","Pass","firstChar","charAt","ct","closed","electricInput","lineComment","fold","defineMIME","registerHelper"],"mappings":"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","file":"x","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction wordObj(words) {\n  var o = {};\n  for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n  return o;\n}\n\nvar keywordList = [\n  \"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\",\n  \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\",\n  \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\",\n  \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\",\n  \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\",\n  \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"\n], keywords = wordObj(keywordList);\n\nvar indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\", \"then\",\n                           \"catch\", \"loop\", \"proc\", \"begin\"]);\nvar dedentWords = wordObj([\"end\", \"until\"]);\nvar opening = {\"[\": \"]\", \"{\": \"}\", \"(\": \")\"};\nvar closing = {\"]\": \"[\", \"}\": \"{\", \")\": \"(\"};\n\nCodeMirror.defineMode(\"ruby\", function(config) {\n  var curPunc;\n\n  function chain(newtok, stream, state) {\n    state.tokenize.push(newtok);\n    return newtok(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n      state.tokenize.push(readBlockComment);\n      return \"comment\";\n    }\n    if (stream.eatSpace()) return null;\n    var ch = stream.next(), m;\n    if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n      return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n    } else if (ch == \"/\") {\n      if (regexpAhead(stream))\n        return chain(readQuoted(ch, \"string-2\", true), stream, state);\n      else\n        return \"operator\";\n    } else if (ch == \"%\") {\n      var style = \"string\", embed = true;\n      if (stream.eat(\"s\")) style = \"atom\";\n      else if (stream.eat(/[WQ]/)) style = \"string\";\n      else if (stream.eat(/[r]/)) style = \"string-2\";\n      else if (stream.eat(/[wxq]/)) { style = \"string\"; embed = false; }\n      var delim = stream.eat(/[^\\w\\s=]/);\n      if (!delim) return \"operator\";\n      if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\n      return chain(readQuoted(delim, style, embed, true), stream, state);\n    } else if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n      return chain(readHereDoc(m[2], m[1]), stream, state);\n    } else if (ch == \"0\") {\n      if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);\n      else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);\n      else stream.eatWhile(/[0-7]/);\n      return \"number\";\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n      return \"number\";\n    } else if (ch == \"?\") {\n      while (stream.match(/^\\\\[CM]-/)) {}\n      if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);\n      else stream.next();\n      return \"string\";\n    } else if (ch == \":\") {\n      if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n      if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state);\n\n      // :> :>> :< :<< are valid symbols\n      if (stream.eat(/[\\<\\>]/)) {\n        stream.eat(/[\\<\\>]/);\n        return \"atom\";\n      }\n\n      // :+ :- :/ :* :| :& :! are valid symbols\n      if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n        return \"atom\";\n      }\n\n      // Symbols can't start by a digit\n      if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n        stream.eatWhile(/[\\w$\\xa1-\\uffff]/);\n        // Only one ? ! = is allowed and only as the last character\n        stream.eat(/[\\?\\!\\=]/);\n        return \"atom\";\n      }\n      return \"operator\";\n    } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n      stream.eat(\"@\");\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      return \"variable-2\";\n    } else if (ch == \"$\") {\n      if (stream.eat(/[a-zA-Z_]/)) {\n        stream.eatWhile(/[\\w]/);\n      } else if (stream.eat(/\\d/)) {\n        stream.eat(/\\d/);\n      } else {\n        stream.next(); // Must be a special global like $: or $!\n      }\n      return \"variable-3\";\n    } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      stream.eat(/[\\?\\!]/);\n      if (stream.eat(\":\")) return \"atom\";\n      return \"ident\";\n    } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n      curPunc = \"|\";\n      return null;\n    } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    } else if (ch == \"-\" && stream.eat(\">\")) {\n      return \"arrow\";\n    } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n      var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n      if (ch == \".\" && !more) curPunc = \".\";\n      return \"operator\";\n    } else {\n      return null;\n    }\n  }\n\n  function regexpAhead(stream) {\n    var start = stream.pos, depth = 0, next, found = false, escaped = false\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (\"[{(\".indexOf(next) > -1) {\n          depth++\n        } else if (\"]})\".indexOf(next) > -1) {\n          depth--\n          if (depth < 0) break\n        } else if (next == \"/\" && depth == 0) {\n          found = true\n          break\n        }\n        escaped = next == \"\\\\\"\n      } else {\n        escaped = false\n      }\n    }\n    stream.backUp(stream.pos - start)\n    return found\n  }\n\n  function tokenBaseUntilBrace(depth) {\n    if (!depth) depth = 1;\n    return function(stream, state) {\n      if (stream.peek() == \"}\") {\n        if (depth == 1) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length-1](stream, state);\n        } else {\n          state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n        }\n      } else if (stream.peek() == \"{\") {\n        state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n      }\n      return tokenBase(stream, state);\n    };\n  }\n  function tokenBaseOnce() {\n    var alreadyCalled = false;\n    return function(stream, state) {\n      if (alreadyCalled) {\n        state.tokenize.pop();\n        return state.tokenize[state.tokenize.length-1](stream, state);\n      }\n      alreadyCalled = true;\n      return tokenBase(stream, state);\n    };\n  }\n  function readQuoted(quote, style, embed, unescaped) {\n    return function(stream, state) {\n      var escaped = false, ch;\n\n      if (state.context.type === 'read-quoted-paused') {\n        state.context = state.context.prev;\n        stream.eat(\"}\");\n      }\n\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && (unescaped || !escaped)) {\n          state.tokenize.pop();\n          break;\n        }\n        if (embed && ch == \"#\" && !escaped) {\n          if (stream.eat(\"{\")) {\n            if (quote == \"}\") {\n              state.context = {prev: state.context, type: 'read-quoted-paused'};\n            }\n            state.tokenize.push(tokenBaseUntilBrace());\n            break;\n          } else if (/[@\\$]/.test(stream.peek())) {\n            state.tokenize.push(tokenBaseOnce());\n            break;\n          }\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      return style;\n    };\n  }\n  function readHereDoc(phrase, mayIndent) {\n    return function(stream, state) {\n      if (mayIndent) stream.eatSpace()\n      if (stream.match(phrase)) state.tokenize.pop();\n      else stream.skipToEnd();\n      return \"string\";\n    };\n  }\n  function readBlockComment(stream, state) {\n    if (stream.sol() && stream.match(\"=end\") && stream.eol())\n      state.tokenize.pop();\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: [tokenBase],\n              indented: 0,\n              context: {type: \"top\", indented: -config.indentUnit},\n              continuedLine: false,\n              lastTok: null,\n              varList: false};\n    },\n\n    token: function(stream, state) {\n      curPunc = null;\n      if (stream.sol()) state.indented = stream.indentation();\n      var style = state.tokenize[state.tokenize.length-1](stream, state), kwtype;\n      var thisTok = curPunc;\n      if (style == \"ident\") {\n        var word = stream.current();\n        style = state.lastTok == \".\" ? \"property\"\n          : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n          : /^[A-Z]/.test(word) ? \"tag\"\n          : (state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList) ? \"def\"\n          : \"variable\";\n        if (style == \"keyword\") {\n          thisTok = word;\n          if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";\n          else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";\n          else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation())\n            kwtype = \"indent\";\n          else if (word == \"do\" && state.context.indented < state.indented)\n            kwtype = \"indent\";\n        }\n      }\n      if (curPunc || (style && style != \"comment\")) state.lastTok = thisTok;\n      if (curPunc == \"|\") state.varList = !state.varList;\n\n      if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc))\n        state.context = {prev: state.context, type: curPunc || style, indented: state.indented};\n      else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev)\n        state.context = state.context.prev;\n\n      if (stream.eol())\n        state.continuedLine = (curPunc == \"\\\\\" || style == \"operator\");\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize[state.tokenize.length-1] != tokenBase) return CodeMirror.Pass;\n      var firstChar = textAfter && textAfter.charAt(0);\n      var ct = state.context;\n      var closed = ct.type == closing[firstChar] ||\n        ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n      return ct.indented + (closed ? 0 : config.indentUnit) +\n        (state.continuedLine ? config.indentUnit : 0);\n    },\n\n    electricInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-ruby\", \"ruby\");\n\nCodeMirror.registerHelper(\"hintWords\", \"ruby\", keywordList);\n\n});\n"]}}