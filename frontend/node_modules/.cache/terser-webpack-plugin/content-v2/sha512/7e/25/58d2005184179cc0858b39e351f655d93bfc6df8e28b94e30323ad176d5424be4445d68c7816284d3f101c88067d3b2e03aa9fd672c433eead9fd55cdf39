{"code":"(this.webpackJsonpfrontend=this.webpackJsonpfrontend||[]).push([[19],{393:function(e,n,t){!function(e){\"use strict\";e.defineMode(\"twig:inner\",(function(){var e=[\"and\",\"as\",\"autoescape\",\"endautoescape\",\"block\",\"do\",\"endblock\",\"else\",\"elseif\",\"extends\",\"for\",\"endfor\",\"embed\",\"endembed\",\"filter\",\"endfilter\",\"flush\",\"from\",\"if\",\"endif\",\"in\",\"is\",\"include\",\"import\",\"not\",\"or\",\"set\",\"spaceless\",\"endspaceless\",\"with\",\"endwith\",\"trans\",\"endtrans\",\"blocktrans\",\"endblocktrans\",\"macro\",\"endmacro\",\"use\",\"verbatim\",\"endverbatim\"],n=/^[+\\-*&%=<>!?|~^]/,t=/^[:\\[\\(\\{]/,i=[\"true\",\"false\",\"null\",\"empty\",\"defined\",\"divisibleby\",\"divisible by\",\"even\",\"odd\",\"iterable\",\"sameas\",\"same as\"],r=/^(\\d[+\\-\\*\\/])?\\d+(\\.\\d+)?/;function o(o,a){var s=o.peek();if(a.incomment)return o.skipTo(\"#}\")?(o.eatWhile(/\\#|}/),a.incomment=!1):o.skipToEnd(),\"comment\";if(a.intag){if(a.operator){if(a.operator=!1,o.match(i))return\"atom\";if(o.match(r))return\"number\"}if(a.sign){if(a.sign=!1,o.match(i))return\"atom\";if(o.match(r))return\"number\"}if(a.instring)return s==a.instring&&(a.instring=!1),o.next(),\"string\";if(\"'\"==s||'\"'==s)return a.instring=s,o.next(),\"string\";if(o.match(a.intag+\"}\")||o.eat(\"-\")&&o.match(a.intag+\"}\"))return a.intag=!1,\"tag\";if(o.match(n))return a.operator=!0,\"operator\";if(o.match(t))a.sign=!0;else if(o.eat(\" \")||o.sol()){if(o.match(e))return\"keyword\";if(o.match(i))return\"atom\";if(o.match(r))return\"number\";o.sol()&&o.next()}else o.next();return\"variable\"}if(o.eat(\"{\")){if(o.eat(\"#\"))return a.incomment=!0,o.skipTo(\"#}\")?(o.eatWhile(/\\#|}/),a.incomment=!1):o.skipToEnd(),\"comment\";if(s=o.eat(/\\{|%/))return a.intag=s,\"{\"==s&&(a.intag=\"}\"),o.eat(\"-\"),\"tag\"}o.next()}return e=new RegExp(\"((\"+e.join(\")|(\")+\"))\\\\b\"),i=new RegExp(\"((\"+i.join(\")|(\")+\"))\\\\b\"),{startState:function(){return{}},token:function(e,n){return o(e,n)}}})),e.defineMode(\"twig\",(function(n,t){var i=e.getMode(n,\"twig:inner\");return t&&t.base?e.multiplexingMode(e.getMode(n,t.base),{open:/\\{[{#%]/,close:/[}#%]\\}/,mode:i,parseDelimiters:!0}):i})),e.defineMIME(\"text/x-twig\",\"twig\")}(t(108),t(541))},541:function(e,n,t){!function(e){\"use strict\";e.multiplexingMode=function(n){var t=Array.prototype.slice.call(arguments,1);function i(e,n,t,i){if(\"string\"==typeof n){var r=e.indexOf(n,t);return i&&r>-1?r+n.length:r}var o=n.exec(t?e.slice(t):e);return o?o.index+t+(i?o[0].length:0):-1}return{startState:function(){return{outer:e.startState(n),innerActive:null,inner:null,startingInner:!1}},copyState:function(t){return{outer:e.copyState(n,t.outer),innerActive:t.innerActive,inner:t.innerActive&&e.copyState(t.innerActive.mode,t.inner),startingInner:t.startingInner}},token:function(r,o){if(o.innerActive){var a=o.innerActive;if(l=r.string,!a.close&&r.sol())return o.innerActive=o.inner=null,this.token(r,o);if((d=a.close&&!o.startingInner?i(l,a.close,r.pos,a.parseDelimiters):-1)==r.pos&&!a.parseDelimiters)return r.match(a.close),o.innerActive=o.inner=null,a.delimStyle&&a.delimStyle+\" \"+a.delimStyle+\"-close\";d>-1&&(r.string=l.slice(0,d));var s=a.mode.token(r,o.inner);return d>-1?r.string=l:r.pos>r.start&&(o.startingInner=!1),d==r.pos&&a.parseDelimiters&&(o.innerActive=o.inner=null),a.innerStyle&&(s=s?s+\" \"+a.innerStyle:a.innerStyle),s}for(var c=1/0,l=r.string,u=0;u<t.length;++u){var d,m=t[u];if((d=i(l,m.open,r.pos))==r.pos){m.parseDelimiters||r.match(m.open),o.startingInner=!!m.parseDelimiters,o.innerActive=m;var f=0;if(n.indent){var p=n.indent(o.outer,\"\",\"\");p!==e.Pass&&(f=p)}return o.inner=e.startState(m.mode,f),m.delimStyle&&m.delimStyle+\" \"+m.delimStyle+\"-open\"}-1!=d&&d<c&&(c=d)}c!=1/0&&(r.string=l.slice(0,c));var g=n.token(r,o.outer);return c!=1/0&&(r.string=l),g},indent:function(t,i,r){var o=t.innerActive?t.innerActive.mode:n;return o.indent?o.indent(t.innerActive?t.inner:t.outer,i,r):e.Pass},blankLine:function(i){var r=i.innerActive?i.innerActive.mode:n;if(r.blankLine&&r.blankLine(i.innerActive?i.inner:i.outer),i.innerActive)\"\\n\"===i.innerActive.close&&(i.innerActive=i.inner=null);else for(var o=0;o<t.length;++o){var a=t[o];\"\\n\"===a.open&&(i.innerActive=a,i.inner=e.startState(a.mode,r.indent?r.indent(i.outer,\"\",\"\"):0))}},electricChars:n.electricChars,innerMode:function(e){return e.inner?{state:e.inner,mode:e.innerActive.mode}:{state:e.outer,mode:n}}}}}(t(108))}}]);","name":"static/js/19.4c11f8f3.chunk.js","map":{"version":3,"sources":["static/js/19.4c11f8f3.chunk.js"],"names":["this","push","module","exports","__webpack_require__","CodeMirror","defineMode","keywords","operator","sign","atom","number","tokenBase","stream","state","ch","peek","incomment","skipTo","eatWhile","skipToEnd","intag","match","instring","next","eat","sol","RegExp","join","startState","token","config","parserConfig","twigInner","getMode","base","multiplexingMode","open","close","mode","parseDelimiters","defineMIME","mod","outer","others","Array","prototype","slice","call","arguments","indexOf","string","pattern","from","returnEnd","found","length","m","exec","index","innerActive","inner","startingInner","copyState","curInner","oldContent","pos","delimStyle","innerToken","start","innerStyle","cutOff","Infinity","i","other","outerIndent","indent","possibleOuterIndent","Pass","outerToken","textAfter","line","blankLine","electricChars","innerMode"],"mappings":"CAACA,KAA2B,qBAAIA,KAA2B,sBAAK,IAAIC,KAAK,CAAC,CAAC,IAAI,CAEzE,IACA,SAAUC,EAAQC,EAASC,IAO9B,SAAUC,GACX,aAEAA,EAAWC,WAAW,cAAc,WAClC,IAAIC,EAAW,CAAC,MAAO,KAAM,aAAc,gBAAiB,QAAS,KAAM,WAAY,OAAQ,SAAU,UAAW,MAAO,SAAU,QAAS,WAAY,SAAU,YAAa,QAAS,OAAQ,KAAM,QAAS,KAAM,KAAM,UAAW,SAAU,MAAO,KAAM,MAAO,YAAa,eAAgB,OAAQ,UAAW,QAAS,WAAY,aAAc,gBAAiB,QAAS,WAAY,MAAO,WAAY,eAC9YC,EAAW,oBACXC,EAAO,aACPC,EAAO,CAAC,OAAQ,QAAS,OAAQ,QAAS,UAAW,cAAe,eAAgB,OAAQ,MAAO,WAAY,SAAU,WACzHC,EAAS,6BAIb,SAASC,EAAUC,EAAQC,GACzB,IAAIC,EAAKF,EAAOG,OAEhB,GAAIF,EAAMG,UAQR,OAPKJ,EAAOK,OAAO,OAGjBL,EAAOM,SAAS,QAChBL,EAAMG,WAAY,GAHlBJ,EAAOO,YAMF,UACF,GAAIN,EAAMO,MAAO,CAEtB,GAAIP,EAAMN,SAAU,CAGlB,GAFAM,EAAMN,UAAW,EAEbK,EAAOS,MAAMZ,GACf,MAAO,OAGT,GAAIG,EAAOS,MAAMX,GACf,MAAO,SAKX,GAAIG,EAAML,KAAM,CAGd,GAFAK,EAAML,MAAO,EAETI,EAAOS,MAAMZ,GACf,MAAO,OAGT,GAAIG,EAAOS,MAAMX,GACf,MAAO,SAIX,GAAIG,EAAMS,SAMR,OALIR,GAAMD,EAAMS,WACdT,EAAMS,UAAW,GAGnBV,EAAOW,OACA,SACF,GAAU,KAANT,GAAmB,KAANA,EAGtB,OAFAD,EAAMS,SAAWR,EACjBF,EAAOW,OACA,SACF,GAAIX,EAAOS,MAAMR,EAAMO,MAAQ,MAAQR,EAAOY,IAAI,MAAQZ,EAAOS,MAAMR,EAAMO,MAAQ,KAE1F,OADAP,EAAMO,OAAQ,EACP,MACF,GAAIR,EAAOS,MAAMd,GAEtB,OADAM,EAAMN,UAAW,EACV,WACF,GAAIK,EAAOS,MAAMb,GACtBK,EAAML,MAAO,OAEb,GAAII,EAAOY,IAAI,MAAQZ,EAAOa,MAAO,CACnC,GAAIb,EAAOS,MAAMf,GACf,MAAO,UAGT,GAAIM,EAAOS,MAAMZ,GACf,MAAO,OAGT,GAAIG,EAAOS,MAAMX,GACf,MAAO,SAGLE,EAAOa,OACTb,EAAOW,YAGTX,EAAOW,OAIX,MAAO,WACF,GAAIX,EAAOY,IAAI,KAAM,CAC1B,GAAIZ,EAAOY,IAAI,KAUb,OATAX,EAAMG,WAAY,EAEbJ,EAAOK,OAAO,OAGjBL,EAAOM,SAAS,QAChBL,EAAMG,WAAY,GAHlBJ,EAAOO,YAMF,UACF,GAAIL,EAAKF,EAAOY,IAAI,QASzB,OAPAX,EAAMO,MAAQN,EAEJ,KAANA,IACFD,EAAMO,MAAQ,KAGhBR,EAAOY,IAAI,KACJ,MAIXZ,EAAOW,OAIT,OAjHAjB,EAAW,IAAIoB,OAAO,KAAOpB,EAASqB,KAAK,OAAS,SACpDlB,EAAO,IAAIiB,OAAO,KAAOjB,EAAKkB,KAAK,OAAS,SAgHrC,CACLC,WAAY,WACV,MAAO,IAETC,MAAO,SAAejB,EAAQC,GAC5B,OAAOF,EAAUC,EAAQC,QAI/BT,EAAWC,WAAW,QAAQ,SAAUyB,EAAQC,GAC9C,IAAIC,EAAY5B,EAAW6B,QAAQH,EAAQ,cAC3C,OAAKC,GAAiBA,EAAaG,KAC5B9B,EAAW+B,iBAAiB/B,EAAW6B,QAAQH,EAAQC,EAAaG,MAAO,CAChFE,KAAM,UACNC,MAAO,UACPC,KAAMN,EACNO,iBAAiB,IAL6BP,KAQlD5B,EAAWoC,WAAW,cAAe,QA9InCC,CAAItC,EAAoB,KAAMA,EAAoB,OAmJhD,IACA,SAAUF,EAAQC,EAASC,IAO9B,SAAUC,GACX,aAEAA,EAAW+B,iBAAmB,SAAUO,GAItC,IAAIC,EAASC,MAAMC,UAAUC,MAAMC,KAAKC,UAAW,GAEnD,SAASC,EAAQC,EAAQC,EAASC,EAAMC,GACtC,GAAsB,iBAAXF,EAAqB,CAC9B,IAAIG,EAAQJ,EAAOD,QAAQE,EAASC,GACpC,OAAOC,GAAaC,GAAS,EAAIA,EAAQH,EAAQI,OAASD,EAG5D,IAAIE,EAAIL,EAAQM,KAAKL,EAAOF,EAAOJ,MAAMM,GAAQF,GACjD,OAAOM,EAAIA,EAAEE,MAAQN,GAAQC,EAAYG,EAAE,GAAGD,OAAS,IAAM,EAG/D,MAAO,CACL3B,WAAY,WACV,MAAO,CACLc,MAAOtC,EAAWwB,WAAWc,GAC7BiB,YAAa,KACbC,MAAO,KACPC,eAAe,IAGnBC,UAAW,SAAmBjD,GAC5B,MAAO,CACL6B,MAAOtC,EAAW0D,UAAUpB,EAAO7B,EAAM6B,OACzCiB,YAAa9C,EAAM8C,YACnBC,MAAO/C,EAAM8C,aAAevD,EAAW0D,UAAUjD,EAAM8C,YAAYrB,KAAMzB,EAAM+C,OAC/EC,cAAehD,EAAMgD,gBAGzBhC,MAAO,SAAejB,EAAQC,GAC5B,GAAKA,EAAM8C,YA+BJ,CACL,IAAII,EAAWlD,EAAM8C,YAGrB,GAFIK,EAAapD,EAAOsC,QAEnBa,EAAS1B,OAASzB,EAAOa,MAE5B,OADAZ,EAAM8C,YAAc9C,EAAM+C,MAAQ,KAC3B7D,KAAK8B,MAAMjB,EAAQC,GAK5B,IAFIyC,EAAQS,EAAS1B,QAAUxB,EAAMgD,cAAgBZ,EAAQe,EAAYD,EAAS1B,MAAOzB,EAAOqD,IAAKF,EAASxB,kBAAoB,IAErH3B,EAAOqD,MAAQF,EAASxB,gBAGnC,OAFA3B,EAAOS,MAAM0C,EAAS1B,OACtBxB,EAAM8C,YAAc9C,EAAM+C,MAAQ,KAC3BG,EAASG,YAAcH,EAASG,WAAa,IAAMH,EAASG,WAAa,SAG9EZ,GAAS,IAAG1C,EAAOsC,OAASc,EAAWlB,MAAM,EAAGQ,IACpD,IAAIa,EAAaJ,EAASzB,KAAKT,MAAMjB,EAAQC,EAAM+C,OAQnD,OAPIN,GAAS,EAAG1C,EAAOsC,OAASc,EAAoBpD,EAAOqD,IAAMrD,EAAOwD,QAAOvD,EAAMgD,eAAgB,GACjGP,GAAS1C,EAAOqD,KAAOF,EAASxB,kBAAiB1B,EAAM8C,YAAc9C,EAAM+C,MAAQ,MAEnFG,EAASM,aACKF,EAAZA,EAAyBA,EAAa,IAAMJ,EAASM,WAA6BN,EAASM,YAG1FF,EArDP,IAHA,IAAIG,EAASC,EAAAA,EACTP,EAAapD,EAAOsC,OAEfsB,EAAI,EAAGA,EAAI7B,EAAOY,SAAUiB,EAAG,CACtC,IACIlB,EADAmB,EAAQ9B,EAAO6B,GAGnB,IAFIlB,EAAQL,EAAQe,EAAYS,EAAMrC,KAAMxB,EAAOqD,OAEtCrD,EAAOqD,IAAK,CAClBQ,EAAMlC,iBAAiB3B,EAAOS,MAAMoD,EAAMrC,MAC/CvB,EAAMgD,gBAAkBY,EAAMlC,gBAC9B1B,EAAM8C,YAAcc,EAEpB,IAAIC,EAAc,EAElB,GAAIhC,EAAMiC,OAAQ,CAChB,IAAIC,EAAsBlC,EAAMiC,OAAO9D,EAAM6B,MAAO,GAAI,IACpDkC,IAAwBxE,EAAWyE,OAAMH,EAAcE,GAI7D,OADA/D,EAAM+C,MAAQxD,EAAWwB,WAAW6C,EAAMnC,KAAMoC,GACzCD,EAAMP,YAAcO,EAAMP,WAAa,IAAMO,EAAMP,WAAa,SACpD,GAAVZ,GAAeA,EAAQgB,IAChCA,EAAShB,GAITgB,GAAUC,EAAAA,IAAU3D,EAAOsC,OAASc,EAAWlB,MAAM,EAAGwB,IAC5D,IAAIQ,EAAapC,EAAMb,MAAMjB,EAAQC,EAAM6B,OAE3C,OADI4B,GAAUC,EAAAA,IAAU3D,EAAOsC,OAASc,GACjCc,GA8BXH,OAAQ,SAAgB9D,EAAOkE,EAAWC,GACxC,IAAI1C,EAAOzB,EAAM8C,YAAc9C,EAAM8C,YAAYrB,KAAOI,EACxD,OAAKJ,EAAKqC,OACHrC,EAAKqC,OAAO9D,EAAM8C,YAAc9C,EAAM+C,MAAQ/C,EAAM6B,MAAOqC,EAAWC,GADpD5E,EAAWyE,MAGtCI,UAAW,SAAmBpE,GAC5B,IAAIyB,EAAOzB,EAAM8C,YAAc9C,EAAM8C,YAAYrB,KAAOI,EAMxD,GAJIJ,EAAK2C,WACP3C,EAAK2C,UAAUpE,EAAM8C,YAAc9C,EAAM+C,MAAQ/C,EAAM6B,OAGpD7B,EAAM8C,YAS4B,OAA5B9C,EAAM8C,YAAYtB,QAC3BxB,EAAM8C,YAAc9C,EAAM+C,MAAQ,WATlC,IAAK,IAAIY,EAAI,EAAGA,EAAI7B,EAAOY,SAAUiB,EAAG,CACtC,IAAIC,EAAQ9B,EAAO6B,GAEA,OAAfC,EAAMrC,OACRvB,EAAM8C,YAAcc,EACpB5D,EAAM+C,MAAQxD,EAAWwB,WAAW6C,EAAMnC,KAAMA,EAAKqC,OAASrC,EAAKqC,OAAO9D,EAAM6B,MAAO,GAAI,IAAM,MAOzGwC,cAAexC,EAAMwC,cACrBC,UAAW,SAAmBtE,GAC5B,OAAOA,EAAM+C,MAAQ,CACnB/C,MAAOA,EAAM+C,MACbtB,KAAMzB,EAAM8C,YAAYrB,MACtB,CACFzB,MAAOA,EAAM6B,MACbJ,KAAMI,MAlIZD,CAAItC,EAAoB"},"input":"(this[\"webpackJsonpfrontend\"] = this[\"webpackJsonpfrontend\"] || []).push([[19],{\n\n/***/ 393:\n/***/ (function(module, exports, __webpack_require__) {\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (true) // CommonJS\n    mod(__webpack_require__(108), __webpack_require__(541));else {}\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"twig:inner\", function () {\n    var keywords = [\"and\", \"as\", \"autoescape\", \"endautoescape\", \"block\", \"do\", \"endblock\", \"else\", \"elseif\", \"extends\", \"for\", \"endfor\", \"embed\", \"endembed\", \"filter\", \"endfilter\", \"flush\", \"from\", \"if\", \"endif\", \"in\", \"is\", \"include\", \"import\", \"not\", \"or\", \"set\", \"spaceless\", \"endspaceless\", \"with\", \"endwith\", \"trans\", \"endtrans\", \"blocktrans\", \"endblocktrans\", \"macro\", \"endmacro\", \"use\", \"verbatim\", \"endverbatim\"],\n        operator = /^[+\\-*&%=<>!?|~^]/,\n        sign = /^[:\\[\\(\\{]/,\n        atom = [\"true\", \"false\", \"null\", \"empty\", \"defined\", \"divisibleby\", \"divisible by\", \"even\", \"odd\", \"iterable\", \"sameas\", \"same as\"],\n        number = /^(\\d[+\\-\\*\\/])?\\d+(\\.\\d+)?/;\n    keywords = new RegExp(\"((\" + keywords.join(\")|(\") + \"))\\\\b\");\n    atom = new RegExp(\"((\" + atom.join(\")|(\") + \"))\\\\b\");\n\n    function tokenBase(stream, state) {\n      var ch = stream.peek(); //Comment\n\n      if (state.incomment) {\n        if (!stream.skipTo(\"#}\")) {\n          stream.skipToEnd();\n        } else {\n          stream.eatWhile(/\\#|}/);\n          state.incomment = false;\n        }\n\n        return \"comment\"; //Tag\n      } else if (state.intag) {\n        //After operator\n        if (state.operator) {\n          state.operator = false;\n\n          if (stream.match(atom)) {\n            return \"atom\";\n          }\n\n          if (stream.match(number)) {\n            return \"number\";\n          }\n        } //After sign\n\n\n        if (state.sign) {\n          state.sign = false;\n\n          if (stream.match(atom)) {\n            return \"atom\";\n          }\n\n          if (stream.match(number)) {\n            return \"number\";\n          }\n        }\n\n        if (state.instring) {\n          if (ch == state.instring) {\n            state.instring = false;\n          }\n\n          stream.next();\n          return \"string\";\n        } else if (ch == \"'\" || ch == '\"') {\n          state.instring = ch;\n          stream.next();\n          return \"string\";\n        } else if (stream.match(state.intag + \"}\") || stream.eat(\"-\") && stream.match(state.intag + \"}\")) {\n          state.intag = false;\n          return \"tag\";\n        } else if (stream.match(operator)) {\n          state.operator = true;\n          return \"operator\";\n        } else if (stream.match(sign)) {\n          state.sign = true;\n        } else {\n          if (stream.eat(\" \") || stream.sol()) {\n            if (stream.match(keywords)) {\n              return \"keyword\";\n            }\n\n            if (stream.match(atom)) {\n              return \"atom\";\n            }\n\n            if (stream.match(number)) {\n              return \"number\";\n            }\n\n            if (stream.sol()) {\n              stream.next();\n            }\n          } else {\n            stream.next();\n          }\n        }\n\n        return \"variable\";\n      } else if (stream.eat(\"{\")) {\n        if (stream.eat(\"#\")) {\n          state.incomment = true;\n\n          if (!stream.skipTo(\"#}\")) {\n            stream.skipToEnd();\n          } else {\n            stream.eatWhile(/\\#|}/);\n            state.incomment = false;\n          }\n\n          return \"comment\"; //Open tag\n        } else if (ch = stream.eat(/\\{|%/)) {\n          //Cache close tag\n          state.intag = ch;\n\n          if (ch == \"{\") {\n            state.intag = \"}\";\n          }\n\n          stream.eat(\"-\");\n          return \"tag\";\n        }\n      }\n\n      stream.next();\n    }\n\n    ;\n    return {\n      startState: function startState() {\n        return {};\n      },\n      token: function token(stream, state) {\n        return tokenBase(stream, state);\n      }\n    };\n  });\n  CodeMirror.defineMode(\"twig\", function (config, parserConfig) {\n    var twigInner = CodeMirror.getMode(config, \"twig:inner\");\n    if (!parserConfig || !parserConfig.base) return twigInner;\n    return CodeMirror.multiplexingMode(CodeMirror.getMode(config, parserConfig.base), {\n      open: /\\{[{#%]/,\n      close: /[}#%]\\}/,\n      mode: twigInner,\n      parseDelimiters: true\n    });\n  });\n  CodeMirror.defineMIME(\"text/x-twig\", \"twig\");\n});\n\n/***/ }),\n\n/***/ 541:\n/***/ (function(module, exports, __webpack_require__) {\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (true) // CommonJS\n    mod(__webpack_require__(108));else {}\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.multiplexingMode = function (outer\n  /*, others */\n  ) {\n    // Others should be {open, close, mode [, delimStyle] [, innerStyle] [, parseDelimiters]} objects\n    var others = Array.prototype.slice.call(arguments, 1);\n\n    function indexOf(string, pattern, from, returnEnd) {\n      if (typeof pattern == \"string\") {\n        var found = string.indexOf(pattern, from);\n        return returnEnd && found > -1 ? found + pattern.length : found;\n      }\n\n      var m = pattern.exec(from ? string.slice(from) : string);\n      return m ? m.index + from + (returnEnd ? m[0].length : 0) : -1;\n    }\n\n    return {\n      startState: function startState() {\n        return {\n          outer: CodeMirror.startState(outer),\n          innerActive: null,\n          inner: null,\n          startingInner: false\n        };\n      },\n      copyState: function copyState(state) {\n        return {\n          outer: CodeMirror.copyState(outer, state.outer),\n          innerActive: state.innerActive,\n          inner: state.innerActive && CodeMirror.copyState(state.innerActive.mode, state.inner),\n          startingInner: state.startingInner\n        };\n      },\n      token: function token(stream, state) {\n        if (!state.innerActive) {\n          var cutOff = Infinity,\n              oldContent = stream.string;\n\n          for (var i = 0; i < others.length; ++i) {\n            var other = others[i];\n            var found = indexOf(oldContent, other.open, stream.pos);\n\n            if (found == stream.pos) {\n              if (!other.parseDelimiters) stream.match(other.open);\n              state.startingInner = !!other.parseDelimiters;\n              state.innerActive = other; // Get the outer indent, making sure to handle CodeMirror.Pass\n\n              var outerIndent = 0;\n\n              if (outer.indent) {\n                var possibleOuterIndent = outer.indent(state.outer, \"\", \"\");\n                if (possibleOuterIndent !== CodeMirror.Pass) outerIndent = possibleOuterIndent;\n              }\n\n              state.inner = CodeMirror.startState(other.mode, outerIndent);\n              return other.delimStyle && other.delimStyle + \" \" + other.delimStyle + \"-open\";\n            } else if (found != -1 && found < cutOff) {\n              cutOff = found;\n            }\n          }\n\n          if (cutOff != Infinity) stream.string = oldContent.slice(0, cutOff);\n          var outerToken = outer.token(stream, state.outer);\n          if (cutOff != Infinity) stream.string = oldContent;\n          return outerToken;\n        } else {\n          var curInner = state.innerActive,\n              oldContent = stream.string;\n\n          if (!curInner.close && stream.sol()) {\n            state.innerActive = state.inner = null;\n            return this.token(stream, state);\n          }\n\n          var found = curInner.close && !state.startingInner ? indexOf(oldContent, curInner.close, stream.pos, curInner.parseDelimiters) : -1;\n\n          if (found == stream.pos && !curInner.parseDelimiters) {\n            stream.match(curInner.close);\n            state.innerActive = state.inner = null;\n            return curInner.delimStyle && curInner.delimStyle + \" \" + curInner.delimStyle + \"-close\";\n          }\n\n          if (found > -1) stream.string = oldContent.slice(0, found);\n          var innerToken = curInner.mode.token(stream, state.inner);\n          if (found > -1) stream.string = oldContent;else if (stream.pos > stream.start) state.startingInner = false;\n          if (found == stream.pos && curInner.parseDelimiters) state.innerActive = state.inner = null;\n\n          if (curInner.innerStyle) {\n            if (innerToken) innerToken = innerToken + \" \" + curInner.innerStyle;else innerToken = curInner.innerStyle;\n          }\n\n          return innerToken;\n        }\n      },\n      indent: function indent(state, textAfter, line) {\n        var mode = state.innerActive ? state.innerActive.mode : outer;\n        if (!mode.indent) return CodeMirror.Pass;\n        return mode.indent(state.innerActive ? state.inner : state.outer, textAfter, line);\n      },\n      blankLine: function blankLine(state) {\n        var mode = state.innerActive ? state.innerActive.mode : outer;\n\n        if (mode.blankLine) {\n          mode.blankLine(state.innerActive ? state.inner : state.outer);\n        }\n\n        if (!state.innerActive) {\n          for (var i = 0; i < others.length; ++i) {\n            var other = others[i];\n\n            if (other.open === \"\\n\") {\n              state.innerActive = other;\n              state.inner = CodeMirror.startState(other.mode, mode.indent ? mode.indent(state.outer, \"\", \"\") : 0);\n            }\n          }\n        } else if (state.innerActive.close === \"\\n\") {\n          state.innerActive = state.inner = null;\n        }\n      },\n      electricChars: outer.electricChars,\n      innerMode: function innerMode(state) {\n        return state.inner ? {\n          state: state.inner,\n          mode: state.innerActive.mode\n        } : {\n          state: state.outer,\n          mode: outer\n        };\n      }\n    };\n  };\n});\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/mnt/Datengrab/python/Zero-tier/frontend/node_modules/codemirror/mode/twig/twig.js","/mnt/Datengrab/python/Zero-tier/frontend/node_modules/codemirror/addon/mode/multiplex.js"],"names":["mod","require","CodeMirror","defineMode","keywords","operator","sign","atom","number","RegExp","join","tokenBase","stream","state","ch","peek","incomment","skipTo","skipToEnd","eatWhile","intag","match","instring","next","eat","sol","startState","token","config","parserConfig","twigInner","getMode","base","multiplexingMode","open","close","mode","parseDelimiters","defineMIME","outer","others","Array","prototype","slice","call","arguments","indexOf","string","pattern","from","returnEnd","found","length","m","exec","index","innerActive","inner","startingInner","copyState","cutOff","Infinity","oldContent","i","other","pos","outerIndent","indent","possibleOuterIndent","Pass","delimStyle","outerToken","curInner","innerToken","start","innerStyle","textAfter","line","blankLine","electricChars","innerMode"],"mappings":"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","file":"x","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"),  require(\"../../addon/mode/multiplex\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/multiplex\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"twig:inner\", function() {\n    var keywords = [\"and\", \"as\", \"autoescape\", \"endautoescape\", \"block\", \"do\", \"endblock\", \"else\", \"elseif\", \"extends\", \"for\", \"endfor\", \"embed\", \"endembed\", \"filter\", \"endfilter\", \"flush\", \"from\", \"if\", \"endif\", \"in\", \"is\", \"include\", \"import\", \"not\", \"or\", \"set\", \"spaceless\", \"endspaceless\", \"with\", \"endwith\", \"trans\", \"endtrans\", \"blocktrans\", \"endblocktrans\", \"macro\", \"endmacro\", \"use\", \"verbatim\", \"endverbatim\"],\n        operator = /^[+\\-*&%=<>!?|~^]/,\n        sign = /^[:\\[\\(\\{]/,\n        atom = [\"true\", \"false\", \"null\", \"empty\", \"defined\", \"divisibleby\", \"divisible by\", \"even\", \"odd\", \"iterable\", \"sameas\", \"same as\"],\n        number = /^(\\d[+\\-\\*\\/])?\\d+(\\.\\d+)?/;\n\n    keywords = new RegExp(\"((\" + keywords.join(\")|(\") + \"))\\\\b\");\n    atom = new RegExp(\"((\" + atom.join(\")|(\") + \"))\\\\b\");\n\n    function tokenBase (stream, state) {\n      var ch = stream.peek();\n\n      //Comment\n      if (state.incomment) {\n        if (!stream.skipTo(\"#}\")) {\n          stream.skipToEnd();\n        } else {\n          stream.eatWhile(/\\#|}/);\n          state.incomment = false;\n        }\n        return \"comment\";\n      //Tag\n      } else if (state.intag) {\n        //After operator\n        if (state.operator) {\n          state.operator = false;\n          if (stream.match(atom)) {\n            return \"atom\";\n          }\n          if (stream.match(number)) {\n            return \"number\";\n          }\n        }\n        //After sign\n        if (state.sign) {\n          state.sign = false;\n          if (stream.match(atom)) {\n            return \"atom\";\n          }\n          if (stream.match(number)) {\n            return \"number\";\n          }\n        }\n\n        if (state.instring) {\n          if (ch == state.instring) {\n            state.instring = false;\n          }\n          stream.next();\n          return \"string\";\n        } else if (ch == \"'\" || ch == '\"') {\n          state.instring = ch;\n          stream.next();\n          return \"string\";\n        } else if (stream.match(state.intag + \"}\") || stream.eat(\"-\") && stream.match(state.intag + \"}\")) {\n          state.intag = false;\n          return \"tag\";\n        } else if (stream.match(operator)) {\n          state.operator = true;\n          return \"operator\";\n        } else if (stream.match(sign)) {\n          state.sign = true;\n        } else {\n          if (stream.eat(\" \") || stream.sol()) {\n            if (stream.match(keywords)) {\n              return \"keyword\";\n            }\n            if (stream.match(atom)) {\n              return \"atom\";\n            }\n            if (stream.match(number)) {\n              return \"number\";\n            }\n            if (stream.sol()) {\n              stream.next();\n            }\n          } else {\n            stream.next();\n          }\n\n        }\n        return \"variable\";\n      } else if (stream.eat(\"{\")) {\n        if (stream.eat(\"#\")) {\n          state.incomment = true;\n          if (!stream.skipTo(\"#}\")) {\n            stream.skipToEnd();\n          } else {\n            stream.eatWhile(/\\#|}/);\n            state.incomment = false;\n          }\n          return \"comment\";\n        //Open tag\n        } else if (ch = stream.eat(/\\{|%/)) {\n          //Cache close tag\n          state.intag = ch;\n          if (ch == \"{\") {\n            state.intag = \"}\";\n          }\n          stream.eat(\"-\");\n          return \"tag\";\n        }\n      }\n      stream.next();\n    };\n\n    return {\n      startState: function () {\n        return {};\n      },\n      token: function (stream, state) {\n        return tokenBase(stream, state);\n      }\n    };\n  });\n\n  CodeMirror.defineMode(\"twig\", function(config, parserConfig) {\n    var twigInner = CodeMirror.getMode(config, \"twig:inner\");\n    if (!parserConfig || !parserConfig.base) return twigInner;\n    return CodeMirror.multiplexingMode(\n      CodeMirror.getMode(config, parserConfig.base), {\n        open: /\\{[{#%]/, close: /[}#%]\\}/, mode: twigInner, parseDelimiters: true\n      }\n    );\n  });\n  CodeMirror.defineMIME(\"text/x-twig\", \"twig\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.multiplexingMode = function(outer /*, others */) {\n  // Others should be {open, close, mode [, delimStyle] [, innerStyle] [, parseDelimiters]} objects\n  var others = Array.prototype.slice.call(arguments, 1);\n\n  function indexOf(string, pattern, from, returnEnd) {\n    if (typeof pattern == \"string\") {\n      var found = string.indexOf(pattern, from);\n      return returnEnd && found > -1 ? found + pattern.length : found;\n    }\n    var m = pattern.exec(from ? string.slice(from) : string);\n    return m ? m.index + from + (returnEnd ? m[0].length : 0) : -1;\n  }\n\n  return {\n    startState: function() {\n      return {\n        outer: CodeMirror.startState(outer),\n        innerActive: null,\n        inner: null,\n        startingInner: false\n      };\n    },\n\n    copyState: function(state) {\n      return {\n        outer: CodeMirror.copyState(outer, state.outer),\n        innerActive: state.innerActive,\n        inner: state.innerActive && CodeMirror.copyState(state.innerActive.mode, state.inner),\n        startingInner: state.startingInner\n      };\n    },\n\n    token: function(stream, state) {\n      if (!state.innerActive) {\n        var cutOff = Infinity, oldContent = stream.string;\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          var found = indexOf(oldContent, other.open, stream.pos);\n          if (found == stream.pos) {\n            if (!other.parseDelimiters) stream.match(other.open);\n            state.startingInner = !!other.parseDelimiters\n            state.innerActive = other;\n\n            // Get the outer indent, making sure to handle CodeMirror.Pass\n            var outerIndent = 0;\n            if (outer.indent) {\n              var possibleOuterIndent = outer.indent(state.outer, \"\", \"\");\n              if (possibleOuterIndent !== CodeMirror.Pass) outerIndent = possibleOuterIndent;\n            }\n\n            state.inner = CodeMirror.startState(other.mode, outerIndent);\n            return other.delimStyle && (other.delimStyle + \" \" + other.delimStyle + \"-open\");\n          } else if (found != -1 && found < cutOff) {\n            cutOff = found;\n          }\n        }\n        if (cutOff != Infinity) stream.string = oldContent.slice(0, cutOff);\n        var outerToken = outer.token(stream, state.outer);\n        if (cutOff != Infinity) stream.string = oldContent;\n        return outerToken;\n      } else {\n        var curInner = state.innerActive, oldContent = stream.string;\n        if (!curInner.close && stream.sol()) {\n          state.innerActive = state.inner = null;\n          return this.token(stream, state);\n        }\n        var found = curInner.close && !state.startingInner ?\n            indexOf(oldContent, curInner.close, stream.pos, curInner.parseDelimiters) : -1;\n        if (found == stream.pos && !curInner.parseDelimiters) {\n          stream.match(curInner.close);\n          state.innerActive = state.inner = null;\n          return curInner.delimStyle && (curInner.delimStyle + \" \" + curInner.delimStyle + \"-close\");\n        }\n        if (found > -1) stream.string = oldContent.slice(0, found);\n        var innerToken = curInner.mode.token(stream, state.inner);\n        if (found > -1) stream.string = oldContent;\n        else if (stream.pos > stream.start) state.startingInner = false\n\n        if (found == stream.pos && curInner.parseDelimiters)\n          state.innerActive = state.inner = null;\n\n        if (curInner.innerStyle) {\n          if (innerToken) innerToken = innerToken + \" \" + curInner.innerStyle;\n          else innerToken = curInner.innerStyle;\n        }\n\n        return innerToken;\n      }\n    },\n\n    indent: function(state, textAfter, line) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (!mode.indent) return CodeMirror.Pass;\n      return mode.indent(state.innerActive ? state.inner : state.outer, textAfter, line);\n    },\n\n    blankLine: function(state) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (mode.blankLine) {\n        mode.blankLine(state.innerActive ? state.inner : state.outer);\n      }\n      if (!state.innerActive) {\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          if (other.open === \"\\n\") {\n            state.innerActive = other;\n            state.inner = CodeMirror.startState(other.mode, mode.indent ? mode.indent(state.outer, \"\", \"\") : 0);\n          }\n        }\n      } else if (state.innerActive.close === \"\\n\") {\n        state.innerActive = state.inner = null;\n      }\n    },\n\n    electricChars: outer.electricChars,\n\n    innerMode: function(state) {\n      return state.inner ? {state: state.inner, mode: state.innerActive.mode} : {state: state.outer, mode: outer};\n    }\n  };\n};\n\n});\n"]}}