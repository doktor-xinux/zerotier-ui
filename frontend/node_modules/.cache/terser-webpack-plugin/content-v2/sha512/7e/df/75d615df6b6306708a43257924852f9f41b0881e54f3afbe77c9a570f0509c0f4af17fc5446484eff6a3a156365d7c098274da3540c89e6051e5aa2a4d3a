{"code":"(this.webpackJsonpfrontend=this.webpackJsonpfrontend||[]).push([[40],{310:function(e,t,n){!function(e){\"use strict\";e.defineMode(\"crystal\",(function(e){function t(e,t){return new RegExp((t?\"\":\"^\")+\"(?:\"+e.join(\"|\")+\")\"+(t?\"$\":\"\\\\b\"))}function n(e,t,n){return n.tokenize.push(e),e(t,n)}var r=/^(?:[-+/%|&^]|\\*\\*?|[<>]{2})/,a=/^(?:[=!]~|===|<=>|[<>=!]=?|[|&]{2}|~)/,u=/^(?:\\[\\][?=]?)/,i=/^(?:\\.(?:\\.{2})?|->|[?:])/,o=/^[a-z_\\u009F-\\uFFFF][a-zA-Z0-9_\\u009F-\\uFFFF]*/,c=/^[A-Z_\\u009F-\\uFFFF][a-zA-Z0-9_\\u009F-\\uFFFF]*/,s=t([\"abstract\",\"alias\",\"as\",\"asm\",\"begin\",\"break\",\"case\",\"class\",\"def\",\"do\",\"else\",\"elsif\",\"end\",\"ensure\",\"enum\",\"extend\",\"for\",\"fun\",\"if\",\"include\",\"instance_sizeof\",\"lib\",\"macro\",\"module\",\"next\",\"of\",\"out\",\"pointerof\",\"private\",\"protected\",\"rescue\",\"return\",\"require\",\"select\",\"sizeof\",\"struct\",\"super\",\"then\",\"type\",\"typeof\",\"uninitialized\",\"union\",\"unless\",\"until\",\"when\",\"while\",\"with\",\"yield\",\"__DIR__\",\"__END_LINE__\",\"__FILE__\",\"__LINE__\"]),f=t([\"true\",\"false\",\"nil\",\"self\"]),l=t([\"def\",\"fun\",\"macro\",\"class\",\"module\",\"struct\",\"lib\",\"enum\",\"union\",\"do\",\"for\"]),m=t([\"if\",\"unless\",\"case\",\"while\",\"until\",\"begin\",\"then\"]),h=[\"end\",\"else\",\"elsif\",\"rescue\",\"ensure\"],p=t(h),d=[\"\\\\)\",\"\\\\}\",\"\\\\]\"],k=new RegExp(\"^(?:\"+d.join(\"|\")+\")$\"),F={def:w,fun:w,macro:x,class:I,module:I,struct:I,lib:I,enum:I,union:I},z={\"[\":\"]\",\"{\":\"}\",\"(\":\")\",\"<\":\">\"};function _(e,t){if(e.eatSpace())return null;if(\"\\\\\"!=t.lastToken&&e.match(\"{%\",!1))return n(g(\"%\",\"%\"),e,t);if(\"\\\\\"!=t.lastToken&&e.match(\"{{\",!1))return n(g(\"{\",\"}\"),e,t);if(\"#\"==e.peek())return e.skipToEnd(),\"comment\";var h;if(e.match(o))return e.eat(/[?!]/),h=e.current(),e.eat(\":\")?\"atom\":\".\"==t.lastToken?\"property\":s.test(h)?(l.test(h)?\"fun\"==h&&t.blocks.indexOf(\"lib\")>=0||\"def\"==h&&\"abstract\"==t.lastToken||(t.blocks.push(h),t.currentIndent+=1):\"operator\"!=t.lastStyle&&t.lastStyle||!m.test(h)?\"end\"==h&&(t.blocks.pop(),t.currentIndent-=1):(t.blocks.push(h),t.currentIndent+=1),F.hasOwnProperty(h)&&t.tokenize.push(F[h]),\"keyword\"):f.test(h)?\"atom\":\"variable\";if(e.eat(\"@\"))return\"[\"==e.peek()?n(b(\"[\",\"]\",\"meta\"),e,t):(e.eat(\"@\"),e.match(o)||e.match(c),\"variable-2\");if(e.match(c))return\"tag\";if(e.eat(\":\"))return e.eat('\"')?n(y('\"',\"atom\",!1),e,t):e.match(o)||e.match(c)||e.match(r)||e.match(a)||e.match(u)?\"atom\":(e.eat(\":\"),\"operator\");if(e.eat('\"'))return n(y('\"',\"string\",!0),e,t);if(\"%\"==e.peek()){var p,d=\"string\",k=!0;if(e.match(\"%r\"))d=\"string-2\",p=e.next();else if(e.match(\"%w\"))k=!1,p=e.next();else if(e.match(\"%q\"))k=!1,p=e.next();else if(p=e.match(/^%([^\\w\\s=])/))p=p[1];else{if(e.match(/^%[a-zA-Z_\\u009F-\\uFFFF][\\w\\u009F-\\uFFFF]*/))return\"meta\";if(e.eat(\"%\"))return\"operator\"}return z.hasOwnProperty(p)&&(p=z[p]),n(y(p,d,k),e,t)}return(h=e.match(/^<<-('?)([A-Z]\\w*)\\1/))?n(v(h[2],!h[1]),e,t):e.eat(\"'\")?(e.match(/^(?:[^']|\\\\(?:[befnrtv0'\"]|[0-7]{3}|u(?:[0-9a-fA-F]{4}|\\{[0-9a-fA-F]{1,6}\\})))/),e.eat(\"'\"),\"atom\"):e.eat(\"0\")?(e.eat(\"x\")?e.match(/^[0-9a-fA-F_]+/):e.eat(\"o\")?e.match(/^[0-7_]+/):e.eat(\"b\")&&e.match(/^[01_]+/),\"number\"):e.eat(/^\\d/)?(e.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+-]?\\d+)?/),\"number\"):e.match(r)?(e.eat(\"=\"),\"operator\"):e.match(a)||e.match(i)?\"operator\":(h=e.match(/[({[]/,!1))?n(b(h=h[0],z[h],null),e,t):e.eat(\"\\\\\")?(e.next(),\"meta\"):(e.next(),null)}function b(e,t,n,r){return function(a,u){if(!r&&a.match(e))return u.tokenize[u.tokenize.length-1]=b(e,t,n,!0),u.currentIndent+=1,n;var i=_(a,u);return a.current()===t&&(u.tokenize.pop(),u.currentIndent-=1,i=n),i}}function g(e,t,n){return function(r,a){return!n&&r.match(\"{\"+e)?(a.currentIndent+=1,a.tokenize[a.tokenize.length-1]=g(e,t,!0),\"meta\"):r.match(t+\"}\")?(a.currentIndent-=1,a.tokenize.pop(),\"meta\"):_(r,a)}}function x(e,t){if(e.eatSpace())return null;var n;if(n=e.match(o)){if(\"def\"==n)return\"keyword\";e.eat(/[?!]/)}return t.tokenize.pop(),\"def\"}function w(e,t){return e.eatSpace()?null:(e.match(o)?e.eat(/[!?]/):e.match(r)||e.match(a)||e.match(u),t.tokenize.pop(),\"def\")}function I(e,t){return e.eatSpace()?null:(e.match(c),t.tokenize.pop(),\"def\")}function y(e,t,n){return function(r,a){for(var u=!1;r.peek();)if(u)r.next(),u=!1;else{if(r.match(\"{%\",!1))return a.tokenize.push(g(\"%\",\"%\")),t;if(r.match(\"{{\",!1))return a.tokenize.push(g(\"{\",\"}\")),t;if(n&&r.match(\"#{\",!1))return a.tokenize.push(b(\"#{\",\"}\",\"meta\")),t;var i=r.next();if(i==e)return a.tokenize.pop(),t;u=n&&\"\\\\\"==i}return t}}function v(e,t){return function(n,r){if(n.sol()&&(n.eatSpace(),n.match(e)))return r.tokenize.pop(),\"string\";for(var a=!1;n.peek();)if(a)n.next(),a=!1;else{if(n.match(\"{%\",!1))return r.tokenize.push(g(\"%\",\"%\")),\"string\";if(n.match(\"{{\",!1))return r.tokenize.push(g(\"{\",\"}\")),\"string\";if(t&&n.match(\"#{\",!1))return r.tokenize.push(b(\"#{\",\"}\",\"meta\")),\"string\";a=t&&\"\\\\\"==n.next()}return\"string\"}}return{startState:function(){return{tokenize:[_],currentIndent:0,lastToken:null,lastStyle:null,blocks:[]}},token:function(e,t){var n=t.tokenize[t.tokenize.length-1](e,t),r=e.current();return n&&\"comment\"!=n&&(t.lastToken=r,t.lastStyle=n),n},indent:function(t,n){return n=n.replace(/^\\s*(?:\\{%)?\\s*|\\s*(?:%\\})?\\s*$/g,\"\"),p.test(n)||k.test(n)?e.indentUnit*(t.currentIndent-1):e.indentUnit*t.currentIndent},fold:\"indent\",electricInput:t(d.concat(h),!0),lineComment:\"#\"}})),e.defineMIME(\"text/x-crystal\",\"crystal\")}(n(108))}}]);","name":"static/js/40.6b4f327c.chunk.js","map":{"version":3,"sources":["static/js/40.6b4f327c.chunk.js"],"names":["this","push","module","exports","__webpack_require__","CodeMirror","defineMode","config","wordRegExp","words","end","RegExp","join","chain","tokenize","stream","state","operators","conditionalOperators","indexingOperators","anotherOperators","idents","types","keywords","atomWords","indentKeywords","indentExpressionKeywords","dedentKeywordsArray","dedentKeywords","dedentPunctualsArray","dedentPunctuals","nextTokenizer","def","tokenFollowIdent","fun","macro","tokenMacroDef","class","tokenFollowType","struct","lib","enum","union","matching","tokenBase","eatSpace","lastToken","match","tokenMacro","peek","skipToEnd","matched","eat","current","test","blocks","indexOf","currentIndent","lastStyle","pop","hasOwnProperty","tokenNest","tokenQuote","delim","style","embed","next","tokenHereDoc","begin","started","length","nextStyle","escaped","ch","phrase","sol","startState","token","indent","textAfter","replace","indentUnit","fold","electricInput","concat","lineComment","defineMIME","mod"],"mappings":"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"},"input":"(this[\"webpackJsonpfrontend\"] = this[\"webpackJsonpfrontend\"] || []).push([[40],{\n\n/***/ 310:\n/***/ (function(module, exports, __webpack_require__) {\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (true) // CommonJS\n    mod(__webpack_require__(108));else {}\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"crystal\", function (config) {\n    function wordRegExp(words, end) {\n      return new RegExp((end ? \"\" : \"^\") + \"(?:\" + words.join(\"|\") + \")\" + (end ? \"$\" : \"\\\\b\"));\n    }\n\n    function chain(tokenize, stream, state) {\n      state.tokenize.push(tokenize);\n      return tokenize(stream, state);\n    }\n\n    var operators = /^(?:[-+/%|&^]|\\*\\*?|[<>]{2})/;\n    var conditionalOperators = /^(?:[=!]~|===|<=>|[<>=!]=?|[|&]{2}|~)/;\n    var indexingOperators = /^(?:\\[\\][?=]?)/;\n    var anotherOperators = /^(?:\\.(?:\\.{2})?|->|[?:])/;\n    var idents = /^[a-z_\\u009F-\\uFFFF][a-zA-Z0-9_\\u009F-\\uFFFF]*/;\n    var types = /^[A-Z_\\u009F-\\uFFFF][a-zA-Z0-9_\\u009F-\\uFFFF]*/;\n    var keywords = wordRegExp([\"abstract\", \"alias\", \"as\", \"asm\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"do\", \"else\", \"elsif\", \"end\", \"ensure\", \"enum\", \"extend\", \"for\", \"fun\", \"if\", \"include\", \"instance_sizeof\", \"lib\", \"macro\", \"module\", \"next\", \"of\", \"out\", \"pointerof\", \"private\", \"protected\", \"rescue\", \"return\", \"require\", \"select\", \"sizeof\", \"struct\", \"super\", \"then\", \"type\", \"typeof\", \"uninitialized\", \"union\", \"unless\", \"until\", \"when\", \"while\", \"with\", \"yield\", \"__DIR__\", \"__END_LINE__\", \"__FILE__\", \"__LINE__\"]);\n    var atomWords = wordRegExp([\"true\", \"false\", \"nil\", \"self\"]);\n    var indentKeywordsArray = [\"def\", \"fun\", \"macro\", \"class\", \"module\", \"struct\", \"lib\", \"enum\", \"union\", \"do\", \"for\"];\n    var indentKeywords = wordRegExp(indentKeywordsArray);\n    var indentExpressionKeywordsArray = [\"if\", \"unless\", \"case\", \"while\", \"until\", \"begin\", \"then\"];\n    var indentExpressionKeywords = wordRegExp(indentExpressionKeywordsArray);\n    var dedentKeywordsArray = [\"end\", \"else\", \"elsif\", \"rescue\", \"ensure\"];\n    var dedentKeywords = wordRegExp(dedentKeywordsArray);\n    var dedentPunctualsArray = [\"\\\\)\", \"\\\\}\", \"\\\\]\"];\n    var dedentPunctuals = new RegExp(\"^(?:\" + dedentPunctualsArray.join(\"|\") + \")$\");\n    var nextTokenizer = {\n      \"def\": tokenFollowIdent,\n      \"fun\": tokenFollowIdent,\n      \"macro\": tokenMacroDef,\n      \"class\": tokenFollowType,\n      \"module\": tokenFollowType,\n      \"struct\": tokenFollowType,\n      \"lib\": tokenFollowType,\n      \"enum\": tokenFollowType,\n      \"union\": tokenFollowType\n    };\n    var matching = {\n      \"[\": \"]\",\n      \"{\": \"}\",\n      \"(\": \")\",\n      \"<\": \">\"\n    };\n\n    function tokenBase(stream, state) {\n      if (stream.eatSpace()) {\n        return null;\n      } // Macros\n\n\n      if (state.lastToken != \"\\\\\" && stream.match(\"{%\", false)) {\n        return chain(tokenMacro(\"%\", \"%\"), stream, state);\n      }\n\n      if (state.lastToken != \"\\\\\" && stream.match(\"{{\", false)) {\n        return chain(tokenMacro(\"{\", \"}\"), stream, state);\n      } // Comments\n\n\n      if (stream.peek() == \"#\") {\n        stream.skipToEnd();\n        return \"comment\";\n      } // Variables and keywords\n\n\n      var matched;\n\n      if (stream.match(idents)) {\n        stream.eat(/[?!]/);\n        matched = stream.current();\n\n        if (stream.eat(\":\")) {\n          return \"atom\";\n        } else if (state.lastToken == \".\") {\n          return \"property\";\n        } else if (keywords.test(matched)) {\n          if (indentKeywords.test(matched)) {\n            if (!(matched == \"fun\" && state.blocks.indexOf(\"lib\") >= 0) && !(matched == \"def\" && state.lastToken == \"abstract\")) {\n              state.blocks.push(matched);\n              state.currentIndent += 1;\n            }\n          } else if ((state.lastStyle == \"operator\" || !state.lastStyle) && indentExpressionKeywords.test(matched)) {\n            state.blocks.push(matched);\n            state.currentIndent += 1;\n          } else if (matched == \"end\") {\n            state.blocks.pop();\n            state.currentIndent -= 1;\n          }\n\n          if (nextTokenizer.hasOwnProperty(matched)) {\n            state.tokenize.push(nextTokenizer[matched]);\n          }\n\n          return \"keyword\";\n        } else if (atomWords.test(matched)) {\n          return \"atom\";\n        }\n\n        return \"variable\";\n      } // Class variables and instance variables\n      // or attributes\n\n\n      if (stream.eat(\"@\")) {\n        if (stream.peek() == \"[\") {\n          return chain(tokenNest(\"[\", \"]\", \"meta\"), stream, state);\n        }\n\n        stream.eat(\"@\");\n        stream.match(idents) || stream.match(types);\n        return \"variable-2\";\n      } // Constants and types\n\n\n      if (stream.match(types)) {\n        return \"tag\";\n      } // Symbols or ':' operator\n\n\n      if (stream.eat(\":\")) {\n        if (stream.eat(\"\\\"\")) {\n          return chain(tokenQuote(\"\\\"\", \"atom\", false), stream, state);\n        } else if (stream.match(idents) || stream.match(types) || stream.match(operators) || stream.match(conditionalOperators) || stream.match(indexingOperators)) {\n          return \"atom\";\n        }\n\n        stream.eat(\":\");\n        return \"operator\";\n      } // Strings\n\n\n      if (stream.eat(\"\\\"\")) {\n        return chain(tokenQuote(\"\\\"\", \"string\", true), stream, state);\n      } // Strings or regexps or macro variables or '%' operator\n\n\n      if (stream.peek() == \"%\") {\n        var style = \"string\";\n        var embed = true;\n        var delim;\n\n        if (stream.match(\"%r\")) {\n          // Regexps\n          style = \"string-2\";\n          delim = stream.next();\n        } else if (stream.match(\"%w\")) {\n          embed = false;\n          delim = stream.next();\n        } else if (stream.match(\"%q\")) {\n          embed = false;\n          delim = stream.next();\n        } else {\n          if (delim = stream.match(/^%([^\\w\\s=])/)) {\n            delim = delim[1];\n          } else if (stream.match(/^%[a-zA-Z_\\u009F-\\uFFFF][\\w\\u009F-\\uFFFF]*/)) {\n            // Macro variables\n            return \"meta\";\n          } else if (stream.eat('%')) {\n            // '%' operator\n            return \"operator\";\n          }\n        }\n\n        if (matching.hasOwnProperty(delim)) {\n          delim = matching[delim];\n        }\n\n        return chain(tokenQuote(delim, style, embed), stream, state);\n      } // Here Docs\n\n\n      if (matched = stream.match(/^<<-('?)([A-Z]\\w*)\\1/)) {\n        return chain(tokenHereDoc(matched[2], !matched[1]), stream, state);\n      } // Characters\n\n\n      if (stream.eat(\"'\")) {\n        stream.match(/^(?:[^']|\\\\(?:[befnrtv0'\"]|[0-7]{3}|u(?:[0-9a-fA-F]{4}|\\{[0-9a-fA-F]{1,6}\\})))/);\n        stream.eat(\"'\");\n        return \"atom\";\n      } // Numbers\n\n\n      if (stream.eat(\"0\")) {\n        if (stream.eat(\"x\")) {\n          stream.match(/^[0-9a-fA-F_]+/);\n        } else if (stream.eat(\"o\")) {\n          stream.match(/^[0-7_]+/);\n        } else if (stream.eat(\"b\")) {\n          stream.match(/^[01_]+/);\n        }\n\n        return \"number\";\n      }\n\n      if (stream.eat(/^\\d/)) {\n        stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+-]?\\d+)?/);\n        return \"number\";\n      } // Operators\n\n\n      if (stream.match(operators)) {\n        stream.eat(\"=\"); // Operators can follow assign symbol.\n\n        return \"operator\";\n      }\n\n      if (stream.match(conditionalOperators) || stream.match(anotherOperators)) {\n        return \"operator\";\n      } // Parens and braces\n\n\n      if (matched = stream.match(/[({[]/, false)) {\n        matched = matched[0];\n        return chain(tokenNest(matched, matching[matched], null), stream, state);\n      } // Escapes\n\n\n      if (stream.eat(\"\\\\\")) {\n        stream.next();\n        return \"meta\";\n      }\n\n      stream.next();\n      return null;\n    }\n\n    function tokenNest(begin, end, style, started) {\n      return function (stream, state) {\n        if (!started && stream.match(begin)) {\n          state.tokenize[state.tokenize.length - 1] = tokenNest(begin, end, style, true);\n          state.currentIndent += 1;\n          return style;\n        }\n\n        var nextStyle = tokenBase(stream, state);\n\n        if (stream.current() === end) {\n          state.tokenize.pop();\n          state.currentIndent -= 1;\n          nextStyle = style;\n        }\n\n        return nextStyle;\n      };\n    }\n\n    function tokenMacro(begin, end, started) {\n      return function (stream, state) {\n        if (!started && stream.match(\"{\" + begin)) {\n          state.currentIndent += 1;\n          state.tokenize[state.tokenize.length - 1] = tokenMacro(begin, end, true);\n          return \"meta\";\n        }\n\n        if (stream.match(end + \"}\")) {\n          state.currentIndent -= 1;\n          state.tokenize.pop();\n          return \"meta\";\n        }\n\n        return tokenBase(stream, state);\n      };\n    }\n\n    function tokenMacroDef(stream, state) {\n      if (stream.eatSpace()) {\n        return null;\n      }\n\n      var matched;\n\n      if (matched = stream.match(idents)) {\n        if (matched == \"def\") {\n          return \"keyword\";\n        }\n\n        stream.eat(/[?!]/);\n      }\n\n      state.tokenize.pop();\n      return \"def\";\n    }\n\n    function tokenFollowIdent(stream, state) {\n      if (stream.eatSpace()) {\n        return null;\n      }\n\n      if (stream.match(idents)) {\n        stream.eat(/[!?]/);\n      } else {\n        stream.match(operators) || stream.match(conditionalOperators) || stream.match(indexingOperators);\n      }\n\n      state.tokenize.pop();\n      return \"def\";\n    }\n\n    function tokenFollowType(stream, state) {\n      if (stream.eatSpace()) {\n        return null;\n      }\n\n      stream.match(types);\n      state.tokenize.pop();\n      return \"def\";\n    }\n\n    function tokenQuote(end, style, embed) {\n      return function (stream, state) {\n        var escaped = false;\n\n        while (stream.peek()) {\n          if (!escaped) {\n            if (stream.match(\"{%\", false)) {\n              state.tokenize.push(tokenMacro(\"%\", \"%\"));\n              return style;\n            }\n\n            if (stream.match(\"{{\", false)) {\n              state.tokenize.push(tokenMacro(\"{\", \"}\"));\n              return style;\n            }\n\n            if (embed && stream.match(\"#{\", false)) {\n              state.tokenize.push(tokenNest(\"#{\", \"}\", \"meta\"));\n              return style;\n            }\n\n            var ch = stream.next();\n\n            if (ch == end) {\n              state.tokenize.pop();\n              return style;\n            }\n\n            escaped = embed && ch == \"\\\\\";\n          } else {\n            stream.next();\n            escaped = false;\n          }\n        }\n\n        return style;\n      };\n    }\n\n    function tokenHereDoc(phrase, embed) {\n      return function (stream, state) {\n        if (stream.sol()) {\n          stream.eatSpace();\n\n          if (stream.match(phrase)) {\n            state.tokenize.pop();\n            return \"string\";\n          }\n        }\n\n        var escaped = false;\n\n        while (stream.peek()) {\n          if (!escaped) {\n            if (stream.match(\"{%\", false)) {\n              state.tokenize.push(tokenMacro(\"%\", \"%\"));\n              return \"string\";\n            }\n\n            if (stream.match(\"{{\", false)) {\n              state.tokenize.push(tokenMacro(\"{\", \"}\"));\n              return \"string\";\n            }\n\n            if (embed && stream.match(\"#{\", false)) {\n              state.tokenize.push(tokenNest(\"#{\", \"}\", \"meta\"));\n              return \"string\";\n            }\n\n            escaped = embed && stream.next() == \"\\\\\";\n          } else {\n            stream.next();\n            escaped = false;\n          }\n        }\n\n        return \"string\";\n      };\n    }\n\n    return {\n      startState: function startState() {\n        return {\n          tokenize: [tokenBase],\n          currentIndent: 0,\n          lastToken: null,\n          lastStyle: null,\n          blocks: []\n        };\n      },\n      token: function token(stream, state) {\n        var style = state.tokenize[state.tokenize.length - 1](stream, state);\n        var token = stream.current();\n\n        if (style && style != \"comment\") {\n          state.lastToken = token;\n          state.lastStyle = style;\n        }\n\n        return style;\n      },\n      indent: function indent(state, textAfter) {\n        textAfter = textAfter.replace(/^\\s*(?:\\{%)?\\s*|\\s*(?:%\\})?\\s*$/g, \"\");\n\n        if (dedentKeywords.test(textAfter) || dedentPunctuals.test(textAfter)) {\n          return config.indentUnit * (state.currentIndent - 1);\n        }\n\n        return config.indentUnit * state.currentIndent;\n      },\n      fold: \"indent\",\n      electricInput: wordRegExp(dedentPunctualsArray.concat(dedentKeywordsArray), true),\n      lineComment: '#'\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-crystal\", \"crystal\");\n});\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/mnt/Datengrab/python/Zero-tier/frontend/node_modules/codemirror/mode/crystal/crystal.js"],"names":["mod","require","CodeMirror","defineMode","config","wordRegExp","words","end","RegExp","join","chain","tokenize","stream","state","push","operators","conditionalOperators","indexingOperators","anotherOperators","idents","types","keywords","atomWords","indentKeywordsArray","indentKeywords","indentExpressionKeywordsArray","indentExpressionKeywords","dedentKeywordsArray","dedentKeywords","dedentPunctualsArray","dedentPunctuals","nextTokenizer","tokenFollowIdent","tokenMacroDef","tokenFollowType","matching","tokenBase","eatSpace","lastToken","match","tokenMacro","peek","skipToEnd","matched","eat","current","test","blocks","indexOf","currentIndent","lastStyle","pop","hasOwnProperty","tokenNest","tokenQuote","style","embed","delim","next","tokenHereDoc","begin","started","length","nextStyle","escaped","ch","phrase","sol","startState","token","indent","textAfter","replace","indentUnit","fold","electricInput","concat","lineComment","defineMIME"],"mappings":"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","file":"x","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"crystal\", function(config) {\n    function wordRegExp(words, end) {\n      return new RegExp((end ? \"\" : \"^\") + \"(?:\" + words.join(\"|\") + \")\" + (end ? \"$\" : \"\\\\b\"));\n    }\n\n    function chain(tokenize, stream, state) {\n      state.tokenize.push(tokenize);\n      return tokenize(stream, state);\n    }\n\n    var operators = /^(?:[-+/%|&^]|\\*\\*?|[<>]{2})/;\n    var conditionalOperators = /^(?:[=!]~|===|<=>|[<>=!]=?|[|&]{2}|~)/;\n    var indexingOperators = /^(?:\\[\\][?=]?)/;\n    var anotherOperators = /^(?:\\.(?:\\.{2})?|->|[?:])/;\n    var idents = /^[a-z_\\u009F-\\uFFFF][a-zA-Z0-9_\\u009F-\\uFFFF]*/;\n    var types = /^[A-Z_\\u009F-\\uFFFF][a-zA-Z0-9_\\u009F-\\uFFFF]*/;\n    var keywords = wordRegExp([\n      \"abstract\", \"alias\", \"as\", \"asm\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"do\",\n      \"else\", \"elsif\", \"end\", \"ensure\", \"enum\", \"extend\", \"for\", \"fun\", \"if\",\n      \"include\", \"instance_sizeof\", \"lib\", \"macro\", \"module\", \"next\", \"of\", \"out\", \"pointerof\",\n      \"private\", \"protected\", \"rescue\", \"return\", \"require\", \"select\", \"sizeof\", \"struct\",\n      \"super\", \"then\", \"type\", \"typeof\", \"uninitialized\", \"union\", \"unless\", \"until\", \"when\", \"while\", \"with\",\n      \"yield\", \"__DIR__\", \"__END_LINE__\", \"__FILE__\", \"__LINE__\"\n    ]);\n    var atomWords = wordRegExp([\"true\", \"false\", \"nil\", \"self\"]);\n    var indentKeywordsArray = [\n      \"def\", \"fun\", \"macro\",\n      \"class\", \"module\", \"struct\", \"lib\", \"enum\", \"union\",\n      \"do\", \"for\"\n    ];\n    var indentKeywords = wordRegExp(indentKeywordsArray);\n    var indentExpressionKeywordsArray = [\"if\", \"unless\", \"case\", \"while\", \"until\", \"begin\", \"then\"];\n    var indentExpressionKeywords = wordRegExp(indentExpressionKeywordsArray);\n    var dedentKeywordsArray = [\"end\", \"else\", \"elsif\", \"rescue\", \"ensure\"];\n    var dedentKeywords = wordRegExp(dedentKeywordsArray);\n    var dedentPunctualsArray = [\"\\\\)\", \"\\\\}\", \"\\\\]\"];\n    var dedentPunctuals = new RegExp(\"^(?:\" + dedentPunctualsArray.join(\"|\") + \")$\");\n    var nextTokenizer = {\n      \"def\": tokenFollowIdent, \"fun\": tokenFollowIdent, \"macro\": tokenMacroDef,\n      \"class\": tokenFollowType, \"module\": tokenFollowType, \"struct\": tokenFollowType,\n      \"lib\": tokenFollowType, \"enum\": tokenFollowType, \"union\": tokenFollowType\n    };\n    var matching = {\"[\": \"]\", \"{\": \"}\", \"(\": \")\", \"<\": \">\"};\n\n    function tokenBase(stream, state) {\n      if (stream.eatSpace()) {\n        return null;\n      }\n\n      // Macros\n      if (state.lastToken != \"\\\\\" && stream.match(\"{%\", false)) {\n        return chain(tokenMacro(\"%\", \"%\"), stream, state);\n      }\n\n      if (state.lastToken != \"\\\\\" && stream.match(\"{{\", false)) {\n        return chain(tokenMacro(\"{\", \"}\"), stream, state);\n      }\n\n      // Comments\n      if (stream.peek() == \"#\") {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n\n      // Variables and keywords\n      var matched;\n      if (stream.match(idents)) {\n        stream.eat(/[?!]/);\n\n        matched = stream.current();\n        if (stream.eat(\":\")) {\n          return \"atom\";\n        } else if (state.lastToken == \".\") {\n          return \"property\";\n        } else if (keywords.test(matched)) {\n          if (indentKeywords.test(matched)) {\n            if (!(matched == \"fun\" && state.blocks.indexOf(\"lib\") >= 0) && !(matched == \"def\" && state.lastToken == \"abstract\")) {\n              state.blocks.push(matched);\n              state.currentIndent += 1;\n            }\n          } else if ((state.lastStyle == \"operator\" || !state.lastStyle) && indentExpressionKeywords.test(matched)) {\n            state.blocks.push(matched);\n            state.currentIndent += 1;\n          } else if (matched == \"end\") {\n            state.blocks.pop();\n            state.currentIndent -= 1;\n          }\n\n          if (nextTokenizer.hasOwnProperty(matched)) {\n            state.tokenize.push(nextTokenizer[matched]);\n          }\n\n          return \"keyword\";\n        } else if (atomWords.test(matched)) {\n          return \"atom\";\n        }\n\n        return \"variable\";\n      }\n\n      // Class variables and instance variables\n      // or attributes\n      if (stream.eat(\"@\")) {\n        if (stream.peek() == \"[\") {\n          return chain(tokenNest(\"[\", \"]\", \"meta\"), stream, state);\n        }\n\n        stream.eat(\"@\");\n        stream.match(idents) || stream.match(types);\n        return \"variable-2\";\n      }\n\n      // Constants and types\n      if (stream.match(types)) {\n        return \"tag\";\n      }\n\n      // Symbols or ':' operator\n      if (stream.eat(\":\")) {\n        if (stream.eat(\"\\\"\")) {\n          return chain(tokenQuote(\"\\\"\", \"atom\", false), stream, state);\n        } else if (stream.match(idents) || stream.match(types) ||\n                   stream.match(operators) || stream.match(conditionalOperators) || stream.match(indexingOperators)) {\n          return \"atom\";\n        }\n        stream.eat(\":\");\n        return \"operator\";\n      }\n\n      // Strings\n      if (stream.eat(\"\\\"\")) {\n        return chain(tokenQuote(\"\\\"\", \"string\", true), stream, state);\n      }\n\n      // Strings or regexps or macro variables or '%' operator\n      if (stream.peek() == \"%\") {\n        var style = \"string\";\n        var embed = true;\n        var delim;\n\n        if (stream.match(\"%r\")) {\n          // Regexps\n          style = \"string-2\";\n          delim = stream.next();\n        } else if (stream.match(\"%w\")) {\n          embed = false;\n          delim = stream.next();\n        } else if (stream.match(\"%q\")) {\n          embed = false;\n          delim = stream.next();\n        } else {\n          if(delim = stream.match(/^%([^\\w\\s=])/)) {\n            delim = delim[1];\n          } else if (stream.match(/^%[a-zA-Z_\\u009F-\\uFFFF][\\w\\u009F-\\uFFFF]*/)) {\n            // Macro variables\n            return \"meta\";\n          } else if (stream.eat('%')) {\n            // '%' operator\n            return \"operator\";\n          }\n        }\n\n        if (matching.hasOwnProperty(delim)) {\n          delim = matching[delim];\n        }\n        return chain(tokenQuote(delim, style, embed), stream, state);\n      }\n\n      // Here Docs\n      if (matched = stream.match(/^<<-('?)([A-Z]\\w*)\\1/)) {\n        return chain(tokenHereDoc(matched[2], !matched[1]), stream, state)\n      }\n\n      // Characters\n      if (stream.eat(\"'\")) {\n        stream.match(/^(?:[^']|\\\\(?:[befnrtv0'\"]|[0-7]{3}|u(?:[0-9a-fA-F]{4}|\\{[0-9a-fA-F]{1,6}\\})))/);\n        stream.eat(\"'\");\n        return \"atom\";\n      }\n\n      // Numbers\n      if (stream.eat(\"0\")) {\n        if (stream.eat(\"x\")) {\n          stream.match(/^[0-9a-fA-F_]+/);\n        } else if (stream.eat(\"o\")) {\n          stream.match(/^[0-7_]+/);\n        } else if (stream.eat(\"b\")) {\n          stream.match(/^[01_]+/);\n        }\n        return \"number\";\n      }\n\n      if (stream.eat(/^\\d/)) {\n        stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+-]?\\d+)?/);\n        return \"number\";\n      }\n\n      // Operators\n      if (stream.match(operators)) {\n        stream.eat(\"=\"); // Operators can follow assign symbol.\n        return \"operator\";\n      }\n\n      if (stream.match(conditionalOperators) || stream.match(anotherOperators)) {\n        return \"operator\";\n      }\n\n      // Parens and braces\n      if (matched = stream.match(/[({[]/, false)) {\n        matched = matched[0];\n        return chain(tokenNest(matched, matching[matched], null), stream, state);\n      }\n\n      // Escapes\n      if (stream.eat(\"\\\\\")) {\n        stream.next();\n        return \"meta\";\n      }\n\n      stream.next();\n      return null;\n    }\n\n    function tokenNest(begin, end, style, started) {\n      return function (stream, state) {\n        if (!started && stream.match(begin)) {\n          state.tokenize[state.tokenize.length - 1] = tokenNest(begin, end, style, true);\n          state.currentIndent += 1;\n          return style;\n        }\n\n        var nextStyle = tokenBase(stream, state);\n        if (stream.current() === end) {\n          state.tokenize.pop();\n          state.currentIndent -= 1;\n          nextStyle = style;\n        }\n\n        return nextStyle;\n      };\n    }\n\n    function tokenMacro(begin, end, started) {\n      return function (stream, state) {\n        if (!started && stream.match(\"{\" + begin)) {\n          state.currentIndent += 1;\n          state.tokenize[state.tokenize.length - 1] = tokenMacro(begin, end, true);\n          return \"meta\";\n        }\n\n        if (stream.match(end + \"}\")) {\n          state.currentIndent -= 1;\n          state.tokenize.pop();\n          return \"meta\";\n        }\n\n        return tokenBase(stream, state);\n      };\n    }\n\n    function tokenMacroDef(stream, state) {\n      if (stream.eatSpace()) {\n        return null;\n      }\n\n      var matched;\n      if (matched = stream.match(idents)) {\n        if (matched == \"def\") {\n          return \"keyword\";\n        }\n        stream.eat(/[?!]/);\n      }\n\n      state.tokenize.pop();\n      return \"def\";\n    }\n\n    function tokenFollowIdent(stream, state) {\n      if (stream.eatSpace()) {\n        return null;\n      }\n\n      if (stream.match(idents)) {\n        stream.eat(/[!?]/);\n      } else {\n        stream.match(operators) || stream.match(conditionalOperators) || stream.match(indexingOperators);\n      }\n      state.tokenize.pop();\n      return \"def\";\n    }\n\n    function tokenFollowType(stream, state) {\n      if (stream.eatSpace()) {\n        return null;\n      }\n\n      stream.match(types);\n      state.tokenize.pop();\n      return \"def\";\n    }\n\n    function tokenQuote(end, style, embed) {\n      return function (stream, state) {\n        var escaped = false;\n\n        while (stream.peek()) {\n          if (!escaped) {\n            if (stream.match(\"{%\", false)) {\n              state.tokenize.push(tokenMacro(\"%\", \"%\"));\n              return style;\n            }\n\n            if (stream.match(\"{{\", false)) {\n              state.tokenize.push(tokenMacro(\"{\", \"}\"));\n              return style;\n            }\n\n            if (embed && stream.match(\"#{\", false)) {\n              state.tokenize.push(tokenNest(\"#{\", \"}\", \"meta\"));\n              return style;\n            }\n\n            var ch = stream.next();\n\n            if (ch == end) {\n              state.tokenize.pop();\n              return style;\n            }\n\n            escaped = embed && ch == \"\\\\\";\n          } else {\n            stream.next();\n            escaped = false;\n          }\n        }\n\n        return style;\n      };\n    }\n\n    function tokenHereDoc(phrase, embed) {\n      return function (stream, state) {\n        if (stream.sol()) {\n          stream.eatSpace()\n          if (stream.match(phrase)) {\n            state.tokenize.pop();\n            return \"string\";\n          }\n        }\n\n        var escaped = false;\n        while (stream.peek()) {\n          if (!escaped) {\n            if (stream.match(\"{%\", false)) {\n              state.tokenize.push(tokenMacro(\"%\", \"%\"));\n              return \"string\";\n            }\n\n            if (stream.match(\"{{\", false)) {\n              state.tokenize.push(tokenMacro(\"{\", \"}\"));\n              return \"string\";\n            }\n\n            if (embed && stream.match(\"#{\", false)) {\n              state.tokenize.push(tokenNest(\"#{\", \"}\", \"meta\"));\n              return \"string\";\n            }\n\n            escaped = embed && stream.next() == \"\\\\\";\n          } else {\n            stream.next();\n            escaped = false;\n          }\n        }\n\n        return \"string\";\n      }\n    }\n\n    return {\n      startState: function () {\n        return {\n          tokenize: [tokenBase],\n          currentIndent: 0,\n          lastToken: null,\n          lastStyle: null,\n          blocks: []\n        };\n      },\n\n      token: function (stream, state) {\n        var style = state.tokenize[state.tokenize.length - 1](stream, state);\n        var token = stream.current();\n\n        if (style && style != \"comment\") {\n          state.lastToken = token;\n          state.lastStyle = style;\n        }\n\n        return style;\n      },\n\n      indent: function (state, textAfter) {\n        textAfter = textAfter.replace(/^\\s*(?:\\{%)?\\s*|\\s*(?:%\\})?\\s*$/g, \"\");\n\n        if (dedentKeywords.test(textAfter) || dedentPunctuals.test(textAfter)) {\n          return config.indentUnit * (state.currentIndent - 1);\n        }\n\n        return config.indentUnit * state.currentIndent;\n      },\n\n      fold: \"indent\",\n      electricInput: wordRegExp(dedentPunctualsArray.concat(dedentKeywordsArray), true),\n      lineComment: '#'\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-crystal\", \"crystal\");\n});\n"]}}