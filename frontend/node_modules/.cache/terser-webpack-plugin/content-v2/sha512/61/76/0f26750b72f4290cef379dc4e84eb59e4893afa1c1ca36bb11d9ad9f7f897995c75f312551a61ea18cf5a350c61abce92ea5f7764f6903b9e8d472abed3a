{"code":"(this.webpackJsonpfrontend=this.webpackJsonpfrontend||[]).push([[46],{318:function(e,n,t){!function(e){\"use strict\";function n(e,n){for(var t=0;t<e.length;t++)n(e[t],t)}function t(e,n){for(var t=0;t<e.length;t++)if(n(e[t],t))return!0;return!1}e.defineMode(\"dylan\",(function(e){var i={unnamedDefinition:[\"interface\"],namedDefinition:[\"module\",\"library\",\"macro\",\"C-struct\",\"C-union\",\"C-function\",\"C-callable-wrapper\"],typeParameterizedDefinition:[\"class\",\"C-subtype\",\"C-mapped-subtype\"],otherParameterizedDefinition:[\"method\",\"function\",\"C-variable\",\"C-address\"],constantSimpleDefinition:[\"constant\"],variableSimpleDefinition:[\"variable\"],otherSimpleDefinition:[\"generic\",\"domain\",\"C-pointer-type\",\"table\"],statement:[\"if\",\"block\",\"begin\",\"method\",\"case\",\"for\",\"select\",\"when\",\"unless\",\"until\",\"while\",\"iterate\",\"profiling\",\"dynamic-bind\"],separator:[\"finally\",\"exception\",\"cleanup\",\"else\",\"elseif\",\"afterwards\"],other:[\"above\",\"below\",\"by\",\"from\",\"handler\",\"in\",\"instance\",\"let\",\"local\",\"otherwise\",\"slot\",\"subclass\",\"then\",\"to\",\"keyed-by\",\"virtual\"],signalingCalls:[\"signal\",\"error\",\"cerror\",\"break\",\"check-type\",\"abort\"]};i.otherDefinition=i.unnamedDefinition.concat(i.namedDefinition).concat(i.otherParameterizedDefinition),i.definition=i.typeParameterizedDefinition.concat(i.otherDefinition),i.parameterizedDefinition=i.typeParameterizedDefinition.concat(i.otherParameterizedDefinition),i.simpleDefinition=i.constantSimpleDefinition.concat(i.variableSimpleDefinition).concat(i.otherSimpleDefinition),i.keyword=i.statement.concat(i.separator).concat(i.other);var r=\"[-_a-zA-Z?!*@<>$%]+\",a=new RegExp(\"^\"+r),o={symbolKeyword:r+\":\",symbolClass:\"<\"+r+\">\",symbolGlobal:\"\\\\*\"+r+\"\\\\*\",symbolConstant:\"\\\\$\"+r},l={symbolKeyword:\"atom\",symbolClass:\"tag\",symbolGlobal:\"variable-2\",symbolConstant:\"variable-3\"};for(var f in o)o.hasOwnProperty(f)&&(o[f]=new RegExp(\"^\"+o[f]));o.keyword=[/^with(?:out)?-[-_a-zA-Z?!*@<>$%]+/];var c={keyword:\"keyword\",definition:\"def\",simpleDefinition:\"def\",signalingCalls:\"builtin\"},s={},u={};function m(e,n,t){return n.tokenize=t,t(e,n)}function d(e,n){var i=e.peek();if(\"'\"==i||'\"'==i)return e.next(),m(e,n,b(i,\"string\"));if(\"/\"==i){if(e.next(),e.eat(\"*\"))return m(e,n,p);if(e.eat(\"/\"))return e.skipToEnd(),\"comment\";e.backUp(1)}else if(/[+\\-\\d\\.]/.test(i)){if(e.match(/^[+-]?[0-9]*\\.[0-9]*([esdx][+-]?[0-9]+)?/i)||e.match(/^[+-]?[0-9]+([esdx][+-]?[0-9]+)/i)||e.match(/^[+-]?\\d+/))return\"number\"}else{if(\"#\"==i)return e.next(),'\"'==(i=e.peek())?(e.next(),m(e,n,b('\"',\"string\"))):\"b\"==i?(e.next(),e.eatWhile(/[01]/),\"number\"):\"x\"==i?(e.next(),e.eatWhile(/[\\da-f]/i),\"number\"):\"o\"==i?(e.next(),e.eatWhile(/[0-7]/),\"number\"):\"#\"==i?(e.next(),\"punctuation\"):\"[\"==i||\"(\"==i?(e.next(),\"bracket\"):e.match(/f|t|all-keys|include|key|next|rest/i)?\"atom\":(e.eatWhile(/[-a-zA-Z]/),\"error\");if(\"~\"==i)return e.next(),\"=\"==(i=e.peek())?(e.next(),\"=\"==(i=e.peek())?(e.next(),\"operator\"):\"operator\"):\"operator\";if(\":\"==i){if(e.next(),\"=\"==(i=e.peek()))return e.next(),\"operator\";if(\":\"==i)return e.next(),\"punctuation\"}else{if(-1!=\"[](){}\".indexOf(i))return e.next(),\"bracket\";if(-1!=\".,\".indexOf(i))return e.next(),\"punctuation\";if(e.match(\"end\"))return\"keyword\"}}for(var r in o)if(o.hasOwnProperty(r)){var f=o[r];if(f instanceof Array&&t(f,(function(n){return e.match(n)}))||e.match(f))return l[r]}return/[+\\-*\\/^=<>&|]/.test(i)?(e.next(),\"operator\"):e.match(\"define\")?\"def\":(e.eatWhile(/[\\w\\-]/),s.hasOwnProperty(e.current())?u[e.current()]:e.current().match(a)?\"variable\":(e.next(),\"variable-2\"))}function p(e,n){for(var t,i=!1,r=!1,a=0;t=e.next();){if(\"/\"==t&&i){if(!(a>0)){n.tokenize=d;break}a--}else\"*\"==t&&r&&a++;i=\"*\"==t,r=\"/\"==t}return\"comment\"}function b(e,n){return function(t,i){for(var r,a=!1,o=!1;null!=(r=t.next());){if(r==e&&!a){o=!0;break}a=!a&&\"\\\\\"==r}return!o&&a||(i.tokenize=d),n}}return n([\"keyword\",\"definition\",\"simpleDefinition\",\"signalingCalls\"],(function(e){n(i[e],(function(n){s[n]=e,u[n]=c[e]}))})),{startState:function(){return{tokenize:d,currentIndent:0}},token:function(e,n){return e.eatSpace()?null:n.tokenize(e,n)},blockCommentStart:\"/*\",blockCommentEnd:\"*/\"}})),e.defineMIME(\"text/x-dylan\",\"dylan\")}(t(108))}}]);","name":"static/js/46.dcb6bb75.chunk.js","map":{"version":3,"sources":["static/js/46.dcb6bb75.chunk.js"],"names":["this","push","module","exports","__webpack_require__","CodeMirror","forEach","arr","f","i","length","some","defineMode","_config","words","unnamedDefinition","namedDefinition","typeParameterizedDefinition","otherParameterizedDefinition","constantSimpleDefinition","variableSimpleDefinition","otherSimpleDefinition","statement","separator","other","signalingCalls","concat","symbolPattern","symbol","RegExp","patterns","symbolKeyword","symbolClass","symbolGlobal","symbolConstant","patternStyles","patternName","hasOwnProperty","styles","wordLookup","styleLookup","chain","stream","state","tokenize","tokenBase","ch","peek","next","tokenString","eat","tokenComment","skipToEnd","backUp","test","match","eatWhile","indexOf","name","pattern","Array","p","current","maybeEnd","maybeNested","nestedCount","quote","style","escaped","end","type","word","startState","currentIndent","token","eatSpace","blockCommentStart","blockCommentEnd","defineMIME","mod"],"mappings":"CAACA,KAA2B,qBAAIA,KAA2B,sBAAK,IAAIC,KAAK,CAAC,CAAC,IAAI,CAEzE,IACA,SAAUC,EAAQC,EAASC,IAO9B,SAAUC,GACX,aAEA,SAASC,EAAQC,EAAKC,GACpB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAC9BD,EAAED,EAAIE,GAAIA,GAId,SAASE,EAAKJ,EAAKC,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAC9B,GAAID,EAAED,EAAIE,GAAIA,GAAI,OAAO,EAG3B,OAAO,EAGTJ,EAAWO,WAAW,SAAS,SAAUC,GAEvC,IAAIC,EAAQ,CAEVC,kBAAmB,CAAC,aAEpBC,gBAAiB,CAAC,SAAU,UAAW,QAAS,WAAY,UAAW,aAAc,sBAIrFC,4BAA6B,CAAC,QAAS,YAAa,oBAGpDC,6BAA8B,CAAC,SAAU,WAAY,aAAc,aAInEC,yBAA0B,CAAC,YAI3BC,yBAA0B,CAAC,YAG3BC,sBAAuB,CAAC,UAAW,SAAU,iBAAkB,SAE/DC,UAAW,CAAC,KAAM,QAAS,QAAS,SAAU,OAAQ,MAAO,SAAU,OAAQ,SAAU,QAAS,QAAS,UAAW,YAAa,gBAInIC,UAAW,CAAC,UAAW,YAAa,UAAW,OAAQ,SAAU,cAGjEC,MAAO,CAAC,QAAS,QAAS,KAAM,OAAQ,UAAW,KAAM,WAAY,MAAO,QAAS,YAAa,OAAQ,WAAY,OAAQ,KAAM,WAAY,WAEhJC,eAAgB,CAAC,SAAU,QAAS,SAAU,QAAS,aAAc,UAEvEX,EAAuB,gBAAIA,EAAyB,kBAAEY,OAAOZ,EAAuB,iBAAGY,OAAOZ,EAAoC,8BAClIA,EAAkB,WAAIA,EAAmC,4BAAEY,OAAOZ,EAAuB,iBACzFA,EAA+B,wBAAIA,EAAmC,4BAAEY,OAAOZ,EAAoC,8BACnHA,EAAwB,iBAAIA,EAAgC,yBAAEY,OAAOZ,EAAgC,0BAAGY,OAAOZ,EAA6B,uBAC5IA,EAAe,QAAIA,EAAiB,UAAEY,OAAOZ,EAAiB,WAAGY,OAAOZ,EAAa,OAErF,IAAIa,EAAgB,sBAChBC,EAAS,IAAIC,OAAO,IAAMF,GAC1BG,EAAW,CAEbC,cAAeJ,EAAgB,IAC/BK,YAAa,IAAML,EAAgB,IACnCM,aAAc,MAAQN,EAAgB,MACtCO,eAAgB,MAAQP,GAEtBQ,EAAgB,CAClBJ,cAAe,OACfC,YAAa,MACbC,aAAc,aACdC,eAAgB,cAGlB,IAAK,IAAIE,KAAeN,EAClBA,EAASO,eAAeD,KAAcN,EAASM,GAAe,IAAIP,OAAO,IAAMC,EAASM,KAK9FN,EAAkB,QAAI,CAAC,qCACvB,IAAIQ,EAAS,CACbA,QAAoB,UACpBA,WAAuB,MACvBA,iBAA6B,MAC7BA,eAA2B,WAEvBC,EAAa,GACbC,EAAc,GAQlB,SAASC,EAAMC,EAAQC,EAAOnC,GAE5B,OADAmC,EAAMC,SAAWpC,EACVA,EAAEkC,EAAQC,GAGnB,SAASE,EAAUH,EAAQC,GAEzB,IAAIG,EAAKJ,EAAOK,OAEhB,GAAU,KAAND,GAAmB,KAANA,EAEf,OADAJ,EAAOM,OACAP,EAAMC,EAAQC,EAAOM,EAAYH,EAAI,WAEzC,GAAU,KAANA,EAAW,CAGlB,GAFAJ,EAAOM,OAEHN,EAAOQ,IAAI,KACb,OAAOT,EAAMC,EAAQC,EAAOQ,GACvB,GAAIT,EAAOQ,IAAI,KAEpB,OADAR,EAAOU,YACA,UAGTV,EAAOW,OAAO,QAEX,GAAI,YAAYC,KAAKR,IACxB,GAAIJ,EAAOa,MAAM,8CAAgDb,EAAOa,MAAM,qCAAuCb,EAAOa,MAAM,aAChI,MAAO,aAGN,CAAA,GAAU,KAANT,EAKP,OAJAJ,EAAOM,OAIG,MAFVF,EAAKJ,EAAOK,SAGVL,EAAOM,OACAP,EAAMC,EAAQC,EAAOM,EAAY,IAAK,YAEhC,KAANH,GACPJ,EAAOM,OACPN,EAAOc,SAAS,QACT,UAEM,KAANV,GACPJ,EAAOM,OACPN,EAAOc,SAAS,YACT,UAEM,KAANV,GACPJ,EAAOM,OACPN,EAAOc,SAAS,SACT,UAEM,KAANV,GACPJ,EAAOM,OACA,eAEM,KAANF,GAAmB,KAANA,GACpBJ,EAAOM,OACA,WACEN,EAAOa,MAAM,uCACf,QAEPb,EAAOc,SAAS,aACT,SAEJ,GAAU,KAANV,EAIT,OAHAJ,EAAOM,OAGG,MAFVF,EAAKJ,EAAOK,SAGVL,EAAOM,OAGG,MAFVF,EAAKJ,EAAOK,SAGVL,EAAOM,OACA,YAGF,YAGF,WACF,GAAU,KAANF,EAAW,CAIpB,GAHAJ,EAAOM,OAGG,MAFVF,EAAKJ,EAAOK,QAIV,OADAL,EAAOM,OACA,WACF,GAAU,KAANF,EAET,OADAJ,EAAOM,OACA,kBAEJ,CAAA,IAA6B,GAAzB,SAASS,QAAQX,GAE1B,OADAJ,EAAOM,OACA,UACF,IAAyB,GAArB,KAAKS,QAAQX,GAEtB,OADAJ,EAAOM,OACA,cACF,GAAIN,EAAOa,MAAM,OACtB,MAAO,WAGT,IAAK,IAAIG,KAAQ5B,EACf,GAAIA,EAASO,eAAeqB,GAAO,CACjC,IAAIC,EAAU7B,EAAS4B,GACvB,GAAIC,aAAmBC,OAASjD,EAAKgD,GAAS,SAAUE,GACtD,OAAOnB,EAAOa,MAAMM,OAChBnB,EAAOa,MAAMI,GAAU,OAAOxB,EAAcuB,GAItD,MAAI,iBAAiBJ,KAAKR,IACxBJ,EAAOM,OACA,YAGLN,EAAOa,MAAM,UACR,OAEPb,EAAOc,SAAS,UAEZjB,EAAWF,eAAeK,EAAOoB,WAC5BtB,EAAYE,EAAOoB,WACjBpB,EAAOoB,UAAUP,MAAM3B,GACzB,YAEPc,EAAOM,OACA,eAKb,SAASG,EAAaT,EAAQC,GAM5B,IALA,IAGIG,EAHAiB,GAAW,EACXC,GAAc,EACdC,EAAc,EAGXnB,EAAKJ,EAAOM,QAAQ,CACzB,GAAU,KAANF,GAAaiB,EAAU,CACzB,KAAIE,EAAc,GAEX,CACLtB,EAAMC,SAAWC,EACjB,MAHAoB,QAKa,KAANnB,GAAakB,GACtBC,IAGFF,EAAiB,KAANjB,EACXkB,EAAoB,KAANlB,EAGhB,MAAO,UAGT,SAASG,EAAYiB,EAAOC,GAC1B,OAAO,SAAUzB,EAAQC,GAKvB,IAJA,IACIK,EADAoB,GAAU,EAEVC,GAAM,EAEuB,OAAzBrB,EAAON,EAAOM,SAAiB,CACrC,GAAIA,GAAQkB,IAAUE,EAAS,CAC7BC,GAAM,EACN,MAGFD,GAAWA,GAAmB,MAARpB,EAOxB,OAJIqB,GAAQD,IACVzB,EAAMC,SAAWC,GAGZsB,GAKX,OA/LA7D,EAAQ,CAAC,UAAW,aAAc,mBAAoB,mBAAmB,SAAUgE,GACjFhE,EAAQQ,EAAMwD,IAAO,SAAUC,GAC7BhC,EAAWgC,GAAQD,EACnB9B,EAAY+B,GAAQjC,EAAOgC,SA4LxB,CACLE,WAAY,WACV,MAAO,CACL5B,SAAUC,EACV4B,cAAe,IAGnBC,MAAO,SAAehC,EAAQC,GAC5B,OAAID,EAAOiC,WAAmB,KAClBhC,EAAMC,SAASF,EAAQC,IAGrCiC,kBAAmB,KACnBC,gBAAiB,SAGrBxE,EAAWyE,WAAW,eAAgB,SA3SpCC,CAAI3E,EAAoB"},"input":"(this[\"webpackJsonpfrontend\"] = this[\"webpackJsonpfrontend\"] || []).push([[46],{\n\n/***/ 318:\n/***/ (function(module, exports, __webpack_require__) {\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (true) // CommonJS\n    mod(__webpack_require__(108));else {}\n})(function (CodeMirror) {\n  \"use strict\";\n\n  function forEach(arr, f) {\n    for (var i = 0; i < arr.length; i++) {\n      f(arr[i], i);\n    }\n  }\n\n  function some(arr, f) {\n    for (var i = 0; i < arr.length; i++) {\n      if (f(arr[i], i)) return true;\n    }\n\n    return false;\n  }\n\n  CodeMirror.defineMode(\"dylan\", function (_config) {\n    // Words\n    var words = {\n      // Words that introduce unnamed definitions like \"define interface\"\n      unnamedDefinition: [\"interface\"],\n      // Words that introduce simple named definitions like \"define library\"\n      namedDefinition: [\"module\", \"library\", \"macro\", \"C-struct\", \"C-union\", \"C-function\", \"C-callable-wrapper\"],\n      // Words that introduce type definitions like \"define class\".\n      // These are also parameterized like \"define method\" and are\n      // appended to otherParameterizedDefinitionWords\n      typeParameterizedDefinition: [\"class\", \"C-subtype\", \"C-mapped-subtype\"],\n      // Words that introduce trickier definitions like \"define method\".\n      // These require special definitions to be added to startExpressions\n      otherParameterizedDefinition: [\"method\", \"function\", \"C-variable\", \"C-address\"],\n      // Words that introduce module constant definitions.\n      // These must also be simple definitions and are\n      // appended to otherSimpleDefinitionWords\n      constantSimpleDefinition: [\"constant\"],\n      // Words that introduce module variable definitions.\n      // These must also be simple definitions and are\n      // appended to otherSimpleDefinitionWords\n      variableSimpleDefinition: [\"variable\"],\n      // Other words that introduce simple definitions\n      // (without implicit bodies).\n      otherSimpleDefinition: [\"generic\", \"domain\", \"C-pointer-type\", \"table\"],\n      // Words that begin statements with implicit bodies.\n      statement: [\"if\", \"block\", \"begin\", \"method\", \"case\", \"for\", \"select\", \"when\", \"unless\", \"until\", \"while\", \"iterate\", \"profiling\", \"dynamic-bind\"],\n      // Patterns that act as separators in compound statements.\n      // This may include any general pattern that must be indented\n      // specially.\n      separator: [\"finally\", \"exception\", \"cleanup\", \"else\", \"elseif\", \"afterwards\"],\n      // Keywords that do not require special indentation handling,\n      // but which should be highlighted\n      other: [\"above\", \"below\", \"by\", \"from\", \"handler\", \"in\", \"instance\", \"let\", \"local\", \"otherwise\", \"slot\", \"subclass\", \"then\", \"to\", \"keyed-by\", \"virtual\"],\n      // Condition signaling function calls\n      signalingCalls: [\"signal\", \"error\", \"cerror\", \"break\", \"check-type\", \"abort\"]\n    };\n    words[\"otherDefinition\"] = words[\"unnamedDefinition\"].concat(words[\"namedDefinition\"]).concat(words[\"otherParameterizedDefinition\"]);\n    words[\"definition\"] = words[\"typeParameterizedDefinition\"].concat(words[\"otherDefinition\"]);\n    words[\"parameterizedDefinition\"] = words[\"typeParameterizedDefinition\"].concat(words[\"otherParameterizedDefinition\"]);\n    words[\"simpleDefinition\"] = words[\"constantSimpleDefinition\"].concat(words[\"variableSimpleDefinition\"]).concat(words[\"otherSimpleDefinition\"]);\n    words[\"keyword\"] = words[\"statement\"].concat(words[\"separator\"]).concat(words[\"other\"]); // Patterns\n\n    var symbolPattern = \"[-_a-zA-Z?!*@<>$%]+\";\n    var symbol = new RegExp(\"^\" + symbolPattern);\n    var patterns = {\n      // Symbols with special syntax\n      symbolKeyword: symbolPattern + \":\",\n      symbolClass: \"<\" + symbolPattern + \">\",\n      symbolGlobal: \"\\\\*\" + symbolPattern + \"\\\\*\",\n      symbolConstant: \"\\\\$\" + symbolPattern\n    };\n    var patternStyles = {\n      symbolKeyword: \"atom\",\n      symbolClass: \"tag\",\n      symbolGlobal: \"variable-2\",\n      symbolConstant: \"variable-3\"\n    }; // Compile all patterns to regular expressions\n\n    for (var patternName in patterns) {\n      if (patterns.hasOwnProperty(patternName)) patterns[patternName] = new RegExp(\"^\" + patterns[patternName]);\n    } // Names beginning \"with-\" and \"without-\" are commonly\n    // used as statement macro\n\n\n    patterns[\"keyword\"] = [/^with(?:out)?-[-_a-zA-Z?!*@<>$%]+/];\n    var styles = {};\n    styles[\"keyword\"] = \"keyword\";\n    styles[\"definition\"] = \"def\";\n    styles[\"simpleDefinition\"] = \"def\";\n    styles[\"signalingCalls\"] = \"builtin\"; // protected words lookup table\n\n    var wordLookup = {};\n    var styleLookup = {};\n    forEach([\"keyword\", \"definition\", \"simpleDefinition\", \"signalingCalls\"], function (type) {\n      forEach(words[type], function (word) {\n        wordLookup[word] = type;\n        styleLookup[word] = styles[type];\n      });\n    });\n\n    function chain(stream, state, f) {\n      state.tokenize = f;\n      return f(stream, state);\n    }\n\n    function tokenBase(stream, state) {\n      // String\n      var ch = stream.peek();\n\n      if (ch == \"'\" || ch == '\"') {\n        stream.next();\n        return chain(stream, state, tokenString(ch, \"string\"));\n      } // Comment\n      else if (ch == \"/\") {\n        stream.next();\n\n        if (stream.eat(\"*\")) {\n          return chain(stream, state, tokenComment);\n        } else if (stream.eat(\"/\")) {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n\n        stream.backUp(1);\n      } // Decimal\n      else if (/[+\\-\\d\\.]/.test(ch)) {\n        if (stream.match(/^[+-]?[0-9]*\\.[0-9]*([esdx][+-]?[0-9]+)?/i) || stream.match(/^[+-]?[0-9]+([esdx][+-]?[0-9]+)/i) || stream.match(/^[+-]?\\d+/)) {\n          return \"number\";\n        }\n      } // Hash\n      else if (ch == \"#\") {\n        stream.next(); // Symbol with string syntax\n\n        ch = stream.peek();\n\n        if (ch == '\"') {\n          stream.next();\n          return chain(stream, state, tokenString('\"', \"string\"));\n        } // Binary number\n        else if (ch == \"b\") {\n          stream.next();\n          stream.eatWhile(/[01]/);\n          return \"number\";\n        } // Hex number\n        else if (ch == \"x\") {\n          stream.next();\n          stream.eatWhile(/[\\da-f]/i);\n          return \"number\";\n        } // Octal number\n        else if (ch == \"o\") {\n          stream.next();\n          stream.eatWhile(/[0-7]/);\n          return \"number\";\n        } // Token concatenation in macros\n        else if (ch == '#') {\n          stream.next();\n          return \"punctuation\";\n        } // Sequence literals\n        else if (ch == '[' || ch == '(') {\n          stream.next();\n          return \"bracket\"; // Hash symbol\n        } else if (stream.match(/f|t|all-keys|include|key|next|rest/i)) {\n          return \"atom\";\n        } else {\n          stream.eatWhile(/[-a-zA-Z]/);\n          return \"error\";\n        }\n      } else if (ch == \"~\") {\n        stream.next();\n        ch = stream.peek();\n\n        if (ch == \"=\") {\n          stream.next();\n          ch = stream.peek();\n\n          if (ch == \"=\") {\n            stream.next();\n            return \"operator\";\n          }\n\n          return \"operator\";\n        }\n\n        return \"operator\";\n      } else if (ch == \":\") {\n        stream.next();\n        ch = stream.peek();\n\n        if (ch == \"=\") {\n          stream.next();\n          return \"operator\";\n        } else if (ch == \":\") {\n          stream.next();\n          return \"punctuation\";\n        }\n      } else if (\"[](){}\".indexOf(ch) != -1) {\n        stream.next();\n        return \"bracket\";\n      } else if (\".,\".indexOf(ch) != -1) {\n        stream.next();\n        return \"punctuation\";\n      } else if (stream.match(\"end\")) {\n        return \"keyword\";\n      }\n\n      for (var name in patterns) {\n        if (patterns.hasOwnProperty(name)) {\n          var pattern = patterns[name];\n          if (pattern instanceof Array && some(pattern, function (p) {\n            return stream.match(p);\n          }) || stream.match(pattern)) return patternStyles[name];\n        }\n      }\n\n      if (/[+\\-*\\/^=<>&|]/.test(ch)) {\n        stream.next();\n        return \"operator\";\n      }\n\n      if (stream.match(\"define\")) {\n        return \"def\";\n      } else {\n        stream.eatWhile(/[\\w\\-]/); // Keyword\n\n        if (wordLookup.hasOwnProperty(stream.current())) {\n          return styleLookup[stream.current()];\n        } else if (stream.current().match(symbol)) {\n          return \"variable\";\n        } else {\n          stream.next();\n          return \"variable-2\";\n        }\n      }\n    }\n\n    function tokenComment(stream, state) {\n      var maybeEnd = false,\n          maybeNested = false,\n          nestedCount = 0,\n          ch;\n\n      while (ch = stream.next()) {\n        if (ch == \"/\" && maybeEnd) {\n          if (nestedCount > 0) {\n            nestedCount--;\n          } else {\n            state.tokenize = tokenBase;\n            break;\n          }\n        } else if (ch == \"*\" && maybeNested) {\n          nestedCount++;\n        }\n\n        maybeEnd = ch == \"*\";\n        maybeNested = ch == \"/\";\n      }\n\n      return \"comment\";\n    }\n\n    function tokenString(quote, style) {\n      return function (stream, state) {\n        var escaped = false,\n            next,\n            end = false;\n\n        while ((next = stream.next()) != null) {\n          if (next == quote && !escaped) {\n            end = true;\n            break;\n          }\n\n          escaped = !escaped && next == \"\\\\\";\n        }\n\n        if (end || !escaped) {\n          state.tokenize = tokenBase;\n        }\n\n        return style;\n      };\n    } // Interface\n\n\n    return {\n      startState: function startState() {\n        return {\n          tokenize: tokenBase,\n          currentIndent: 0\n        };\n      },\n      token: function token(stream, state) {\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        return style;\n      },\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-dylan\", \"dylan\");\n});\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/mnt/Datengrab/python/Zero-tier/frontend/node_modules/codemirror/mode/dylan/dylan.js"],"names":["mod","require","CodeMirror","forEach","arr","f","i","length","some","defineMode","_config","words","unnamedDefinition","namedDefinition","typeParameterizedDefinition","otherParameterizedDefinition","constantSimpleDefinition","variableSimpleDefinition","otherSimpleDefinition","statement","separator","other","signalingCalls","concat","symbolPattern","symbol","RegExp","patterns","symbolKeyword","symbolClass","symbolGlobal","symbolConstant","patternStyles","patternName","hasOwnProperty","styles","wordLookup","styleLookup","type","word","chain","stream","state","tokenize","tokenBase","ch","peek","next","tokenString","eat","tokenComment","skipToEnd","backUp","test","match","eatWhile","indexOf","name","pattern","Array","p","current","maybeEnd","maybeNested","nestedCount","quote","style","escaped","end","startState","currentIndent","token","eatSpace","blockCommentStart","blockCommentEnd","defineMIME"],"mappings":"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","file":"x","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction forEach(arr, f) {\n  for (var i = 0; i < arr.length; i++) f(arr[i], i)\n}\nfunction some(arr, f) {\n  for (var i = 0; i < arr.length; i++) if (f(arr[i], i)) return true\n  return false\n}\n\nCodeMirror.defineMode(\"dylan\", function(_config) {\n  // Words\n  var words = {\n    // Words that introduce unnamed definitions like \"define interface\"\n    unnamedDefinition: [\"interface\"],\n\n    // Words that introduce simple named definitions like \"define library\"\n    namedDefinition: [\"module\", \"library\", \"macro\",\n                      \"C-struct\", \"C-union\",\n                      \"C-function\", \"C-callable-wrapper\"\n                     ],\n\n    // Words that introduce type definitions like \"define class\".\n    // These are also parameterized like \"define method\" and are\n    // appended to otherParameterizedDefinitionWords\n    typeParameterizedDefinition: [\"class\", \"C-subtype\", \"C-mapped-subtype\"],\n\n    // Words that introduce trickier definitions like \"define method\".\n    // These require special definitions to be added to startExpressions\n    otherParameterizedDefinition: [\"method\", \"function\",\n                                   \"C-variable\", \"C-address\"\n                                  ],\n\n    // Words that introduce module constant definitions.\n    // These must also be simple definitions and are\n    // appended to otherSimpleDefinitionWords\n    constantSimpleDefinition: [\"constant\"],\n\n    // Words that introduce module variable definitions.\n    // These must also be simple definitions and are\n    // appended to otherSimpleDefinitionWords\n    variableSimpleDefinition: [\"variable\"],\n\n    // Other words that introduce simple definitions\n    // (without implicit bodies).\n    otherSimpleDefinition: [\"generic\", \"domain\",\n                            \"C-pointer-type\",\n                            \"table\"\n                           ],\n\n    // Words that begin statements with implicit bodies.\n    statement: [\"if\", \"block\", \"begin\", \"method\", \"case\",\n                \"for\", \"select\", \"when\", \"unless\", \"until\",\n                \"while\", \"iterate\", \"profiling\", \"dynamic-bind\"\n               ],\n\n    // Patterns that act as separators in compound statements.\n    // This may include any general pattern that must be indented\n    // specially.\n    separator: [\"finally\", \"exception\", \"cleanup\", \"else\",\n                \"elseif\", \"afterwards\"\n               ],\n\n    // Keywords that do not require special indentation handling,\n    // but which should be highlighted\n    other: [\"above\", \"below\", \"by\", \"from\", \"handler\", \"in\",\n            \"instance\", \"let\", \"local\", \"otherwise\", \"slot\",\n            \"subclass\", \"then\", \"to\", \"keyed-by\", \"virtual\"\n           ],\n\n    // Condition signaling function calls\n    signalingCalls: [\"signal\", \"error\", \"cerror\",\n                     \"break\", \"check-type\", \"abort\"\n                    ]\n  };\n\n  words[\"otherDefinition\"] =\n    words[\"unnamedDefinition\"]\n    .concat(words[\"namedDefinition\"])\n    .concat(words[\"otherParameterizedDefinition\"]);\n\n  words[\"definition\"] =\n    words[\"typeParameterizedDefinition\"]\n    .concat(words[\"otherDefinition\"]);\n\n  words[\"parameterizedDefinition\"] =\n    words[\"typeParameterizedDefinition\"]\n    .concat(words[\"otherParameterizedDefinition\"]);\n\n  words[\"simpleDefinition\"] =\n    words[\"constantSimpleDefinition\"]\n    .concat(words[\"variableSimpleDefinition\"])\n    .concat(words[\"otherSimpleDefinition\"]);\n\n  words[\"keyword\"] =\n    words[\"statement\"]\n    .concat(words[\"separator\"])\n    .concat(words[\"other\"]);\n\n  // Patterns\n  var symbolPattern = \"[-_a-zA-Z?!*@<>$%]+\";\n  var symbol = new RegExp(\"^\" + symbolPattern);\n  var patterns = {\n    // Symbols with special syntax\n    symbolKeyword: symbolPattern + \":\",\n    symbolClass: \"<\" + symbolPattern + \">\",\n    symbolGlobal: \"\\\\*\" + symbolPattern + \"\\\\*\",\n    symbolConstant: \"\\\\$\" + symbolPattern\n  };\n  var patternStyles = {\n    symbolKeyword: \"atom\",\n    symbolClass: \"tag\",\n    symbolGlobal: \"variable-2\",\n    symbolConstant: \"variable-3\"\n  };\n\n  // Compile all patterns to regular expressions\n  for (var patternName in patterns)\n    if (patterns.hasOwnProperty(patternName))\n      patterns[patternName] = new RegExp(\"^\" + patterns[patternName]);\n\n  // Names beginning \"with-\" and \"without-\" are commonly\n  // used as statement macro\n  patterns[\"keyword\"] = [/^with(?:out)?-[-_a-zA-Z?!*@<>$%]+/];\n\n  var styles = {};\n  styles[\"keyword\"] = \"keyword\";\n  styles[\"definition\"] = \"def\";\n  styles[\"simpleDefinition\"] = \"def\";\n  styles[\"signalingCalls\"] = \"builtin\";\n\n  // protected words lookup table\n  var wordLookup = {};\n  var styleLookup = {};\n\n  forEach([\n    \"keyword\",\n    \"definition\",\n    \"simpleDefinition\",\n    \"signalingCalls\"\n  ], function(type) {\n    forEach(words[type], function(word) {\n      wordLookup[word] = type;\n      styleLookup[word] = styles[type];\n    });\n  });\n\n\n  function chain(stream, state, f) {\n    state.tokenize = f;\n    return f(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    // String\n    var ch = stream.peek();\n    if (ch == \"'\" || ch == '\"') {\n      stream.next();\n      return chain(stream, state, tokenString(ch, \"string\"));\n    }\n    // Comment\n    else if (ch == \"/\") {\n      stream.next();\n      if (stream.eat(\"*\")) {\n        return chain(stream, state, tokenComment);\n      } else if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n      stream.backUp(1);\n    }\n    // Decimal\n    else if (/[+\\-\\d\\.]/.test(ch)) {\n      if (stream.match(/^[+-]?[0-9]*\\.[0-9]*([esdx][+-]?[0-9]+)?/i) ||\n          stream.match(/^[+-]?[0-9]+([esdx][+-]?[0-9]+)/i) ||\n          stream.match(/^[+-]?\\d+/)) {\n        return \"number\";\n      }\n    }\n    // Hash\n    else if (ch == \"#\") {\n      stream.next();\n      // Symbol with string syntax\n      ch = stream.peek();\n      if (ch == '\"') {\n        stream.next();\n        return chain(stream, state, tokenString('\"', \"string\"));\n      }\n      // Binary number\n      else if (ch == \"b\") {\n        stream.next();\n        stream.eatWhile(/[01]/);\n        return \"number\";\n      }\n      // Hex number\n      else if (ch == \"x\") {\n        stream.next();\n        stream.eatWhile(/[\\da-f]/i);\n        return \"number\";\n      }\n      // Octal number\n      else if (ch == \"o\") {\n        stream.next();\n        stream.eatWhile(/[0-7]/);\n        return \"number\";\n      }\n      // Token concatenation in macros\n      else if (ch == '#') {\n        stream.next();\n        return \"punctuation\";\n      }\n      // Sequence literals\n      else if ((ch == '[') || (ch == '(')) {\n        stream.next();\n        return \"bracket\";\n      // Hash symbol\n      } else if (stream.match(/f|t|all-keys|include|key|next|rest/i)) {\n        return \"atom\";\n      } else {\n        stream.eatWhile(/[-a-zA-Z]/);\n        return \"error\";\n      }\n    } else if (ch == \"~\") {\n      stream.next();\n      ch = stream.peek();\n      if (ch == \"=\") {\n        stream.next();\n        ch = stream.peek();\n        if (ch == \"=\") {\n          stream.next();\n          return \"operator\";\n        }\n        return \"operator\";\n      }\n      return \"operator\";\n    } else if (ch == \":\") {\n      stream.next();\n      ch = stream.peek();\n      if (ch == \"=\") {\n        stream.next();\n        return \"operator\";\n      } else if (ch == \":\") {\n        stream.next();\n        return \"punctuation\";\n      }\n    } else if (\"[](){}\".indexOf(ch) != -1) {\n      stream.next();\n      return \"bracket\";\n    } else if (\".,\".indexOf(ch) != -1) {\n      stream.next();\n      return \"punctuation\";\n    } else if (stream.match(\"end\")) {\n      return \"keyword\";\n    }\n    for (var name in patterns) {\n      if (patterns.hasOwnProperty(name)) {\n        var pattern = patterns[name];\n        if ((pattern instanceof Array && some(pattern, function(p) {\n          return stream.match(p);\n        })) || stream.match(pattern))\n          return patternStyles[name];\n      }\n    }\n    if (/[+\\-*\\/^=<>&|]/.test(ch)) {\n      stream.next();\n      return \"operator\";\n    }\n    if (stream.match(\"define\")) {\n      return \"def\";\n    } else {\n      stream.eatWhile(/[\\w\\-]/);\n      // Keyword\n      if (wordLookup.hasOwnProperty(stream.current())) {\n        return styleLookup[stream.current()];\n      } else if (stream.current().match(symbol)) {\n        return \"variable\";\n      } else {\n        stream.next();\n        return \"variable-2\";\n      }\n    }\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, maybeNested = false, nestedCount = 0, ch;\n    while ((ch = stream.next())) {\n      if (ch == \"/\" && maybeEnd) {\n        if (nestedCount > 0) {\n          nestedCount--;\n        } else {\n          state.tokenize = tokenBase;\n          break;\n        }\n      } else if (ch == \"*\" && maybeNested) {\n        nestedCount++;\n      }\n      maybeEnd = (ch == \"*\");\n      maybeNested = (ch == \"/\");\n    }\n    return \"comment\";\n  }\n\n  function tokenString(quote, style) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {\n          end = true;\n          break;\n        }\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (end || !escaped) {\n        state.tokenize = tokenBase;\n      }\n      return style;\n    };\n  }\n\n  // Interface\n  return {\n    startState: function() {\n      return {\n        tokenize: tokenBase,\n        currentIndent: 0\n      };\n    },\n    token: function(stream, state) {\n      if (stream.eatSpace())\n        return null;\n      var style = state.tokenize(stream, state);\n      return style;\n    },\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-dylan\", \"dylan\");\n\n});\n"]}}