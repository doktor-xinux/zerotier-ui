{"version":3,"sources":["../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js","../node_modules/codemirror/mode/htmlembedded/htmlembedded.js","../node_modules/codemirror/addon/mode/multiplex.js"],"names":["CodeMirror","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","defineMode","editorConf","config_","type","setStyle","indentUnit","config","defaults","htmlMode","prop","inText","stream","state","chain","parser","tokenize","ch","next","eat","match","inBlock","eatWhile","doctype","inTag","baseState","tagName","tagStart","test","inAttribute","stringStartCol","column","quote","closure","eol","isInAttribute","style","terminator","depth","lower","toLowerCase","Context","startOfLine","this","prev","context","indent","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","startState","baseIndent","token","sol","indentation","eatSpace","textAfter","fullLine","Pass","length","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","name","close","xmlCurrentContext","cx","push","reverse","defineMIME","mimeModes","mod","require","defaultTags","script","maybeBackup","pat","cur","search","backUp","attrRegexpCache","getAttrRegexp","attr","regexp","RegExp","getAttrValue","text","getTagRegexp","anchored","addTags","from","to","tag","dest","source","i","unshift","findMatchingMode","tagInfo","tagText","spec","parserConfig","getMode","tags","configTags","configScript","scriptTypes","matches","mode","html","htmlState","modeSpec","endTagA","endTag","localState","localMode","copyState","local","line","innerMode","closeComment","multiplexingMode","open","openComment","delimStyle","skipTo","skipToEnd","scriptStartRegex","scriptEndRegex","scriptingModeSpec","outer","others","Array","prototype","slice","call","arguments","indexOf","string","pattern","returnEnd","found","m","index","innerActive","inner","startingInner","curInner","oldContent","pos","parseDelimiters","innerToken","start","innerStyle","cutOff","Infinity","other","outerIndent","possibleOuterIndent","outerToken","blankLine","electricChars"],"mappings":"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","file":"static/js/10.8571a376.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function lower(tagName) {\n    return tagName && tagName.toLowerCase();\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName || \"\";\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(lower(parentTagName)) ||\n          !config.contextGrabbers[lower(parentTagName)].hasOwnProperty(lower(nextTagName))) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(lower(state.context.tagName)))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(lower(tagName))) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(lower(context.tagName))) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[lower(context.tagName)];\n          if (grabbers && grabbers.hasOwnProperty(lower(tagAfter[2])))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\\\s*\" + tagName + \"\\\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag,\n      allowMissingTagName: parserConfig.allowMissingTagName,\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"),\n        require(\"../../addon/mode/multiplex\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\",\n            \"../../addon/mode/multiplex\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"htmlembedded\", function(config, parserConfig) {\n    var closeComment = parserConfig.closeComment || \"--%>\"\n    return CodeMirror.multiplexingMode(CodeMirror.getMode(config, \"htmlmixed\"), {\n      open: parserConfig.openComment || \"<%--\",\n      close: closeComment,\n      delimStyle: \"comment\",\n      mode: {token: function(stream) {\n        stream.skipTo(closeComment) || stream.skipToEnd()\n        return \"comment\"\n      }}\n    }, {\n      open: parserConfig.open || parserConfig.scriptStartRegex || \"<%\",\n      close: parserConfig.close || parserConfig.scriptEndRegex || \"%>\",\n      mode: CodeMirror.getMode(config, parserConfig.scriptingModeSpec)\n    });\n  }, \"htmlmixed\");\n\n  CodeMirror.defineMIME(\"application/x-ejs\", {name: \"htmlembedded\", scriptingModeSpec:\"javascript\"});\n  CodeMirror.defineMIME(\"application/x-aspx\", {name: \"htmlembedded\", scriptingModeSpec:\"text/x-csharp\"});\n  CodeMirror.defineMIME(\"application/x-jsp\", {name: \"htmlembedded\", scriptingModeSpec:\"text/x-java\"});\n  CodeMirror.defineMIME(\"application/x-erb\", {name: \"htmlembedded\", scriptingModeSpec:\"ruby\"});\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.multiplexingMode = function(outer /*, others */) {\n  // Others should be {open, close, mode [, delimStyle] [, innerStyle] [, parseDelimiters]} objects\n  var others = Array.prototype.slice.call(arguments, 1);\n\n  function indexOf(string, pattern, from, returnEnd) {\n    if (typeof pattern == \"string\") {\n      var found = string.indexOf(pattern, from);\n      return returnEnd && found > -1 ? found + pattern.length : found;\n    }\n    var m = pattern.exec(from ? string.slice(from) : string);\n    return m ? m.index + from + (returnEnd ? m[0].length : 0) : -1;\n  }\n\n  return {\n    startState: function() {\n      return {\n        outer: CodeMirror.startState(outer),\n        innerActive: null,\n        inner: null,\n        startingInner: false\n      };\n    },\n\n    copyState: function(state) {\n      return {\n        outer: CodeMirror.copyState(outer, state.outer),\n        innerActive: state.innerActive,\n        inner: state.innerActive && CodeMirror.copyState(state.innerActive.mode, state.inner),\n        startingInner: state.startingInner\n      };\n    },\n\n    token: function(stream, state) {\n      if (!state.innerActive) {\n        var cutOff = Infinity, oldContent = stream.string;\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          var found = indexOf(oldContent, other.open, stream.pos);\n          if (found == stream.pos) {\n            if (!other.parseDelimiters) stream.match(other.open);\n            state.startingInner = !!other.parseDelimiters\n            state.innerActive = other;\n\n            // Get the outer indent, making sure to handle CodeMirror.Pass\n            var outerIndent = 0;\n            if (outer.indent) {\n              var possibleOuterIndent = outer.indent(state.outer, \"\", \"\");\n              if (possibleOuterIndent !== CodeMirror.Pass) outerIndent = possibleOuterIndent;\n            }\n\n            state.inner = CodeMirror.startState(other.mode, outerIndent);\n            return other.delimStyle && (other.delimStyle + \" \" + other.delimStyle + \"-open\");\n          } else if (found != -1 && found < cutOff) {\n            cutOff = found;\n          }\n        }\n        if (cutOff != Infinity) stream.string = oldContent.slice(0, cutOff);\n        var outerToken = outer.token(stream, state.outer);\n        if (cutOff != Infinity) stream.string = oldContent;\n        return outerToken;\n      } else {\n        var curInner = state.innerActive, oldContent = stream.string;\n        if (!curInner.close && stream.sol()) {\n          state.innerActive = state.inner = null;\n          return this.token(stream, state);\n        }\n        var found = curInner.close && !state.startingInner ?\n            indexOf(oldContent, curInner.close, stream.pos, curInner.parseDelimiters) : -1;\n        if (found == stream.pos && !curInner.parseDelimiters) {\n          stream.match(curInner.close);\n          state.innerActive = state.inner = null;\n          return curInner.delimStyle && (curInner.delimStyle + \" \" + curInner.delimStyle + \"-close\");\n        }\n        if (found > -1) stream.string = oldContent.slice(0, found);\n        var innerToken = curInner.mode.token(stream, state.inner);\n        if (found > -1) stream.string = oldContent;\n        else if (stream.pos > stream.start) state.startingInner = false\n\n        if (found == stream.pos && curInner.parseDelimiters)\n          state.innerActive = state.inner = null;\n\n        if (curInner.innerStyle) {\n          if (innerToken) innerToken = innerToken + \" \" + curInner.innerStyle;\n          else innerToken = curInner.innerStyle;\n        }\n\n        return innerToken;\n      }\n    },\n\n    indent: function(state, textAfter, line) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (!mode.indent) return CodeMirror.Pass;\n      return mode.indent(state.innerActive ? state.inner : state.outer, textAfter, line);\n    },\n\n    blankLine: function(state) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (mode.blankLine) {\n        mode.blankLine(state.innerActive ? state.inner : state.outer);\n      }\n      if (!state.innerActive) {\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          if (other.open === \"\\n\") {\n            state.innerActive = other;\n            state.inner = CodeMirror.startState(other.mode, mode.indent ? mode.indent(state.outer, \"\", \"\") : 0);\n          }\n        }\n      } else if (state.innerActive.close === \"\\n\") {\n        state.innerActive = state.inner = null;\n      }\n    },\n\n    electricChars: outer.electricChars,\n\n    innerMode: function(state) {\n      return state.inner ? {state: state.inner, mode: state.innerActive.mode} : {state: state.outer, mode: outer};\n    }\n  };\n};\n\n});\n"],"sourceRoot":""}