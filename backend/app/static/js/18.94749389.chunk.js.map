{"version":3,"sources":["../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js","../node_modules/codemirror/mode/soy/soy.js"],"names":["CodeMirror","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","defineMode","editorConf","config_","type","setStyle","indentUnit","config","defaults","htmlMode","prop","inText","stream","state","chain","parser","tokenize","ch","next","eat","match","inBlock","eatWhile","doctype","inTag","baseState","tagName","tagStart","test","inAttribute","stringStartCol","column","quote","closure","eol","isInAttribute","style","terminator","depth","lower","toLowerCase","Context","startOfLine","this","prev","context","indent","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","startState","baseIndent","token","sol","indentation","eatSpace","textAfter","fullLine","Pass","length","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","name","close","xmlCurrentContext","cx","push","reverse","defineMIME","mimeModes","mod","require","defaultTags","script","maybeBackup","pat","cur","search","backUp","attrRegexpCache","getAttrRegexp","attr","regexp","RegExp","getAttrValue","text","getTagRegexp","anchored","addTags","from","to","tag","dest","source","i","unshift","findMatchingMode","tagInfo","tagText","spec","parserConfig","getMode","tags","configTags","configScript","scriptTypes","matches","mode","html","htmlState","modeSpec","endTagA","endTag","localState","localMode","copyState","local","line","innerMode","paramData","noEndTag","soyState","variableScope","reduceIndent","indentingTags","Object","keys","filter","textMode","modes","attributes","uri","trusted_resource_uri","css","js","statementIndent","last","array","tokenUntil","untilRegExp","oldString","string","substr","pos","index","result","hideFirstChars","localStates","contains","list","element","prepend","popcontext","scope","variables","previousContext","ref","loose","kind","expression","lookupVariables","quoteKind","scopes","concat","map","pop","skipToEnd","paramRe","peekChar","peek","indexOf","undefined","substring","selfClosed","prevTag","indentingTag","tagError","isBalancedForExtern","top","lineComment","blockCommentContinue","useInnerComments","fold","registerHelper"],"mappings":"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","file":"static/js/18.94749389.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function lower(tagName) {\n    return tagName && tagName.toLowerCase();\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName || \"\";\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(lower(parentTagName)) ||\n          !config.contextGrabbers[lower(parentTagName)].hasOwnProperty(lower(nextTagName))) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(lower(state.context.tagName)))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(lower(tagName))) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(lower(context.tagName))) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[lower(context.tagName)];\n          if (grabbers && grabbers.hasOwnProperty(lower(tagAfter[2])))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\\\s*\" + tagName + \"\\\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag,\n      allowMissingTagName: parserConfig.allowMissingTagName,\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var paramData = { noEndTag: true, soyState: \"param-def\" };\n  var tags = {\n    \"alias\": { noEndTag: true },\n    \"delpackage\": { noEndTag: true },\n    \"namespace\": { noEndTag: true, soyState: \"namespace-def\" },\n    \"@attribute\": paramData,\n    \"@attribute?\": paramData,\n    \"@param\": paramData,\n    \"@param?\": paramData,\n    \"@inject\": paramData,\n    \"@inject?\": paramData,\n    \"@state\": paramData,\n    \"template\": { soyState: \"templ-def\", variableScope: true},\n    \"extern\": {soyState: \"param-def\"},\n    \"export\": {soyState: \"export\"},\n    \"literal\": { },\n    \"msg\": {},\n    \"fallbackmsg\": { noEndTag: true, reduceIndent: true},\n    \"select\": {},\n    \"plural\": {},\n    \"let\": { soyState: \"var-def\" },\n    \"if\": {},\n    \"javaimpl\": {},\n    \"jsimpl\": {},\n    \"elseif\": { noEndTag: true, reduceIndent: true},\n    \"else\": { noEndTag: true, reduceIndent: true},\n    \"switch\": {},\n    \"case\": { noEndTag: true, reduceIndent: true},\n    \"default\": { noEndTag: true, reduceIndent: true},\n    \"foreach\": { variableScope: true, soyState: \"for-loop\" },\n    \"ifempty\": { noEndTag: true, reduceIndent: true},\n    \"for\": { variableScope: true, soyState: \"for-loop\" },\n    \"call\": { soyState: \"templ-ref\" },\n    \"param\": { soyState: \"param-ref\"},\n    \"print\": { noEndTag: true },\n    \"deltemplate\": { soyState: \"templ-def\", variableScope: true},\n    \"delcall\": { soyState: \"templ-ref\" },\n    \"log\": {},\n    \"element\": { variableScope: true },\n    \"velog\": {},\n    \"const\": { soyState: \"const-def\"},\n  };\n\n  var indentingTags = Object.keys(tags).filter(function(tag) {\n    return !tags[tag].noEndTag || tags[tag].reduceIndent;\n  });\n\n  CodeMirror.defineMode(\"soy\", function(config) {\n    var textMode = CodeMirror.getMode(config, \"text/plain\");\n    var modes = {\n      html: CodeMirror.getMode(config, {name: \"text/html\", multilineTagIndentFactor: 2, multilineTagIndentPastTag: false, allowMissingTagName: true}),\n      attributes: textMode,\n      text: textMode,\n      uri: textMode,\n      trusted_resource_uri: textMode,\n      css: CodeMirror.getMode(config, \"text/css\"),\n      js: CodeMirror.getMode(config, {name: \"text/javascript\", statementIndent: 2 * config.indentUnit})\n    };\n\n    function last(array) {\n      return array[array.length - 1];\n    }\n\n    function tokenUntil(stream, state, untilRegExp) {\n      if (stream.sol()) {\n        for (var indent = 0; indent < state.indent; indent++) {\n          if (!stream.eat(/\\s/)) break;\n        }\n        if (indent) return null;\n      }\n      var oldString = stream.string;\n      var match = untilRegExp.exec(oldString.substr(stream.pos));\n      if (match) {\n        // We don't use backUp because it backs up just the position, not the state.\n        // This uses an undocumented API.\n        stream.string = oldString.substr(0, stream.pos + match.index);\n      }\n      var result = stream.hideFirstChars(state.indent, function() {\n        var localState = last(state.localStates);\n        return localState.mode.token(stream, localState.state);\n      });\n      stream.string = oldString;\n      return result;\n    }\n\n    function contains(list, element) {\n      while (list) {\n        if (list.element === element) return true;\n        list = list.next;\n      }\n      return false;\n    }\n\n    function prepend(list, element) {\n      return {\n        element: element,\n        next: list\n      };\n    }\n\n    function popcontext(state) {\n      if (!state.context) return;\n      if (state.context.scope) {\n        state.variables = state.context.scope;\n      }\n      state.context = state.context.previousContext;\n    }\n\n    // Reference a variable `name` in `list`.\n    // Let `loose` be truthy to ignore missing identifiers.\n    function ref(list, name, loose) {\n      return contains(list, name) ? \"variable-2\" : (loose ? \"variable\" : \"variable-2 error\");\n    }\n\n    // Data for an open soy tag.\n    function Context(previousContext, tag, scope) {\n      this.previousContext = previousContext;\n      this.tag = tag;\n      this.kind = null;\n      this.scope = scope;\n    }\n\n    function expression(stream, state) {\n      var match;\n      if (stream.match(/[[]/)) {\n        state.soyState.push(\"list-literal\");\n        state.context = new Context(state.context, \"list-literal\", state.variables);\n        state.lookupVariables = false;\n        return null;\n      } else if (stream.match(/\\bmap(?=\\()/)) {\n        state.soyState.push(\"map-literal\");\n        return \"keyword\";\n      } else if (stream.match(/\\brecord(?=\\()/)) {\n        state.soyState.push(\"record-literal\");\n        return \"keyword\";\n      } else if (stream.match(/([\\w]+)(?=\\()/)) {\n        return \"variable callee\";\n      } else if (match = stream.match(/^[\"']/)) {\n        state.soyState.push(\"string\");\n        state.quoteKind = match[0];\n        return \"string\";\n      } else if (stream.match(/^[(]/)) {\n        state.soyState.push(\"open-parentheses\");\n        return null;\n      } else if (stream.match(/(null|true|false)(?!\\w)/) ||\n          stream.match(/0x([0-9a-fA-F]{2,})/) ||\n          stream.match(/-?([0-9]*[.])?[0-9]+(e[0-9]*)?/)) {\n        return \"atom\";\n      } else if (stream.match(/(\\||[+\\-*\\/%]|[=!]=|\\?:|[<>]=?)/)) {\n        // Tokenize filter, binary, null propagator, and equality operators.\n        return \"operator\";\n      } else if (match = stream.match(/^\\$([\\w]+)/)) {\n        return ref(state.variables, match[1], !state.lookupVariables);\n      } else if (match = stream.match(/^\\w+/)) {\n        return /^(?:as|and|or|not|in|if)$/.test(match[0]) ? \"keyword\" : null;\n      }\n\n      stream.next();\n      return null;\n    }\n\n    return {\n      startState: function() {\n        return {\n          soyState: [],\n          variables: prepend(null, 'ij'),\n          scopes: null,\n          indent: 0,\n          quoteKind: null,\n          context: null,\n          lookupVariables: true, // Is unknown variables considered an error\n          localStates: [{\n            mode: modes.html,\n            state: CodeMirror.startState(modes.html)\n          }]\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          tag: state.tag, // Last seen Soy tag.\n          soyState: state.soyState.concat([]),\n          variables: state.variables,\n          context: state.context,\n          indent: state.indent, // Indentation of the following line.\n          quoteKind: state.quoteKind,\n          lookupVariables: state.lookupVariables,\n          localStates: state.localStates.map(function(localState) {\n            return {\n              mode: localState.mode,\n              state: CodeMirror.copyState(localState.mode, localState.state)\n            };\n          })\n        };\n      },\n\n      token: function(stream, state) {\n        var match;\n\n        switch (last(state.soyState)) {\n          case \"comment\":\n            if (stream.match(/^.*?\\*\\//)) {\n              state.soyState.pop();\n            } else {\n              stream.skipToEnd();\n            }\n            if (!state.context || !state.context.scope) {\n              var paramRe = /@param\\??\\s+(\\S+)/g;\n              var current = stream.current();\n              for (var match; (match = paramRe.exec(current)); ) {\n                state.variables = prepend(state.variables, match[1]);\n              }\n            }\n            return \"comment\";\n\n          case \"string\":\n            var match = stream.match(/^.*?([\"']|\\\\[\\s\\S])/);\n            if (!match) {\n              stream.skipToEnd();\n            } else if (match[1] == state.quoteKind) {\n              state.quoteKind = null;\n              state.soyState.pop();\n            }\n            return \"string\";\n        }\n\n        if (!state.soyState.length || last(state.soyState) != \"literal\") {\n          if (stream.match(/^\\/\\*/)) {\n            state.soyState.push(\"comment\");\n            return \"comment\";\n          } else if (stream.match(stream.sol() ? /^\\s*\\/\\/.*/ : /^\\s+\\/\\/.*/)) {\n            return \"comment\";\n          }\n        }\n\n        switch (last(state.soyState)) {\n          case \"templ-def\":\n            if (match = stream.match(/^\\.?([\\w]+(?!\\.[\\w]+)*)/)) {\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"templ-ref\":\n            if (match = stream.match(/(\\.?[a-zA-Z_][a-zA-Z_0-9]+)+/)) {\n              state.soyState.pop();\n              // If the first character is '.', it can only be a local template.\n              if (match[0][0] == '.') {\n                return \"variable-2\"\n              }\n              // Otherwise\n              return \"variable\";\n            }\n            if (match = stream.match(/^\\$([\\w]+)/)) {\n              state.soyState.pop();\n              return ref(state.variables, match[1], !state.lookupVariables);\n            }\n\n            stream.next();\n            return null;\n\n          case \"namespace-def\":\n            if (match = stream.match(/^\\.?([\\w\\.]+)/)) {\n              state.soyState.pop();\n              return \"variable\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-def\":\n            if (match = stream.match(/^\\*/)) {\n              state.soyState.pop();\n              state.soyState.push(\"param-type\");\n              return \"type\";\n            }\n            if (match = stream.match(/^\\w+/)) {\n              state.variables = prepend(state.variables, match[0]);\n              state.soyState.pop();\n              state.soyState.push(\"param-type\");\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-ref\":\n            if (match = stream.match(/^\\w+/)) {\n              state.soyState.pop();\n              return \"property\";\n            }\n            stream.next();\n            return null;\n\n          case \"open-parentheses\":\n            if (stream.match(/[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            return expression(stream, state);\n\n          case \"param-type\":\n            var peekChar = stream.peek();\n            if (\"}]=>,\".indexOf(peekChar) != -1) {\n              state.soyState.pop();\n              return null;\n            } else if (peekChar == \"[\") {\n              state.soyState.push('param-type-record');\n              return null;\n            } else if (peekChar == \"(\") {\n              state.soyState.push('param-type-template');\n              return null;\n            } else if (peekChar == \"<\") {\n              state.soyState.push('param-type-parameter');\n              return null;\n            } else if (match = stream.match(/^([\\w]+|[?])/)) {\n              return \"type\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-type-record\":\n            var peekChar = stream.peek();\n            if (peekChar == \"]\") {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/^\\w+/)) {\n              state.soyState.push('param-type');\n              return \"property\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-type-parameter\":\n            if (stream.match(/^[>]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/^[<,]/)) {\n              state.soyState.push('param-type');\n              return null;\n            }\n            stream.next();\n            return null;\n\n          case \"param-type-template\":\n            if (stream.match(/[>]/)) {\n              state.soyState.pop();\n              state.soyState.push('param-type');\n              return null;\n            }\n            if (stream.match(/^\\w+/)) {\n              state.soyState.push('param-type');\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"var-def\":\n            if (match = stream.match(/^\\$([\\w]+)/)) {\n              state.variables = prepend(state.variables, match[1]);\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"for-loop\":\n            if (stream.match(/\\bin\\b/)) {\n              state.soyState.pop();\n              return \"keyword\";\n            }\n            if (stream.peek() == \"$\") {\n              state.soyState.push('var-def');\n              return null;\n            }\n            stream.next();\n            return null;\n\n          case \"record-literal\":\n            if (stream.match(/^[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/[(,]/)) {\n              state.soyState.push(\"map-value\")\n              state.soyState.push(\"record-key\")\n              return null;\n            }\n            stream.next()\n            return null;\n\n          case \"map-literal\":\n            if (stream.match(/^[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/[(,]/)) {\n              state.soyState.push(\"map-value\")\n              state.soyState.push(\"map-value\")\n              return null;\n            }\n            stream.next()\n            return null;\n\n          case \"list-literal\":\n            if (stream.match(']')) {\n              state.soyState.pop();\n              state.lookupVariables = true;\n              popcontext(state);\n              return null;\n            }\n            if (stream.match(/\\bfor\\b/)) {\n              state.lookupVariables = true;\n              state.soyState.push('for-loop');\n              return \"keyword\";\n            }\n            return expression(stream, state);\n\n          case \"record-key\":\n            if (stream.match(/[\\w]+/)) {\n              return \"property\";\n            }\n            if (stream.match(/^[:]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            stream.next();\n            return null;\n\n          case \"map-value\":\n            if (stream.peek() == \")\" || stream.peek() == \",\" || stream.match(/^[:)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            return expression(stream, state);\n\n          case \"import\":\n            if (stream.eat(\";\")) {\n              state.soyState.pop();\n              state.indent -= 2 * config.indentUnit;\n              return null;\n            }\n            if (stream.match(/\\w+(?=\\s+as\\b)/)) {\n              return \"variable\";\n            }\n            if (match = stream.match(/\\w+/)) {\n              return /\\b(from|as)\\b/.test(match[0]) ? \"keyword\" : \"def\";\n            }\n            if (match = stream.match(/^[\"']/)) {\n              state.soyState.push(\"string\");\n              state.quoteKind = match[0];\n              return \"string\";\n            }\n            stream.next();\n            return null;\n\n          case \"tag\":\n            var endTag;\n            var tagName;\n            if (state.tag === undefined) {\n              endTag = true;\n              tagName = '';\n            } else {\n              endTag = state.tag[0] == \"/\";\n              tagName = endTag ? state.tag.substring(1) : state.tag;\n            }\n            var tag = tags[tagName];\n            if (stream.match(/^\\/?}/)) {\n              var selfClosed = stream.current() == \"/}\";\n              if (selfClosed && !endTag) {\n                popcontext(state);\n              }\n              if (state.tag == \"/template\" || state.tag == \"/deltemplate\") {\n                state.variables = prepend(null, 'ij');\n                state.indent = 0;\n              } else {\n                state.indent -= config.indentUnit *\n                    (selfClosed || indentingTags.indexOf(state.tag) == -1 ? 2 : 1);\n              }\n              state.soyState.pop();\n              return \"keyword\";\n            } else if (stream.match(/^([\\w?]+)(?==)/)) {\n              if (state.context && state.context.tag == tagName && stream.current() == \"kind\" && (match = stream.match(/^=\"([^\"]+)/, false))) {\n                var kind = match[1];\n                state.context.kind = kind;\n                var mode = modes[kind] || modes.html;\n                var localState = last(state.localStates);\n                if (localState.mode.indent) {\n                  state.indent += localState.mode.indent(localState.state, \"\", \"\");\n                }\n                state.localStates.push({\n                  mode: mode,\n                  state: CodeMirror.startState(mode)\n                });\n              }\n              return \"attribute\";\n            }\n            return expression(stream, state);\n\n          case \"template-call-expression\":\n            if (stream.match(/^([\\w-?]+)(?==)/)) {\n              return \"attribute\";\n            } else if (stream.eat('>')) {\n              state.soyState.pop();\n              return \"keyword\";\n            } else if (stream.eat('/>')) {\n              state.soyState.pop();\n              return \"keyword\";\n            }\n            return expression(stream, state);\n          case \"literal\":\n            if (stream.match('{/literal}', false)) {\n              state.soyState.pop();\n              return this.token(stream, state);\n            }\n            return tokenUntil(stream, state, /\\{\\/literal}/);\n          case \"export\":\n            if (match = stream.match(/\\w+/)) {\n              state.soyState.pop();\n              if (match == \"const\") {\n                state.soyState.push(\"const-def\")\n                return \"keyword\";\n              } else if (match == \"extern\") {\n                state.soyState.push(\"param-def\")\n                return \"keyword\";\n              }\n            } else {\n              stream.next();\n            }\n            return null;\n          case \"const-def\":\n            if (stream.match(/^\\w+/)) {\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n        }\n\n        if (stream.match('{literal}')) {\n          state.indent += config.indentUnit;\n          state.soyState.push(\"literal\");\n          state.context = new Context(state.context, \"literal\", state.variables);\n          return \"keyword\";\n\n        // A tag-keyword must be followed by whitespace, comment or a closing tag.\n        } else if (match = stream.match(/^\\{([/@\\\\]?\\w+\\??)(?=$|[\\s}]|\\/[/*])/)) {\n          var prevTag = state.tag;\n          state.tag = match[1];\n          var endTag = state.tag[0] == \"/\";\n          var indentingTag = !!tags[state.tag];\n          var tagName = endTag ? state.tag.substring(1) : state.tag;\n          var tag = tags[tagName];\n          if (state.tag != \"/switch\")\n            state.indent += ((endTag || tag && tag.reduceIndent) && prevTag != \"switch\" ? 1 : 2) * config.indentUnit;\n\n          state.soyState.push(\"tag\");\n          var tagError = false;\n          if (tag) {\n            if (!endTag) {\n              if (tag.soyState) state.soyState.push(tag.soyState);\n            }\n            // If a new tag, open a new context.\n            if (!tag.noEndTag && (indentingTag || !endTag)) {\n              state.context = new Context(state.context, state.tag, tag.variableScope ? state.variables : null);\n            // Otherwise close the current context.\n            } else if (endTag) {\n              var isBalancedForExtern = tagName == 'extern' && (state.context && state.context.tag == 'export');\n              if (!state.context || ((state.context.tag != tagName) && !isBalancedForExtern)) {\n                tagError = true;\n              } else if (state.context) {\n                if (state.context.kind) {\n                  state.localStates.pop();\n                  var localState = last(state.localStates);\n                  if (localState.mode.indent) {\n                    state.indent -= localState.mode.indent(localState.state, \"\", \"\");\n                  }\n                }\n                popcontext(state);\n              }\n            }\n          } else if (endTag) {\n            // Assume all tags with a closing tag are defined in the config.\n            tagError = true;\n          }\n          return (tagError ? \"error \" : \"\") + \"keyword\";\n\n        // Not a tag-keyword; it's an implicit print tag.\n        } else if (stream.eat('{')) {\n          state.tag = \"print\";\n          state.indent += 2 * config.indentUnit;\n          state.soyState.push(\"tag\");\n          return \"keyword\";\n        } else if (!state.context && stream.sol() && stream.match(/import\\b/)) {\n          state.soyState.push(\"import\");\n          state.indent += 2 * config.indentUnit;\n          return \"keyword\";\n        } else if (match = stream.match('<{')) {\n          state.soyState.push(\"template-call-expression\");\n          state.indent += 2 * config.indentUnit;\n          state.soyState.push(\"tag\");\n          return \"keyword\";\n        } else if (match = stream.match('</>')) {\n          state.indent -= 1 * config.indentUnit;\n          return \"keyword\";\n        }\n\n        return tokenUntil(stream, state, /\\{|\\s+\\/\\/|\\/\\*/);\n      },\n\n      indent: function(state, textAfter, line) {\n        var indent = state.indent, top = last(state.soyState);\n        if (top == \"comment\") return CodeMirror.Pass;\n\n        if (top == \"literal\") {\n          if (/^\\{\\/literal}/.test(textAfter)) indent -= config.indentUnit;\n        } else {\n          if (/^\\s*\\{\\/(template|deltemplate)\\b/.test(textAfter)) return 0;\n          if (/^\\{(\\/|(fallbackmsg|elseif|else|ifempty)\\b)/.test(textAfter)) indent -= config.indentUnit;\n          if (state.tag != \"switch\" && /^\\{(case|default)\\b/.test(textAfter)) indent -= config.indentUnit;\n          if (/^\\{\\/switch\\b/.test(textAfter)) indent -= config.indentUnit;\n        }\n        var localState = last(state.localStates);\n        if (indent && localState.mode.indent) {\n          indent += localState.mode.indent(localState.state, textAfter, line);\n        }\n        return indent;\n      },\n\n      innerMode: function(state) {\n        if (state.soyState.length && last(state.soyState) != \"literal\") return null;\n        else return last(state.localStates);\n      },\n\n      electricInput: /^\\s*\\{(\\/|\\/template|\\/deltemplate|\\/switch|fallbackmsg|elseif|else|case|default|ifempty|\\/literal\\})$/,\n      lineComment: \"//\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      blockCommentContinue: \" * \",\n      useInnerComments: false,\n      fold: \"indent\"\n    };\n  }, \"htmlmixed\");\n\n  CodeMirror.registerHelper(\"wordChars\", \"soy\", /[\\w$]/);\n\n  CodeMirror.registerHelper(\"hintWords\", \"soy\", Object.keys(tags).concat(\n      [\"css\", \"debugger\"]));\n\n  CodeMirror.defineMIME(\"text/x-soy\", \"soy\");\n});\n"],"sourceRoot":""}