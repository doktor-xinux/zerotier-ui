{"version":3,"sources":["../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js","../node_modules/codemirror/mode/ruby/ruby.js","../node_modules/codemirror/mode/haml/haml.js"],"names":["CodeMirror","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","defineMode","editorConf","config_","type","setStyle","indentUnit","config","defaults","htmlMode","prop","inText","stream","state","chain","parser","tokenize","ch","next","eat","match","inBlock","eatWhile","doctype","inTag","baseState","tagName","tagStart","test","inAttribute","stringStartCol","column","quote","closure","eol","isInAttribute","style","terminator","depth","lower","toLowerCase","Context","startOfLine","this","prev","context","indent","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","startState","baseIndent","token","sol","indentation","eatSpace","textAfter","fullLine","Pass","length","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","name","close","xmlCurrentContext","cx","push","reverse","defineMIME","mimeModes","mod","require","defaultTags","script","maybeBackup","pat","cur","search","backUp","attrRegexpCache","getAttrRegexp","attr","regexp","RegExp","getAttrValue","text","getTagRegexp","anchored","addTags","from","to","tag","dest","source","i","unshift","findMatchingMode","tagInfo","tagText","spec","parserConfig","getMode","tags","configTags","configScript","scriptTypes","matches","mode","html","htmlState","modeSpec","endTagA","endTag","localState","localMode","copyState","local","line","innerMode","wordObj","words","o","e","keywordList","keywords","indentWords","dedentWords","opening","closing","curPunc","newtok","tokenBase","readBlockComment","m","readQuoted","regexpAhead","embed","delim","propertyIsEnumerable","skipToEnd","readHereDoc","varList","lastTok","more","start","pos","found","escaped","indexOf","tokenBaseUntilBrace","peek","pop","tokenBaseOnce","alreadyCalled","unescaped","phrase","mayIndent","continuedLine","kwtype","thisTok","word","firstChar","charAt","ct","closed","lineComment","fold","registerHelper","rubyMode","rubyInQuote","endQuote","rubyState","ruby","previousToken"],"mappings":"qGAUG,SAASA,GACZ,aAEA,IAAIC,EAAa,CACfC,gBAAiB,CAAC,MAAQ,EAAM,MAAQ,EAAM,IAAM,EAAM,KAAO,EAAM,SAAW,EAChE,OAAS,EAAM,OAAS,EAAM,IAAM,EAAM,KAAO,EAAM,OAAS,EAChE,QAAU,EAAM,MAAQ,EAAM,MAAQ,EAAM,OAAS,EAAM,QAAU,EACrE,OAAS,EAAM,KAAO,EAAM,UAAY,GAC1DC,iBAAkB,CAAC,IAAM,EAAM,IAAM,EAAM,UAAY,EAAM,QAAU,EAAM,GAAK,EAC/D,IAAM,EAAM,IAAM,EAAM,OAAS,EAAM,IAAM,EAAM,OAAS,EAC5D,IAAM,EAAM,IAAM,GACrCC,gBAAiB,CACf,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,GAAM,CAAC,IAAM,GACb,OAAU,CAAC,QAAU,EAAM,UAAY,GACvC,SAAY,CAAC,UAAY,GACzB,EAAK,CAAC,SAAW,EAAM,SAAW,EAAM,OAAS,EAAM,YAAc,EAAM,KAAO,EAC5E,KAAO,EAAM,IAAM,EAAM,UAAY,EAAM,QAAU,EAAM,MAAQ,EACnE,IAAM,EAAM,IAAM,EAAM,IAAM,EAAM,IAAM,EAAM,IAAM,EAAM,IAAM,EAClE,QAAU,EAAM,QAAU,EAAM,IAAM,EAAM,MAAQ,EAAM,KAAO,EAAM,IAAM,EAC7E,GAAK,EAAM,KAAO,EAAM,SAAW,EAAM,OAAS,EAAM,IAAM,GACpE,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,MAAS,CAAC,OAAS,EAAM,OAAS,GAClC,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,MAAS,CAAC,OAAS,GACnB,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,MAAS,CAAC,OAAS,EAAM,OAAS,GAClC,GAAM,CAAC,IAAM,IAEfC,YAAa,CAAC,KAAO,GACrBC,eAAe,EACfC,cAAc,EACdC,UAAU,GAGRC,EAAY,CACdP,gBAAiB,GACjBC,iBAAkB,GAClBC,gBAAiB,GACjBC,YAAa,GACbC,eAAe,EACfC,cAAc,EACdG,qBAAqB,EACrBF,UAAU,GAGZR,EAAWW,WAAW,OAAO,SAASC,EAAYC,GAChD,IAOIC,EAAMC,EAPNC,EAAaJ,EAAWI,WACxBC,EAAS,GACTC,EAAWL,EAAQM,SAAWlB,EAAaQ,EAC/C,IAAK,IAAIW,KAAQF,EAAUD,EAAOG,GAAQF,EAASE,GACnD,IAAK,IAAIA,KAAQP,EAASI,EAAOG,GAAQP,EAAQO,GAKjD,SAASC,EAAOC,EAAQC,GACtB,SAASC,EAAMC,GAEb,OADAF,EAAMG,SAAWD,EACVA,EAAOH,EAAQC,GAGxB,IAAII,EAAKL,EAAOM,OAChB,MAAU,KAAND,EACEL,EAAOO,IAAI,KACTP,EAAOO,IAAI,KACTP,EAAOQ,MAAM,UAAkBN,EAAMO,EAAQ,OAAQ,QAC7C,KACHT,EAAOQ,MAAM,MACfN,EAAMO,EAAQ,UAAW,WACvBT,EAAOQ,MAAM,WAAW,GAAM,IACvCR,EAAOU,SAAS,aACTR,EAAMS,EAAQ,KAEd,KAEAX,EAAOO,IAAI,MACpBP,EAAOU,SAAS,aAChBT,EAAMG,SAAWK,EAAQ,OAAQ,MAC1B,SAEPjB,EAAOQ,EAAOO,IAAI,KAAO,WAAa,UACtCN,EAAMG,SAAWQ,EACV,eAEM,KAANP,GAELL,EAAOO,IAAI,KACTP,EAAOO,IAAI,KACRP,EAAOU,SAAS,eAAiBV,EAAOO,IAAI,KAE5CP,EAAOU,SAAS,SAAWV,EAAOO,IAAI,KAGxCP,EAAOU,SAAS,cAAgBV,EAAOO,IAAI,MAEtC,OAAS,SAErBP,EAAOU,SAAS,SACT,MAKX,SAASE,EAAMZ,EAAQC,GACrB,IAAII,EAAKL,EAAOM,OAChB,GAAU,KAAND,GAAoB,KAANA,GAAaL,EAAOO,IAAI,KAGxC,OAFAN,EAAMG,SAAWL,EACjBP,EAAa,KAANa,EAAY,SAAW,eACvB,cACF,GAAU,KAANA,EAET,OADAb,EAAO,SACA,KACF,GAAU,KAANa,EAAW,CACpBJ,EAAMG,SAAWL,EACjBE,EAAMA,MAAQY,EACdZ,EAAMa,QAAUb,EAAMc,SAAW,KACjC,IAAIT,EAAOL,EAAMG,SAASJ,EAAQC,GAClC,OAAOK,EAAOA,EAAO,aAAe,YAC/B,MAAI,SAASU,KAAKX,IACvBJ,EAAMG,SAAWa,EAAYZ,GAC7BJ,EAAMiB,eAAiBlB,EAAOmB,SACvBlB,EAAMG,SAASJ,EAAQC,KAE9BD,EAAOQ,MAAM,4CACN,QAIX,SAASS,EAAYG,GACnB,IAAIC,EAAU,SAASrB,EAAQC,GAC7B,MAAQD,EAAOsB,OACb,GAAItB,EAAOM,QAAUc,EAAO,CAC1BnB,EAAMG,SAAWQ,EACjB,MAGJ,MAAO,UAGT,OADAS,EAAQE,eAAgB,EACjBF,EAGT,SAASZ,EAAQe,EAAOC,GACtB,OAAO,SAASzB,EAAQC,GACtB,MAAQD,EAAOsB,OAAO,CACpB,GAAItB,EAAOQ,MAAMiB,GAAa,CAC5BxB,EAAMG,SAAWL,EACjB,MAEFC,EAAOM,OAET,OAAOkB,GAIX,SAASb,EAAQe,GACf,OAAO,SAAS1B,EAAQC,GAEtB,IADA,IAAII,EAC2B,OAAvBA,EAAKL,EAAOM,SAAiB,CACnC,GAAU,KAAND,EAEF,OADAJ,EAAMG,SAAWO,EAAQe,EAAQ,GAC1BzB,EAAMG,SAASJ,EAAQC,GACzB,GAAU,KAANI,EAAW,CACpB,GAAa,GAATqB,EAAY,CACdzB,EAAMG,SAAWL,EACjB,MAGA,OADAE,EAAMG,SAAWO,EAAQe,EAAQ,GAC1BzB,EAAMG,SAASJ,EAAQC,IAIpC,MAAO,QAIX,SAAS0B,EAAMb,GACb,OAAOA,GAAWA,EAAQc,cAG5B,SAASC,EAAQ5B,EAAOa,EAASgB,GAC/BC,KAAKC,KAAO/B,EAAMgC,QAClBF,KAAKjB,QAAUA,GAAW,GAC1BiB,KAAKG,OAASjC,EAAMkC,SACpBJ,KAAKD,YAAcA,GACfnC,EAAOZ,YAAYqD,eAAetB,IAAab,EAAMgC,SAAWhC,EAAMgC,QAAQI,YAChFN,KAAKM,UAAW,GAEpB,SAASC,EAAWrC,GACdA,EAAMgC,UAAShC,EAAMgC,QAAUhC,EAAMgC,QAAQD,MAEnD,SAASO,EAAgBtC,EAAOuC,GAE9B,IADA,IAAIC,IACS,CACX,IAAKxC,EAAMgC,QACT,OAGF,GADAQ,EAAgBxC,EAAMgC,QAAQnB,SACzBnB,EAAOb,gBAAgBsD,eAAeT,EAAMc,MAC5C9C,EAAOb,gBAAgB6C,EAAMc,IAAgBL,eAAeT,EAAMa,IACrE,OAEFF,EAAWrC,IAIf,SAASY,EAAUrB,EAAMQ,EAAQC,GAC/B,MAAY,WAART,GACFS,EAAMc,SAAWf,EAAOmB,SACjBuB,GACU,YAARlD,EACFmD,EAEA9B,EAGX,SAAS6B,EAAalD,EAAMQ,EAAQC,GAClC,MAAY,QAART,GACFS,EAAMa,QAAUd,EAAO4C,UACvBnD,EAAW,MACJoD,GACElD,EAAOP,qBAA+B,UAARI,GACvCC,EAAW,cACJoD,EAAUrD,EAAMQ,EAAQC,KAE/BR,EAAW,QACJiD,GAGX,SAASC,EAAkBnD,EAAMQ,EAAQC,GACvC,GAAY,QAART,EAAgB,CAClB,IAAIsB,EAAUd,EAAO4C,UAIrB,OAHI3C,EAAMgC,SAAWhC,EAAMgC,QAAQnB,SAAWA,GAC1CnB,EAAOd,iBAAiBuD,eAAeT,EAAM1B,EAAMgC,QAAQnB,WAC7DwB,EAAWrC,GACRA,EAAMgC,SAAWhC,EAAMgC,QAAQnB,SAAWA,IAAoC,IAAxBnB,EAAOmD,cAChErD,EAAW,MACJsD,IAEPtD,EAAW,YACJuD,GAEJ,OAAIrD,EAAOP,qBAA+B,UAARI,GACvCC,EAAW,cACJsD,EAAWvD,EAAMQ,EAAQC,KAEhCR,EAAW,QACJuD,GAIX,SAASD,EAAWvD,EAAMyD,EAAShD,GACjC,MAAY,UAART,GACFC,EAAW,QACJsD,IAETT,EAAWrC,GACJY,GAET,SAASmC,EAAcxD,EAAMQ,EAAQC,GAEnC,OADAR,EAAW,QACJsD,EAAWvD,EAAMQ,EAAQC,GAGlC,SAAS4C,EAAUrD,EAAMyD,EAAShD,GAChC,GAAY,QAART,EAEF,OADAC,EAAW,YACJyD,EACF,GAAY,UAAR1D,GAA4B,gBAARA,EAAwB,CACrD,IAAIsB,EAAUb,EAAMa,QAASC,EAAWd,EAAMc,SAS9C,OARAd,EAAMa,QAAUb,EAAMc,SAAW,KACrB,gBAARvB,GACAG,EAAOf,gBAAgBwD,eAAeT,EAAMb,IAC9CyB,EAAgBtC,EAAOa,IAEvByB,EAAgBtC,EAAOa,GACvBb,EAAMgC,QAAU,IAAIJ,EAAQ5B,EAAOa,EAASC,GAAYd,EAAMkC,WAEzDtB,EAGT,OADApB,EAAW,QACJoD,EAET,SAASK,EAAY1D,EAAMQ,EAAQC,GACjC,MAAY,UAART,EAAyB2D,GACxBxD,EAAOV,eAAcQ,EAAW,SAC9BoD,EAAUrD,EAAMQ,EAAQC,IAEjC,SAASkD,EAAe3D,EAAMQ,EAAQC,GACpC,MAAY,UAART,EAAyB4D,EACjB,QAAR5D,GAAkBG,EAAOX,eAAgBS,EAAW,SAAiBoD,IACzEpD,EAAW,QACJoD,EAAUrD,EAAMQ,EAAQC,IAEjC,SAASmD,EAAmB5D,EAAMQ,EAAQC,GACxC,MAAY,UAART,EAAyB4D,EACtBP,EAAUrD,EAAMQ,EAAQC,GAGjC,OAtMAF,EAAOsD,UAAW,EAsMX,CACLC,WAAY,SAASC,GACnB,IAAItD,EAAQ,CAACG,SAAUL,EACVE,MAAOY,EACPsB,SAAUoB,GAAc,EACxBzC,QAAS,KAAMC,SAAU,KACzBkB,QAAS,MAEtB,OADkB,MAAdsB,IAAoBtD,EAAMsD,WAAaA,GACpCtD,GAGTuD,MAAO,SAASxD,EAAQC,GAItB,IAHKA,EAAMa,SAAWd,EAAOyD,QAC3BxD,EAAMkC,SAAWnC,EAAO0D,eAEtB1D,EAAO2D,WAAY,OAAO,KAC9BnE,EAAO,KACP,IAAIgC,EAAQvB,EAAMG,SAASJ,EAAQC,GAOnC,OANKuB,GAAShC,IAAkB,WAATgC,IACrB/B,EAAW,KACXQ,EAAMA,MAAQA,EAAMA,MAAMT,GAAQgC,EAAOxB,EAAQC,GAC7CR,IACF+B,EAAoB,SAAZ/B,EAAsB+B,EAAQ,SAAW/B,IAE9C+B,GAGTU,OAAQ,SAASjC,EAAO2D,EAAWC,GACjC,IAAI5B,EAAUhC,EAAMgC,QAEpB,GAAIhC,EAAMG,SAASmB,cACjB,OAAItB,EAAMc,UAAYd,EAAMkC,SACnBlC,EAAMiB,eAAiB,EAEvBjB,EAAMkC,SAAWzC,EAE5B,GAAIuC,GAAWA,EAAQI,SAAU,OAAO3D,EAAWoF,KACnD,GAAI7D,EAAMG,UAAYQ,GAASX,EAAMG,UAAYL,EAC/C,OAAO8D,EAAWA,EAASrD,MAAM,UAAU,GAAGuD,OAAS,EAEzD,GAAI9D,EAAMa,QACR,OAAyC,IAArCnB,EAAOqE,0BACF/D,EAAMc,SAAWd,EAAMa,QAAQiD,OAAS,EAExC9D,EAAMc,SAAWrB,GAAcC,EAAOsE,0BAA4B,GAE7E,GAAItE,EAAOuE,YAAc,cAAclD,KAAK4C,GAAY,OAAO,EAC/D,IAAIO,EAAWP,GAAa,sBAAsBQ,KAAKR,GACvD,GAAIO,GAAYA,EAAS,GACvB,KAAOlC,GAAS,CACd,GAAIA,EAAQnB,SAAWqD,EAAS,GAAI,CAClClC,EAAUA,EAAQD,KAClB,MACK,IAAIrC,EAAOd,iBAAiBuD,eAAeT,EAAMM,EAAQnB,UAG9D,MAFAmB,EAAUA,EAAQD,UAKjB,GAAImC,EACT,KAAOlC,GAAS,CACd,IAAIoC,EAAW1E,EAAOb,gBAAgB6C,EAAMM,EAAQnB,UACpD,IAAIuD,IAAYA,EAASjC,eAAeT,EAAMwC,EAAS,KAGrD,MAFAlC,EAAUA,EAAQD,KAKxB,KAAOC,GAAWA,EAAQD,OAASC,EAAQH,aACzCG,EAAUA,EAAQD,KACpB,OAAIC,EAAgBA,EAAQC,OAASxC,EACzBO,EAAMsD,YAAc,GAGlCe,cAAe,gBACfC,kBAAmB,UACnBC,gBAAiB,SAEjBC,cAAe9E,EAAOE,SAAW,OAAS,MAC1C6E,WAAY/E,EAAOE,SAAW,OAAS,MAEvC8E,cAAe,SAAS1E,GAClBA,EAAMA,OAASkD,IACjBlD,EAAMA,MAAQ4C,IAGlB+B,cAAe,SAAS3E,GACtB,OAAOA,EAAMa,QAAU,CAAC+D,KAAM5E,EAAMa,QAASgE,MAAqB,YAAd7E,EAAMT,MAAsB,MAGlFuF,kBAAmB,SAAS9E,GAE1B,IADA,IAAIgC,EAAU,GACL+C,EAAK/E,EAAMgC,QAAS+C,EAAIA,EAAKA,EAAGhD,KACvCC,EAAQgD,KAAKD,EAAGlE,SAClB,OAAOmB,EAAQiD,eAKrBxG,EAAWyG,WAAW,WAAY,OAClCzG,EAAWyG,WAAW,kBAAmB,OACpCzG,EAAW0G,UAAUhD,eAAe,cACvC1D,EAAWyG,WAAW,YAAa,CAACN,KAAM,MAAOhF,UAAU,IAzZzDwF,CAAIC,EAAQ,O,qBCKb,SAAS5G,GACV,aAEA,IAAI6G,EAAc,CAChBC,OAAQ,CACN,CAAC,OAAQ,sBAAuB,cAChC,CAAC,OAAQ,kEAAmE,cAC5E,CAAC,OAAQ,IAAK,cACd,CAAC,KAAM,KAAM,eAEfhE,MAAQ,CACN,CAAC,OAAQ,SAAU,OACnB,CAAC,OAAQ,oCAAqC,OAC9C,CAAC,OAAQ,IAAK,cACd,CAAC,KAAM,KAAM,SAIjB,SAASiE,EAAYzF,EAAQ0F,EAAKlE,GAChC,IAAImE,EAAM3F,EAAO4C,UAAWkC,EAAQa,EAAIC,OAAOF,GAO/C,OANIZ,GAAS,EACX9E,EAAO6F,OAAOF,EAAI5B,OAASe,GAClBa,EAAInF,MAAM,WACnBR,EAAO6F,OAAOF,EAAI5B,QACb/D,EAAOQ,MAAMkF,GAAK,IAAQ1F,EAAOQ,MAAMmF,IAEvCnE,EAGT,IAAIsE,EAAkB,GACtB,SAASC,EAAcC,GACrB,IAAIC,EAASH,EAAgBE,GAC7B,OAAIC,IACGH,EAAgBE,GAAQ,IAAIE,OAAO,OAASF,EAAO,yCAG5D,SAASG,EAAaC,EAAMJ,GAC1B,IAAIxF,EAAQ4F,EAAK5F,MAAMuF,EAAcC,IACrC,OAAOxF,EAAQ,gBAAgB4D,KAAK5D,EAAM,IAAI,GAAK,GAGrD,SAAS6F,EAAavF,EAASwF,GAC7B,OAAO,IAAIJ,QAAQI,EAAW,IAAM,IAAM,SAAYxF,EAAU,QAAS,KAG3E,SAASyF,EAAQC,EAAMC,GACrB,IAAK,IAAIC,KAAOF,EAGd,IAFA,IAAIG,EAAOF,EAAGC,KAASD,EAAGC,GAAO,IAC7BE,EAASJ,EAAKE,GACTG,EAAID,EAAO7C,OAAS,EAAG8C,GAAK,EAAGA,IACtCF,EAAKG,QAAQF,EAAOC,IAI1B,SAASE,EAAiBC,EAASC,GACjC,IAAK,IAAIJ,EAAI,EAAGA,EAAIG,EAAQjD,OAAQ8C,IAAK,CACvC,IAAIK,EAAOF,EAAQH,GACnB,IAAKK,EAAK,IAAMA,EAAK,GAAGlG,KAAKmF,EAAac,EAASC,EAAK,KAAM,OAAOA,EAAK,IAI9ExI,EAAWW,WAAW,aAAa,SAAUM,EAAQwH,GACnD,IAAItH,EAAWnB,EAAW0I,QAAQzH,EAAQ,CACxCkF,KAAM,MACNhF,UAAU,EACVoE,yBAA0BkD,EAAalD,yBACvCD,0BAA2BmD,EAAanD,0BACxC5E,oBAAqB+H,EAAa/H,sBAGhCiI,EAAO,GACPC,EAAaH,GAAgBA,EAAaE,KAAME,EAAeJ,GAAgBA,EAAaK,YAGhG,GAFAjB,EAAQhB,EAAa8B,GACjBC,GAAYf,EAAQe,EAAYD,GAChCE,EAAc,IAAK,IAAIV,EAAIU,EAAaxD,OAAS,EAAG8C,GAAK,EAAGA,IAC9DQ,EAAK7B,OAAOsB,QAAQ,CAAC,OAAQS,EAAaV,GAAGY,QAASF,EAAaV,GAAGa,OAExE,SAASC,EAAK3H,EAAQC,GACpB,IAAkFa,EAA9EU,EAAQ3B,EAAS2D,MAAMxD,EAAQC,EAAM2H,WAAYlB,EAAM,UAAU1F,KAAKQ,GAC1E,GAAIkF,IAAQ,WAAW1F,KAAKhB,EAAO4C,aAC9B9B,EAAUb,EAAM2H,UAAU9G,SAAWb,EAAM2H,UAAU9G,QAAQc,gBAC9DyF,EAAKjF,eAAetB,GACtBb,EAAMW,MAAQE,EAAU,SACnB,GAAIb,EAAMW,OAAS8F,GAAO,KAAK1F,KAAKhB,EAAO4C,WAAY,CAC5D,IAAIhC,EAAQ,gBAAgBwD,KAAKnE,EAAMW,OACvCX,EAAMW,MAAQ,KACd,IAAIiH,EAA+B,KAApB7H,EAAO4C,WAAoBmE,EAAiBM,EAAKzG,EAAM,IAAKA,EAAM,IAC7E8G,EAAOhJ,EAAW0I,QAAQzH,EAAQkI,GAClCC,EAAUzB,EAAazF,EAAM,IAAI,GAAOmH,EAAS1B,EAAazF,EAAM,IAAI,GAC5EX,EAAMuD,MAAQ,SAAUxD,EAAQC,GAC9B,OAAID,EAAOQ,MAAMsH,GAAS,IACxB7H,EAAMuD,MAAQmE,EACd1H,EAAM+H,WAAa/H,EAAMgI,UAAY,KAC9B,MAEFxC,EAAYzF,EAAQ+H,EAAQ9H,EAAMgI,UAAUzE,MAAMxD,EAAQC,EAAM+H,cAEzE/H,EAAMgI,UAAYP,EAClBzH,EAAM+H,WAAatJ,EAAW4E,WAAWoE,EAAM7H,EAASqC,OAAOjC,EAAM2H,UAAW,GAAI,UAC3E3H,EAAMW,QACfX,EAAMW,OAASZ,EAAO4C,UAClB5C,EAAOsB,QAAOrB,EAAMW,OAAS,MAEnC,OAAOY,EAGT,MAAO,CACL8B,WAAY,WAEV,MAAO,CAACE,MAAOmE,EAAM/G,MAAO,KAAMqH,UAAW,KAAMD,WAAY,KAAMJ,UADzDlJ,EAAW4E,WAAWzD,KAIpCqI,UAAW,SAAUjI,GACnB,IAAIkI,EAIJ,OAHIlI,EAAM+H,aACRG,EAAQzJ,EAAWwJ,UAAUjI,EAAMgI,UAAWhI,EAAM+H,aAE/C,CAACxE,MAAOvD,EAAMuD,MAAO5C,MAAOX,EAAMW,MACjCqH,UAAWhI,EAAMgI,UAAWD,WAAYG,EACxCP,UAAWlJ,EAAWwJ,UAAUrI,EAAUI,EAAM2H,aAG1DpE,MAAO,SAAUxD,EAAQC,GACvB,OAAOA,EAAMuD,MAAMxD,EAAQC,IAG7BiC,OAAQ,SAAUjC,EAAO2D,EAAWwE,GAClC,OAAKnI,EAAMgI,WAAa,UAAUjH,KAAK4C,GAC9B/D,EAASqC,OAAOjC,EAAM2H,UAAWhE,EAAWwE,GAC5CnI,EAAMgI,UAAU/F,OAChBjC,EAAMgI,UAAU/F,OAAOjC,EAAM+H,WAAYpE,EAAWwE,GAEpD1J,EAAWoF,MAGtBuE,UAAW,SAAUpI,GACnB,MAAO,CAACA,MAAOA,EAAM+H,YAAc/H,EAAM2H,UAAWF,KAAMzH,EAAMgI,WAAapI,OAGhF,MAAO,aAAc,OAExBnB,EAAWyG,WAAW,YAAa,aAlJjCE,CAAIC,EAAQ,KAAyBA,EAAQ,KAAeA,EAAQ,KAA6BA,EAAQ,O,qBCK1G,SAAS5G,GACZ,aAEA,SAAS4J,EAAQC,GAEf,IADA,IAAIC,EAAI,GACC3B,EAAI,EAAG4B,EAAIF,EAAMxE,OAAQ8C,EAAI4B,IAAK5B,EAAG2B,EAAED,EAAM1B,KAAM,EAC5D,OAAO2B,EAGT,IAAIE,EAAc,CAChB,QAAS,MAAO,QAAS,QAAS,QAAS,OAAQ,QAAS,MAAO,WAAY,KAAM,OACrF,QAAS,MAAO,MAAO,SAAU,QAAS,MAAO,KAAM,KAAM,SAAU,OAAQ,MAAO,KACtF,OAAQ,SAAU,QAAS,SAAU,OAAQ,QAAS,OAAQ,OAAQ,QAAS,SAC/E,QAAS,OAAQ,QAAS,QAAS,MAAO,QAAS,QAAS,QAAS,OAAQ,OAAQ,SACrF,SAAU,SAAU,OAAQ,SAAU,YAAa,UAAW,UAAW,OACzE,mBAAoB,SAAU,WAAY,UAAW,WAAY,WAAY,WAC5EC,EAAWL,EAAQI,GAElBE,EAAcN,EAAQ,CAAC,MAAO,QAAS,OAAQ,MAAO,QAAS,QAAS,SAAU,OAC3D,QAAS,OAAQ,OAAQ,UAChDO,EAAcP,EAAQ,CAAC,MAAO,UAC9BQ,EAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KACpCC,EAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAExCrK,EAAWW,WAAW,QAAQ,SAASM,GACrC,IAAIqJ,EAEJ,SAAS9I,EAAM+I,EAAQjJ,EAAQC,GAE7B,OADAA,EAAMG,SAAS6E,KAAKgE,GACbA,EAAOjJ,EAAQC,GAGxB,SAASiJ,EAAUlJ,EAAQC,GACzB,GAAID,EAAOyD,OAASzD,EAAOQ,MAAM,WAAaR,EAAOsB,MAEnD,OADArB,EAAMG,SAAS6E,KAAKkE,GACb,UAET,GAAInJ,EAAO2D,WAAY,OAAO,KAC9B,IAAwByF,EAApB/I,EAAKL,EAAOM,OAChB,GAAU,KAAND,GAAmB,KAANA,GAAmB,KAANA,EAC5B,OAAOH,EAAMmJ,EAAWhJ,EAAI,SAAgB,KAANA,GAAmB,KAANA,GAAYL,EAAQC,GAClE,GAAU,KAANI,EACT,OAAIiJ,EAAYtJ,GACPE,EAAMmJ,EAAWhJ,EAAI,YAAY,GAAOL,EAAQC,GAEhD,WACJ,GAAU,KAANI,EAAW,CACpB,IAAImB,EAAQ,SAAU+H,GAAQ,EAC1BvJ,EAAOO,IAAI,KAAMiB,EAAQ,OACpBxB,EAAOO,IAAI,QAASiB,EAAQ,SAC5BxB,EAAOO,IAAI,OAAQiB,EAAQ,WAC3BxB,EAAOO,IAAI,WAAYiB,EAAQ,SAAU+H,GAAQ,GAC1D,IAAIC,EAAQxJ,EAAOO,IAAI,YACvB,OAAKiJ,GACDV,EAAQW,qBAAqBD,KAAQA,EAAQV,EAAQU,IAClDtJ,EAAMmJ,EAAWG,EAAOhI,EAAO+H,GAAO,GAAOvJ,EAAQC,IAFzC,WAGd,GAAU,KAANI,EAET,OADAL,EAAO0J,YACA,UACF,GAAU,KAANrJ,IAAc+I,EAAIpJ,EAAOQ,MAAM,qDACxC,OAAON,EAAMyJ,EAAYP,EAAE,GAAIA,EAAE,IAAKpJ,EAAQC,GACzC,GAAU,KAANI,EAIT,OAHIL,EAAOO,IAAI,KAAMP,EAAOU,SAAS,cAC5BV,EAAOO,IAAI,KAAMP,EAAOU,SAAS,QACrCV,EAAOU,SAAS,SACd,SACF,GAAI,KAAKM,KAAKX,GAEnB,OADAL,EAAOQ,MAAM,6CACN,SACF,GAAU,KAANH,EAAW,CACpB,KAAOL,EAAOQ,MAAM,cAGpB,OAFIR,EAAOO,IAAI,MAAOP,EAAOU,SAAS,MACjCV,EAAOM,OACL,SACF,GAAU,KAAND,EACT,OAAIL,EAAOO,IAAI,KAAaL,EAAMmJ,EAAW,IAAK,QAAQ,GAAQrJ,EAAQC,GACtED,EAAOO,IAAI,KAAaL,EAAMmJ,EAAW,IAAK,QAAQ,GAAOrJ,EAAQC,GAGrED,EAAOO,IAAI,WACbP,EAAOO,IAAI,UACJ,QAILP,EAAOO,IAAI,sBACN,OAILP,EAAOO,IAAI,2BACbP,EAAOU,SAAS,oBAEhBV,EAAOO,IAAI,YACJ,QAEF,WACF,GAAU,KAANF,GAAaL,EAAOQ,MAAM,2BAGnC,OAFAR,EAAOO,IAAI,KACXP,EAAOU,SAAS,mBACT,aACF,GAAU,KAANL,EAQT,OAPIL,EAAOO,IAAI,aACbP,EAAOU,SAAS,QACPV,EAAOO,IAAI,MACpBP,EAAOO,IAAI,MAEXP,EAAOM,OAEF,aACF,GAAI,uBAAuBU,KAAKX,GAGrC,OAFAL,EAAOU,SAAS,mBAChBV,EAAOO,IAAI,UACPP,EAAOO,IAAI,KAAa,OACrB,QACF,GAAU,KAANF,IAAcJ,EAAM2J,SAA4B,KAAjB3J,EAAM4J,SAAmC,MAAjB5J,EAAM4J,QAGjE,IAAI,kBAAkB7I,KAAKX,GAEhC,OADA2I,EAAU3I,EACH,KACF,GAAU,KAANA,GAAaL,EAAOO,IAAI,KACjC,MAAO,QACF,GAAI,qBAAqBS,KAAKX,GAAK,CACxC,IAAIyJ,EAAO9J,EAAOU,SAAS,sBAE3B,MADU,KAANL,GAAcyJ,IAAMd,EAAU,KAC3B,WAEP,OAAO,KAXP,OADAA,EAAU,IACH,KAeX,SAASM,EAAYtJ,GAEnB,IADA,IAAmCM,EAA/ByJ,EAAQ/J,EAAOgK,IAAKtI,EAAQ,EAASuI,GAAQ,EAAOC,GAAU,EACjC,OAAzB5J,EAAON,EAAOM,SACpB,GAAK4J,EAYHA,GAAU,MAZE,CACZ,GAAI,MAAMC,QAAQ7J,IAAS,EACzBoB,SACK,GAAI,MAAMyI,QAAQ7J,IAAS,GAEhC,KADAoB,EACY,EAAG,WACV,GAAY,KAARpB,GAAwB,GAAToB,EAAY,CACpCuI,GAAQ,EACR,MAEFC,EAAkB,MAAR5J,EAMd,OADAN,EAAO6F,OAAO7F,EAAOgK,IAAMD,GACpBE,EAGT,SAASG,EAAoB1I,GAE3B,OADKA,IAAOA,EAAQ,GACb,SAAS1B,EAAQC,GACtB,GAAqB,KAAjBD,EAAOqK,OAAe,CACxB,GAAa,GAAT3I,EAEF,OADAzB,EAAMG,SAASkK,MACRrK,EAAMG,SAASH,EAAMG,SAAS2D,OAAO,GAAG/D,EAAQC,GAEvDA,EAAMG,SAASH,EAAMG,SAAS2D,OAAS,GAAKqG,EAAoB1I,EAAQ,OAEhD,KAAjB1B,EAAOqK,SAChBpK,EAAMG,SAASH,EAAMG,SAAS2D,OAAS,GAAKqG,EAAoB1I,EAAQ,IAE1E,OAAOwH,EAAUlJ,EAAQC,IAG7B,SAASsK,IACP,IAAIC,GAAgB,EACpB,OAAO,SAASxK,EAAQC,GACtB,OAAIuK,GACFvK,EAAMG,SAASkK,MACRrK,EAAMG,SAASH,EAAMG,SAAS2D,OAAO,GAAG/D,EAAQC,KAEzDuK,GAAgB,EACTtB,EAAUlJ,EAAQC,KAG7B,SAASoJ,EAAWjI,EAAOI,EAAO+H,EAAOkB,GACvC,OAAO,SAASzK,EAAQC,GACtB,IAAqBI,EAAjB6J,GAAU,EAOd,IAL2B,uBAAvBjK,EAAMgC,QAAQzC,OAChBS,EAAMgC,QAAUhC,EAAMgC,QAAQD,KAC9BhC,EAAOO,IAAI,MAGkB,OAAvBF,EAAKL,EAAOM,SAAiB,CACnC,GAAID,GAAMe,IAAUqJ,IAAcP,GAAU,CAC1CjK,EAAMG,SAASkK,MACf,MAEF,GAAIf,GAAe,KAANlJ,IAAc6J,EAAS,CAClC,GAAIlK,EAAOO,IAAI,KAAM,CACN,KAATa,IACFnB,EAAMgC,QAAU,CAACD,KAAM/B,EAAMgC,QAASzC,KAAM,uBAE9CS,EAAMG,SAAS6E,KAAKmF,KACpB,MACK,GAAI,QAAQpJ,KAAKhB,EAAOqK,QAAS,CACtCpK,EAAMG,SAAS6E,KAAKsF,KACpB,OAGJL,GAAWA,GAAiB,MAAN7J,EAExB,OAAOmB,GAGX,SAASmI,EAAYe,EAAQC,GAC3B,OAAO,SAAS3K,EAAQC,GAItB,OAHI0K,GAAW3K,EAAO2D,WAClB3D,EAAOQ,MAAMkK,GAASzK,EAAMG,SAASkK,MACpCtK,EAAO0J,YACL,UAGX,SAASP,EAAiBnJ,EAAQC,GAIhC,OAHID,EAAOyD,OAASzD,EAAOQ,MAAM,SAAWR,EAAOsB,OACjDrB,EAAMG,SAASkK,MACjBtK,EAAO0J,YACA,UAGT,MAAO,CACLpG,WAAY,WACV,MAAO,CAAClD,SAAU,CAAC8I,GACX/G,SAAU,EACVF,QAAS,CAACzC,KAAM,MAAO2C,UAAWxC,EAAOD,YACzCkL,eAAe,EACff,QAAS,KACTD,SAAS,IAGnBpG,MAAO,SAASxD,EAAQC,GACtB+I,EAAU,KACNhJ,EAAOyD,QAAOxD,EAAMkC,SAAWnC,EAAO0D,eAC1C,IAAoEmH,EAAhErJ,EAAQvB,EAAMG,SAASH,EAAMG,SAAS2D,OAAO,GAAG/D,EAAQC,GACxD6K,EAAU9B,EACd,GAAa,SAATxH,EAAkB,CACpB,IAAIuJ,EAAO/K,EAAO4C,UAML,YALbpB,EAAyB,KAAjBvB,EAAM4J,QAAiB,WAC3BlB,EAASc,qBAAqBzJ,EAAO4C,WAAa,UAClD,SAAS5B,KAAK+J,GAAQ,MACJ,OAAjB9K,EAAM4J,SAAqC,SAAjB5J,EAAM4J,SAAsB5J,EAAM2J,QAAW,MACxE,cAEFkB,EAAUC,EACNnC,EAAYa,qBAAqBsB,GAAOF,EAAS,SAC5ChC,EAAYY,qBAAqBsB,GAAOF,EAAS,SACxC,MAARE,GAAwB,UAARA,GAAqB/K,EAAOmB,UAAYnB,EAAO0D,cAExD,MAARqH,GAAgB9K,EAAMgC,QAAQE,SAAWlC,EAAMkC,WACtD0I,EAAS,UAFTA,EAAS,UAef,OAVI7B,GAAYxH,GAAkB,WAATA,KAAqBvB,EAAM4J,QAAUiB,GAC/C,KAAX9B,IAAgB/I,EAAM2J,SAAW3J,EAAM2J,SAE7B,UAAViB,GAAsB,WAAW7J,KAAKgI,GACxC/I,EAAMgC,QAAU,CAACD,KAAM/B,EAAMgC,QAASzC,KAAMwJ,GAAWxH,EAAOW,SAAUlC,EAAMkC,WAC5D,UAAV0I,GAAsB,WAAW7J,KAAKgI,KAAa/I,EAAMgC,QAAQD,OACzE/B,EAAMgC,QAAUhC,EAAMgC,QAAQD,MAE5BhC,EAAOsB,QACTrB,EAAM2K,cAA4B,MAAX5B,GAA4B,YAATxH,GACrCA,GAGTU,OAAQ,SAASjC,EAAO2D,GACtB,GAAI3D,EAAMG,SAASH,EAAMG,SAAS2D,OAAO,IAAMmF,EAAW,OAAOxK,EAAWoF,KAC5E,IAAIkH,EAAYpH,GAAaA,EAAUqH,OAAO,GAC1CC,EAAKjL,EAAMgC,QACXkJ,EAASD,EAAG1L,MAAQuJ,EAAQiC,IACnB,WAAXE,EAAG1L,MAAqB,0CAA0CwB,KAAK4C,GACzE,OAAOsH,EAAG/I,UAAYgJ,EAAS,EAAIxL,EAAOD,aACvCO,EAAM2K,cAAgBjL,EAAOD,WAAa,IAG/C4E,cAAe,oCACf8G,YAAa,IACbC,KAAM,aAIV3M,EAAWyG,WAAW,cAAe,QAErCzG,EAAW4M,eAAe,YAAa,OAAQ5C,GAvS3CrD,CAAIC,EAAQ,O,qBCKb,SAAS5G,GACZ,aAGEA,EAAWW,WAAW,QAAQ,SAASM,GACrC,IAAIE,EAAWnB,EAAW0I,QAAQzH,EAAQ,CAACkF,KAAM,cAC7C0G,EAAW7M,EAAW0I,QAAQzH,EAAQ,QAE1C,SAAS6L,EAAYC,GACnB,OAAO,SAASzL,EAAQC,GAEtB,OADSD,EAAOqK,QACNoB,GAA+C,GAAnCxL,EAAMyL,UAAUtL,SAAS2D,QAE7C/D,EAAOM,OACPL,EAAMG,SAAWuH,EACV,qBAEAgE,EAAK3L,EAAQC,IAK1B,SAAS0L,EAAK3L,EAAQC,GACpB,OAAID,EAAOQ,MAAM,OACfR,EAAO0J,YACA,WAEF6B,EAAS/H,MAAMxD,EAAQC,EAAMyL,WAGtC,SAAS/D,EAAK3H,EAAQC,GACpB,IAAII,EAAKL,EAAOqK,OAIhB,GAAiC,WAA7BpK,EAAM2L,cAAcpK,OAClBvB,EAAMkC,SAAWlC,EAAM2L,cAAczJ,SAEvC,OADAnC,EAAO0J,YACA,cAIX,GAAIzJ,EAAM6B,YAAa,CACrB,GAAU,KAANzB,GAAaL,EAAOQ,MAAM,MAE5B,OADAR,EAAO0J,YACA,MACF,GAAI1J,EAAOQ,MAAM,gBAEtB,OADAP,EAAMG,SAAWuL,EACV,UACF,GAAI3L,EAAOQ,MAAM,YACtB,MAAO,UACF,GAAU,KAANH,EAET,OADAL,EAAO0J,YACA,UAIX,IAAIzJ,EAAM6B,aAA4C,WAA7B7B,EAAM2L,cAAcpK,SAChC,KAANnB,GAAmB,KAANA,GAEhB,OADAL,EAAOQ,MAAM,aACN,gBAKX,GAAIP,EAAM6B,cAAgB9B,EAAOQ,MAAM,UAAO,KAAiB,KAANH,GAAmB,KAANA,GAEpE,OADAJ,EAAMG,SAAWuL,EACV1L,EAAMG,SAASJ,EAAQC,GAGhC,GAAiC,WAA7BA,EAAM2L,cAAcpK,OACS,qBAA7BvB,EAAM2L,cAAcpK,OACS,iBAA7BvB,EAAM2L,cAAcpK,MAA0B,CAChD,GAAU,KAANnB,EAEF,OADAJ,EAAMG,SAAWoL,EAAY,KACtBvL,EAAMG,SAASJ,EAAQC,GACzB,GAAU,KAANI,IACJL,EAAOQ,MAAM,UAEhB,OADAP,EAAMG,SAAWoL,EAAY,KACtBvL,EAAMG,SAASJ,EAAQC,GAKpC,OAAOJ,EAAS2D,MAAMxD,EAAQC,EAAM2H,WAGtC,MAAO,CAELtE,WAAY,WAGV,MAAO,CACLsE,UAHclJ,EAAW4E,WAAWzD,GAIpC6L,UAHchN,EAAW4E,WAAWiI,GAIpCpJ,SAAU,EACVyJ,cAAe,CAAEpK,MAAO,KAAMW,SAAU,GACxC/B,SAAUuH,IAIdO,UAAW,SAASjI,GAClB,MAAO,CACL2H,UAAYlJ,EAAWwJ,UAAUrI,EAAUI,EAAM2H,WACjD8D,UAAWhN,EAAWwJ,UAAUqD,EAAUtL,EAAMyL,WAChDvJ,SAAUlC,EAAMkC,SAChByJ,cAAe3L,EAAM2L,cACrBxL,SAAUH,EAAMG,WAIpBoD,MAAO,SAASxD,EAAQC,GAKtB,GAJID,EAAOyD,QACTxD,EAAMkC,SAAWnC,EAAO0D,cACxBzD,EAAM6B,aAAc,GAElB9B,EAAO2D,WAAY,OAAO,KAC9B,IAAInC,EAAQvB,EAAMG,SAASJ,EAAQC,GASnC,GARAA,EAAM6B,aAAc,EAGhBN,GAAkB,eAATA,IACXvB,EAAM2L,cAAgB,CAAEpK,MAAOA,EAAOW,SAAUlC,EAAMkC,WAIpDnC,EAAOsB,OAASrB,EAAMG,UAAYuL,EAAM,CAC1C3L,EAAO6F,OAAO,GACd,IAAIxF,EAAKL,EAAOqK,OAChBrK,EAAOM,OACHD,GAAY,KAANA,IACRJ,EAAMG,SAAWuH,GAarB,MATa,WAATnG,EACFA,EAAQ,MACU,eAATA,EACTA,EAAQ,UACU,iBAATA,EACTA,EAAQ,YACU,qBAATA,IACTA,EAAQ,MAEHA,MAGV,YAAa,QAEhB9C,EAAWyG,WAAW,cAAe,QA1JnCE,CAAIC,EAAQ,KAAyBA,EAAQ,KAA2BA,EAAQ","file":"static/js/14.f998331e.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function lower(tagName) {\n    return tagName && tagName.toLowerCase();\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName || \"\";\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(lower(parentTagName)) ||\n          !config.contextGrabbers[lower(parentTagName)].hasOwnProperty(lower(nextTagName))) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(lower(state.context.tagName)))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(lower(tagName))) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(lower(context.tagName))) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[lower(context.tagName)];\n          if (grabbers && grabbers.hasOwnProperty(lower(tagAfter[2])))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\\\s*\" + tagName + \"\\\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag,\n      allowMissingTagName: parserConfig.allowMissingTagName,\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction wordObj(words) {\n  var o = {};\n  for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n  return o;\n}\n\nvar keywordList = [\n  \"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\",\n  \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\",\n  \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\",\n  \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\",\n  \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\",\n  \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"\n], keywords = wordObj(keywordList);\n\nvar indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\", \"then\",\n                           \"catch\", \"loop\", \"proc\", \"begin\"]);\nvar dedentWords = wordObj([\"end\", \"until\"]);\nvar opening = {\"[\": \"]\", \"{\": \"}\", \"(\": \")\"};\nvar closing = {\"]\": \"[\", \"}\": \"{\", \")\": \"(\"};\n\nCodeMirror.defineMode(\"ruby\", function(config) {\n  var curPunc;\n\n  function chain(newtok, stream, state) {\n    state.tokenize.push(newtok);\n    return newtok(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n      state.tokenize.push(readBlockComment);\n      return \"comment\";\n    }\n    if (stream.eatSpace()) return null;\n    var ch = stream.next(), m;\n    if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n      return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n    } else if (ch == \"/\") {\n      if (regexpAhead(stream))\n        return chain(readQuoted(ch, \"string-2\", true), stream, state);\n      else\n        return \"operator\";\n    } else if (ch == \"%\") {\n      var style = \"string\", embed = true;\n      if (stream.eat(\"s\")) style = \"atom\";\n      else if (stream.eat(/[WQ]/)) style = \"string\";\n      else if (stream.eat(/[r]/)) style = \"string-2\";\n      else if (stream.eat(/[wxq]/)) { style = \"string\"; embed = false; }\n      var delim = stream.eat(/[^\\w\\s=]/);\n      if (!delim) return \"operator\";\n      if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\n      return chain(readQuoted(delim, style, embed, true), stream, state);\n    } else if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n      return chain(readHereDoc(m[2], m[1]), stream, state);\n    } else if (ch == \"0\") {\n      if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);\n      else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);\n      else stream.eatWhile(/[0-7]/);\n      return \"number\";\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n      return \"number\";\n    } else if (ch == \"?\") {\n      while (stream.match(/^\\\\[CM]-/)) {}\n      if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);\n      else stream.next();\n      return \"string\";\n    } else if (ch == \":\") {\n      if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n      if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state);\n\n      // :> :>> :< :<< are valid symbols\n      if (stream.eat(/[\\<\\>]/)) {\n        stream.eat(/[\\<\\>]/);\n        return \"atom\";\n      }\n\n      // :+ :- :/ :* :| :& :! are valid symbols\n      if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n        return \"atom\";\n      }\n\n      // Symbols can't start by a digit\n      if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n        stream.eatWhile(/[\\w$\\xa1-\\uffff]/);\n        // Only one ? ! = is allowed and only as the last character\n        stream.eat(/[\\?\\!\\=]/);\n        return \"atom\";\n      }\n      return \"operator\";\n    } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n      stream.eat(\"@\");\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      return \"variable-2\";\n    } else if (ch == \"$\") {\n      if (stream.eat(/[a-zA-Z_]/)) {\n        stream.eatWhile(/[\\w]/);\n      } else if (stream.eat(/\\d/)) {\n        stream.eat(/\\d/);\n      } else {\n        stream.next(); // Must be a special global like $: or $!\n      }\n      return \"variable-3\";\n    } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      stream.eat(/[\\?\\!]/);\n      if (stream.eat(\":\")) return \"atom\";\n      return \"ident\";\n    } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n      curPunc = \"|\";\n      return null;\n    } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    } else if (ch == \"-\" && stream.eat(\">\")) {\n      return \"arrow\";\n    } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n      var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n      if (ch == \".\" && !more) curPunc = \".\";\n      return \"operator\";\n    } else {\n      return null;\n    }\n  }\n\n  function regexpAhead(stream) {\n    var start = stream.pos, depth = 0, next, found = false, escaped = false\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (\"[{(\".indexOf(next) > -1) {\n          depth++\n        } else if (\"]})\".indexOf(next) > -1) {\n          depth--\n          if (depth < 0) break\n        } else if (next == \"/\" && depth == 0) {\n          found = true\n          break\n        }\n        escaped = next == \"\\\\\"\n      } else {\n        escaped = false\n      }\n    }\n    stream.backUp(stream.pos - start)\n    return found\n  }\n\n  function tokenBaseUntilBrace(depth) {\n    if (!depth) depth = 1;\n    return function(stream, state) {\n      if (stream.peek() == \"}\") {\n        if (depth == 1) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length-1](stream, state);\n        } else {\n          state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n        }\n      } else if (stream.peek() == \"{\") {\n        state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n      }\n      return tokenBase(stream, state);\n    };\n  }\n  function tokenBaseOnce() {\n    var alreadyCalled = false;\n    return function(stream, state) {\n      if (alreadyCalled) {\n        state.tokenize.pop();\n        return state.tokenize[state.tokenize.length-1](stream, state);\n      }\n      alreadyCalled = true;\n      return tokenBase(stream, state);\n    };\n  }\n  function readQuoted(quote, style, embed, unescaped) {\n    return function(stream, state) {\n      var escaped = false, ch;\n\n      if (state.context.type === 'read-quoted-paused') {\n        state.context = state.context.prev;\n        stream.eat(\"}\");\n      }\n\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && (unescaped || !escaped)) {\n          state.tokenize.pop();\n          break;\n        }\n        if (embed && ch == \"#\" && !escaped) {\n          if (stream.eat(\"{\")) {\n            if (quote == \"}\") {\n              state.context = {prev: state.context, type: 'read-quoted-paused'};\n            }\n            state.tokenize.push(tokenBaseUntilBrace());\n            break;\n          } else if (/[@\\$]/.test(stream.peek())) {\n            state.tokenize.push(tokenBaseOnce());\n            break;\n          }\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      return style;\n    };\n  }\n  function readHereDoc(phrase, mayIndent) {\n    return function(stream, state) {\n      if (mayIndent) stream.eatSpace()\n      if (stream.match(phrase)) state.tokenize.pop();\n      else stream.skipToEnd();\n      return \"string\";\n    };\n  }\n  function readBlockComment(stream, state) {\n    if (stream.sol() && stream.match(\"=end\") && stream.eol())\n      state.tokenize.pop();\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: [tokenBase],\n              indented: 0,\n              context: {type: \"top\", indented: -config.indentUnit},\n              continuedLine: false,\n              lastTok: null,\n              varList: false};\n    },\n\n    token: function(stream, state) {\n      curPunc = null;\n      if (stream.sol()) state.indented = stream.indentation();\n      var style = state.tokenize[state.tokenize.length-1](stream, state), kwtype;\n      var thisTok = curPunc;\n      if (style == \"ident\") {\n        var word = stream.current();\n        style = state.lastTok == \".\" ? \"property\"\n          : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n          : /^[A-Z]/.test(word) ? \"tag\"\n          : (state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList) ? \"def\"\n          : \"variable\";\n        if (style == \"keyword\") {\n          thisTok = word;\n          if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";\n          else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";\n          else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation())\n            kwtype = \"indent\";\n          else if (word == \"do\" && state.context.indented < state.indented)\n            kwtype = \"indent\";\n        }\n      }\n      if (curPunc || (style && style != \"comment\")) state.lastTok = thisTok;\n      if (curPunc == \"|\") state.varList = !state.varList;\n\n      if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc))\n        state.context = {prev: state.context, type: curPunc || style, indented: state.indented};\n      else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev)\n        state.context = state.context.prev;\n\n      if (stream.eol())\n        state.continuedLine = (curPunc == \"\\\\\" || style == \"operator\");\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize[state.tokenize.length-1] != tokenBase) return CodeMirror.Pass;\n      var firstChar = textAfter && textAfter.charAt(0);\n      var ct = state.context;\n      var closed = ct.type == closing[firstChar] ||\n        ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n      return ct.indented + (closed ? 0 : config.indentUnit) +\n        (state.continuedLine ? config.indentUnit : 0);\n    },\n\n    electricInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-ruby\", \"ruby\");\n\nCodeMirror.registerHelper(\"hintWords\", \"ruby\", keywordList);\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../ruby/ruby\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../ruby/ruby\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\n  // full haml mode. This handled embedded ruby and html fragments too\n  CodeMirror.defineMode(\"haml\", function(config) {\n    var htmlMode = CodeMirror.getMode(config, {name: \"htmlmixed\"});\n    var rubyMode = CodeMirror.getMode(config, \"ruby\");\n\n    function rubyInQuote(endQuote) {\n      return function(stream, state) {\n        var ch = stream.peek();\n        if (ch == endQuote && state.rubyState.tokenize.length == 1) {\n          // step out of ruby context as it seems to complete processing all the braces\n          stream.next();\n          state.tokenize = html;\n          return \"closeAttributeTag\";\n        } else {\n          return ruby(stream, state);\n        }\n      };\n    }\n\n    function ruby(stream, state) {\n      if (stream.match(\"-#\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n      return rubyMode.token(stream, state.rubyState);\n    }\n\n    function html(stream, state) {\n      var ch = stream.peek();\n\n      // handle haml declarations. All declarations that cant be handled here\n      // will be passed to html mode\n      if (state.previousToken.style == \"comment\" ) {\n        if (state.indented > state.previousToken.indented) {\n          stream.skipToEnd();\n          return \"commentLine\";\n        }\n      }\n\n      if (state.startOfLine) {\n        if (ch == \"!\" && stream.match(\"!!\")) {\n          stream.skipToEnd();\n          return \"tag\";\n        } else if (stream.match(/^%[\\w:#\\.]+=/)) {\n          state.tokenize = ruby;\n          return \"hamlTag\";\n        } else if (stream.match(/^%[\\w:]+/)) {\n          return \"hamlTag\";\n        } else if (ch == \"/\" ) {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n      }\n\n      if (state.startOfLine || state.previousToken.style == \"hamlTag\") {\n        if ( ch == \"#\" || ch == \".\") {\n          stream.match(/[\\w-#\\.]*/);\n          return \"hamlAttribute\";\n        }\n      }\n\n      // do not handle --> as valid ruby, make it HTML close comment instead\n      if (state.startOfLine && !stream.match(\"-->\", false) && (ch == \"=\" || ch == \"-\" )) {\n        state.tokenize = ruby;\n        return state.tokenize(stream, state);\n      }\n\n      if (state.previousToken.style == \"hamlTag\" ||\n          state.previousToken.style == \"closeAttributeTag\" ||\n          state.previousToken.style == \"hamlAttribute\") {\n        if (ch == \"(\") {\n          state.tokenize = rubyInQuote(\")\");\n          return state.tokenize(stream, state);\n        } else if (ch == \"{\") {\n          if (!stream.match(/^\\{%.*/)) {\n            state.tokenize = rubyInQuote(\"}\");\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n\n      return htmlMode.token(stream, state.htmlState);\n    }\n\n    return {\n      // default to html mode\n      startState: function() {\n        var htmlState = CodeMirror.startState(htmlMode);\n        var rubyState = CodeMirror.startState(rubyMode);\n        return {\n          htmlState: htmlState,\n          rubyState: rubyState,\n          indented: 0,\n          previousToken: { style: null, indented: 0},\n          tokenize: html\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          htmlState : CodeMirror.copyState(htmlMode, state.htmlState),\n          rubyState: CodeMirror.copyState(rubyMode, state.rubyState),\n          indented: state.indented,\n          previousToken: state.previousToken,\n          tokenize: state.tokenize\n        };\n      },\n\n      token: function(stream, state) {\n        if (stream.sol()) {\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n        }\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        state.startOfLine = false;\n        // dont record comment line as we only want to measure comment line with\n        // the opening comment block\n        if (style && style != \"commentLine\") {\n          state.previousToken = { style: style, indented: state.indented };\n        }\n        // if current state is ruby and the previous token is not `,` reset the\n        // tokenize to html\n        if (stream.eol() && state.tokenize == ruby) {\n          stream.backUp(1);\n          var ch = stream.peek();\n          stream.next();\n          if (ch && ch != \",\") {\n            state.tokenize = html;\n          }\n        }\n        // reprocess some of the specific style tag when finish setting previousToken\n        if (style == \"hamlTag\") {\n          style = \"tag\";\n        } else if (style == \"commentLine\") {\n          style = \"comment\";\n        } else if (style == \"hamlAttribute\") {\n          style = \"attribute\";\n        } else if (style == \"closeAttributeTag\") {\n          style = null;\n        }\n        return style;\n      }\n    };\n  }, \"htmlmixed\", \"ruby\");\n\n  CodeMirror.defineMIME(\"text/x-haml\", \"haml\");\n});\n"],"sourceRoot":""}