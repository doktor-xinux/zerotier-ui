{"version":3,"sources":["../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/jsx/jsx.js"],"names":["CodeMirror","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","defineMode","editorConf","config_","type","setStyle","indentUnit","config","defaults","htmlMode","prop","inText","stream","state","chain","parser","tokenize","ch","next","eat","match","inBlock","eatWhile","doctype","inTag","baseState","tagName","tagStart","test","inAttribute","stringStartCol","column","quote","closure","eol","isInAttribute","style","terminator","depth","lower","toLowerCase","Context","startOfLine","this","prev","context","indent","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","startState","baseIndent","token","sol","indentation","eatSpace","textAfter","fullLine","Pass","length","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","name","close","xmlCurrentContext","cx","push","reverse","defineMIME","mimeModes","mod","require","mode","copyContext","copyState","modeConfig","xmlMode","getMode","jsMode","base","flatXMLIndent","result","xmlToken","jsToken","skipToEnd","peek","xmlContext","lexical","stop","cur","indexOf","backUp","expressionAllowed","skipExpression","innerMode","typescript"],"mappings":"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","file":"static/js/28.1fe1b98c.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function lower(tagName) {\n    return tagName && tagName.toLowerCase();\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName || \"\";\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(lower(parentTagName)) ||\n          !config.contextGrabbers[lower(parentTagName)].hasOwnProperty(lower(nextTagName))) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(lower(state.context.tagName)))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(lower(tagName))) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(lower(context.tagName))) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[lower(context.tagName)];\n          if (grabbers && grabbers.hasOwnProperty(lower(tagAfter[2])))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"))\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\"], mod)\n  else // Plain browser env\n    mod(CodeMirror)\n})(function(CodeMirror) {\n  \"use strict\"\n\n  // Depth means the amount of open braces in JS context, in XML\n  // context 0 means not in tag, 1 means in tag, and 2 means in tag\n  // and js block comment.\n  function Context(state, mode, depth, prev) {\n    this.state = state; this.mode = mode; this.depth = depth; this.prev = prev\n  }\n\n  function copyContext(context) {\n    return new Context(CodeMirror.copyState(context.mode, context.state),\n                       context.mode,\n                       context.depth,\n                       context.prev && copyContext(context.prev))\n  }\n\n  CodeMirror.defineMode(\"jsx\", function(config, modeConfig) {\n    var xmlMode = CodeMirror.getMode(config, {name: \"xml\", allowMissing: true, multilineTagIndentPastTag: false, allowMissingTagName: true})\n    var jsMode = CodeMirror.getMode(config, modeConfig && modeConfig.base || \"javascript\")\n\n    function flatXMLIndent(state) {\n      var tagName = state.tagName\n      state.tagName = null\n      var result = xmlMode.indent(state, \"\", \"\")\n      state.tagName = tagName\n      return result\n    }\n\n    function token(stream, state) {\n      if (state.context.mode == xmlMode)\n        return xmlToken(stream, state, state.context)\n      else\n        return jsToken(stream, state, state.context)\n    }\n\n    function xmlToken(stream, state, cx) {\n      if (cx.depth == 2) { // Inside a JS /* */ comment\n        if (stream.match(/^.*?\\*\\//)) cx.depth = 1\n        else stream.skipToEnd()\n        return \"comment\"\n      }\n\n      if (stream.peek() == \"{\") {\n        xmlMode.skipAttribute(cx.state)\n\n        var indent = flatXMLIndent(cx.state), xmlContext = cx.state.context\n        // If JS starts on same line as tag\n        if (xmlContext && stream.match(/^[^>]*>\\s*$/, false)) {\n          while (xmlContext.prev && !xmlContext.startOfLine)\n            xmlContext = xmlContext.prev\n          // If tag starts the line, use XML indentation level\n          if (xmlContext.startOfLine) indent -= config.indentUnit\n          // Else use JS indentation level\n          else if (cx.prev.state.lexical) indent = cx.prev.state.lexical.indented\n        // Else if inside of tag\n        } else if (cx.depth == 1) {\n          indent += config.indentUnit\n        }\n\n        state.context = new Context(CodeMirror.startState(jsMode, indent),\n                                    jsMode, 0, state.context)\n        return null\n      }\n\n      if (cx.depth == 1) { // Inside of tag\n        if (stream.peek() == \"<\") { // Tag inside of tag\n          xmlMode.skipAttribute(cx.state)\n          state.context = new Context(CodeMirror.startState(xmlMode, flatXMLIndent(cx.state)),\n                                      xmlMode, 0, state.context)\n          return null\n        } else if (stream.match(\"//\")) {\n          stream.skipToEnd()\n          return \"comment\"\n        } else if (stream.match(\"/*\")) {\n          cx.depth = 2\n          return token(stream, state)\n        }\n      }\n\n      var style = xmlMode.token(stream, cx.state), cur = stream.current(), stop\n      if (/\\btag\\b/.test(style)) {\n        if (/>$/.test(cur)) {\n          if (cx.state.context) cx.depth = 0\n          else state.context = state.context.prev\n        } else if (/^</.test(cur)) {\n          cx.depth = 1\n        }\n      } else if (!style && (stop = cur.indexOf(\"{\")) > -1) {\n        stream.backUp(cur.length - stop)\n      }\n      return style\n    }\n\n    function jsToken(stream, state, cx) {\n      if (stream.peek() == \"<\" && jsMode.expressionAllowed(stream, cx.state)) {\n        state.context = new Context(CodeMirror.startState(xmlMode, jsMode.indent(cx.state, \"\", \"\")),\n                                    xmlMode, 0, state.context)\n        jsMode.skipExpression(cx.state)\n        return null\n      }\n\n      var style = jsMode.token(stream, cx.state)\n      if (!style && cx.depth != null) {\n        var cur = stream.current()\n        if (cur == \"{\") {\n          cx.depth++\n        } else if (cur == \"}\") {\n          if (--cx.depth == 0) state.context = state.context.prev\n        }\n      }\n      return style\n    }\n\n    return {\n      startState: function() {\n        return {context: new Context(CodeMirror.startState(jsMode), jsMode)}\n      },\n\n      copyState: function(state) {\n        return {context: copyContext(state.context)}\n      },\n\n      token: token,\n\n      indent: function(state, textAfter, fullLine) {\n        return state.context.mode.indent(state.context.state, textAfter, fullLine)\n      },\n\n      innerMode: function(state) {\n        return state.context\n      }\n    }\n  }, \"xml\", \"javascript\")\n\n  CodeMirror.defineMIME(\"text/jsx\", \"jsx\")\n  CodeMirror.defineMIME(\"text/typescript-jsx\", {name: \"jsx\", base: {name: \"javascript\", typescript: true}})\n});\n"],"sourceRoot":""}